(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([
  'static/chunks/node_modules__pnpm_6a9f8e4c._.js',
  {
    '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          ('use client');
          ('use strict');
          Object.defineProperty(exports, '__esModule', {
            value: true,
          });
          Object.defineProperty(exports, 'BailoutToCSR', {
            enumerable: true,
            get: function () {
              return BailoutToCSR;
            },
          });
          const _bailouttocsr = __turbopack_context__.r(
            '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/shared/lib/lazy-dynamic/bailout-to-csr.js [app-client] (ecmascript)',
          );
          function BailoutToCSR(param) {
            let { reason, children } = param;
            if (typeof window === 'undefined') {
              throw Object.defineProperty(new _bailouttocsr.BailoutToCSRError(reason), '__NEXT_ERROR_CODE', {
                value: 'E394',
                enumerable: false,
                configurable: true,
              });
            }
            return children;
          } //# sourceMappingURL=dynamic-bailout-to-csr.js.map
        }
      },
    '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/shared/lib/encode-uri-path.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          ('use strict');
          Object.defineProperty(exports, '__esModule', {
            value: true,
          });
          Object.defineProperty(exports, 'encodeURIPath', {
            enumerable: true,
            get: function () {
              return encodeURIPath;
            },
          });
          function encodeURIPath(file) {
            return file
              .split('/')
              .map((p) => encodeURIComponent(p))
              .join('/');
          } //# sourceMappingURL=encode-uri-path.js.map
        }
      },
    '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/shared/lib/lazy-dynamic/preload-chunks.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          ('use client');
          ('use strict');
          Object.defineProperty(exports, '__esModule', {
            value: true,
          });
          Object.defineProperty(exports, 'PreloadChunks', {
            enumerable: true,
            get: function () {
              return PreloadChunks;
            },
          });
          const _jsxruntime = __turbopack_context__.r(
            '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)',
          );
          const _reactdom = __turbopack_context__.r(
            '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/react-dom/index.js [app-client] (ecmascript)',
          );
          const _workasyncstorageexternal = __turbopack_context__.r(
            '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/server/app-render/work-async-storage.external.js [app-client] (ecmascript)',
          );
          const _encodeuripath = __turbopack_context__.r(
            '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/shared/lib/encode-uri-path.js [app-client] (ecmascript)',
          );
          function PreloadChunks(param) {
            let { moduleIds } = param;
            // Early return in client compilation and only load requestStore on server side
            if (typeof window !== 'undefined') {
              return null;
            }
            const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();
            if (workStore === undefined) {
              return null;
            }
            const allFiles = [];
            // Search the current dynamic call unique key id in react loadable manifest,
            // and find the corresponding CSS files to preload
            if (workStore.reactLoadableManifest && moduleIds) {
              const manifest = workStore.reactLoadableManifest;
              for (const key of moduleIds) {
                if (!manifest[key]) continue;
                const chunks = manifest[key].files;
                allFiles.push(...chunks);
              }
            }
            if (allFiles.length === 0) {
              return null;
            }
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
              children: allFiles.map((chunk) => {
                const href = workStore.assetPrefix + '/_next/' + (0, _encodeuripath.encodeURIPath)(chunk);
                const isCss = chunk.endsWith('.css');
                // If it's stylesheet we use `precedence` o help hoist with React Float.
                // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.
                // The `preload` for stylesheet is not optional.
                if (isCss) {
                  return /*#__PURE__*/ (0, _jsxruntime.jsx)(
                    'link',
                    {
                      // @ts-ignore
                      precedence: 'dynamic',
                      href: href,
                      rel: 'stylesheet',
                      as: 'style',
                    },
                    chunk,
                  );
                } else {
                  // If it's script we use ReactDOM.preload to preload the resources
                  (0, _reactdom.preload)(href, {
                    as: 'script',
                    fetchPriority: 'low',
                  });
                  return null;
                }
              }),
            });
          } //# sourceMappingURL=preload-chunks.js.map
        }
      },
    '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          (function () {
            var e = {
              675: function (e, r) {
                'use strict';
                r.byteLength = byteLength;
                r.toByteArray = toByteArray;
                r.fromByteArray = fromByteArray;
                var t = [];
                var f = [];
                var n = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
                var i = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                for (var o = 0, u = i.length; o < u; ++o) {
                  t[o] = i[o];
                  f[i.charCodeAt(o)] = o;
                }
                f['-'.charCodeAt(0)] = 62;
                f['_'.charCodeAt(0)] = 63;
                function getLens(e) {
                  var r = e.length;
                  if (r % 4 > 0) {
                    throw new Error('Invalid string. Length must be a multiple of 4');
                  }
                  var t = e.indexOf('=');
                  if (t === -1) t = r;
                  var f = t === r ? 0 : 4 - (t % 4);
                  return [t, f];
                }
                function byteLength(e) {
                  var r = getLens(e);
                  var t = r[0];
                  var f = r[1];
                  return ((t + f) * 3) / 4 - f;
                }
                function _byteLength(e, r, t) {
                  return ((r + t) * 3) / 4 - t;
                }
                function toByteArray(e) {
                  var r;
                  var t = getLens(e);
                  var i = t[0];
                  var o = t[1];
                  var u = new n(_byteLength(e, i, o));
                  var a = 0;
                  var s = o > 0 ? i - 4 : i;
                  var h;
                  for (h = 0; h < s; h += 4) {
                    r =
                      (f[e.charCodeAt(h)] << 18) |
                      (f[e.charCodeAt(h + 1)] << 12) |
                      (f[e.charCodeAt(h + 2)] << 6) |
                      f[e.charCodeAt(h + 3)];
                    u[a++] = (r >> 16) & 255;
                    u[a++] = (r >> 8) & 255;
                    u[a++] = r & 255;
                  }
                  if (o === 2) {
                    r = (f[e.charCodeAt(h)] << 2) | (f[e.charCodeAt(h + 1)] >> 4);
                    u[a++] = r & 255;
                  }
                  if (o === 1) {
                    r = (f[e.charCodeAt(h)] << 10) | (f[e.charCodeAt(h + 1)] << 4) | (f[e.charCodeAt(h + 2)] >> 2);
                    u[a++] = (r >> 8) & 255;
                    u[a++] = r & 255;
                  }
                  return u;
                }
                function tripletToBase64(e) {
                  return t[(e >> 18) & 63] + t[(e >> 12) & 63] + t[(e >> 6) & 63] + t[e & 63];
                }
                function encodeChunk(e, r, t) {
                  var f;
                  var n = [];
                  for (var i = r; i < t; i += 3) {
                    f = ((e[i] << 16) & 16711680) + ((e[i + 1] << 8) & 65280) + (e[i + 2] & 255);
                    n.push(tripletToBase64(f));
                  }
                  return n.join('');
                }
                function fromByteArray(e) {
                  var r;
                  var f = e.length;
                  var n = f % 3;
                  var i = [];
                  var o = 16383;
                  for (var u = 0, a = f - n; u < a; u += o) {
                    i.push(encodeChunk(e, u, u + o > a ? a : u + o));
                  }
                  if (n === 1) {
                    r = e[f - 1];
                    i.push(t[r >> 2] + t[(r << 4) & 63] + '==');
                  } else if (n === 2) {
                    r = (e[f - 2] << 8) + e[f - 1];
                    i.push(t[r >> 10] + t[(r >> 4) & 63] + t[(r << 2) & 63] + '=');
                  }
                  return i.join('');
                }
              },
              72: function (e, r, t) {
                'use strict';
                /*!
                 * The buffer module from node.js, for the browser.
                 *
                 * @author   Feross Aboukhadijeh <https://feross.org>
                 * @license  MIT
                 */ var f = t(675);
                var n = t(783);
                var i =
                  typeof Symbol === 'function' && typeof Symbol.for === 'function'
                    ? Symbol.for('nodejs.util.inspect.custom')
                    : null;
                r.Buffer = Buffer;
                r.SlowBuffer = SlowBuffer;
                r.INSPECT_MAX_BYTES = 50;
                var o = 2147483647;
                r.kMaxLength = o;
                Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();
                if (
                  !Buffer.TYPED_ARRAY_SUPPORT &&
                  typeof console !== 'undefined' &&
                  typeof console.error === 'function'
                ) {
                  console.error(
                    'This browser lacks typed array (Uint8Array) support which is required by ' +
                      '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.',
                  );
                }
                function typedArraySupport() {
                  try {
                    var e = new Uint8Array(1);
                    var r = {
                      foo: function () {
                        return 42;
                      },
                    };
                    Object.setPrototypeOf(r, Uint8Array.prototype);
                    Object.setPrototypeOf(e, r);
                    return e.foo() === 42;
                  } catch (e) {
                    return false;
                  }
                }
                Object.defineProperty(Buffer.prototype, 'parent', {
                  enumerable: true,
                  get: function () {
                    if (!Buffer.isBuffer(this)) return undefined;
                    return this.buffer;
                  },
                });
                Object.defineProperty(Buffer.prototype, 'offset', {
                  enumerable: true,
                  get: function () {
                    if (!Buffer.isBuffer(this)) return undefined;
                    return this.byteOffset;
                  },
                });
                function createBuffer(e) {
                  if (e > o) {
                    throw new RangeError('The value "' + e + '" is invalid for option "size"');
                  }
                  var r = new Uint8Array(e);
                  Object.setPrototypeOf(r, Buffer.prototype);
                  return r;
                }
                function Buffer(e, r, t) {
                  if (typeof e === 'number') {
                    if (typeof r === 'string') {
                      throw new TypeError('The "string" argument must be of type string. Received type number');
                    }
                    return allocUnsafe(e);
                  }
                  return from(e, r, t);
                }
                Buffer.poolSize = 8192;
                function from(e, r, t) {
                  if (typeof e === 'string') {
                    return fromString(e, r);
                  }
                  if (ArrayBuffer.isView(e)) {
                    return fromArrayLike(e);
                  }
                  if (e == null) {
                    throw new TypeError(
                      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
                        'or Array-like Object. Received type ' +
                        typeof e,
                    );
                  }
                  if (isInstance(e, ArrayBuffer) || (e && isInstance(e.buffer, ArrayBuffer))) {
                    return fromArrayBuffer(e, r, t);
                  }
                  if (
                    typeof SharedArrayBuffer !== 'undefined' &&
                    (isInstance(e, SharedArrayBuffer) || (e && isInstance(e.buffer, SharedArrayBuffer)))
                  ) {
                    return fromArrayBuffer(e, r, t);
                  }
                  if (typeof e === 'number') {
                    throw new TypeError('The "value" argument must not be of type number. Received type number');
                  }
                  var f = e.valueOf && e.valueOf();
                  if (f != null && f !== e) {
                    return Buffer.from(f, r, t);
                  }
                  var n = fromObject(e);
                  if (n) return n;
                  if (
                    typeof Symbol !== 'undefined' &&
                    Symbol.toPrimitive != null &&
                    typeof e[Symbol.toPrimitive] === 'function'
                  ) {
                    return Buffer.from(e[Symbol.toPrimitive]('string'), r, t);
                  }
                  throw new TypeError(
                    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
                      'or Array-like Object. Received type ' +
                      typeof e,
                  );
                }
                Buffer.from = function (e, r, t) {
                  return from(e, r, t);
                };
                Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
                Object.setPrototypeOf(Buffer, Uint8Array);
                function assertSize(e) {
                  if (typeof e !== 'number') {
                    throw new TypeError('"size" argument must be of type number');
                  } else if (e < 0) {
                    throw new RangeError('The value "' + e + '" is invalid for option "size"');
                  }
                }
                function alloc(e, r, t) {
                  assertSize(e);
                  if (e <= 0) {
                    return createBuffer(e);
                  }
                  if (r !== undefined) {
                    return typeof t === 'string' ? createBuffer(e).fill(r, t) : createBuffer(e).fill(r);
                  }
                  return createBuffer(e);
                }
                Buffer.alloc = function (e, r, t) {
                  return alloc(e, r, t);
                };
                function allocUnsafe(e) {
                  assertSize(e);
                  return createBuffer(e < 0 ? 0 : checked(e) | 0);
                }
                Buffer.allocUnsafe = function (e) {
                  return allocUnsafe(e);
                };
                Buffer.allocUnsafeSlow = function (e) {
                  return allocUnsafe(e);
                };
                function fromString(e, r) {
                  if (typeof r !== 'string' || r === '') {
                    r = 'utf8';
                  }
                  if (!Buffer.isEncoding(r)) {
                    throw new TypeError('Unknown encoding: ' + r);
                  }
                  var t = byteLength(e, r) | 0;
                  var f = createBuffer(t);
                  var n = f.write(e, r);
                  if (n !== t) {
                    f = f.slice(0, n);
                  }
                  return f;
                }
                function fromArrayLike(e) {
                  var r = e.length < 0 ? 0 : checked(e.length) | 0;
                  var t = createBuffer(r);
                  for (var f = 0; f < r; f += 1) {
                    t[f] = e[f] & 255;
                  }
                  return t;
                }
                function fromArrayBuffer(e, r, t) {
                  if (r < 0 || e.byteLength < r) {
                    throw new RangeError('"offset" is outside of buffer bounds');
                  }
                  if (e.byteLength < r + (t || 0)) {
                    throw new RangeError('"length" is outside of buffer bounds');
                  }
                  var f;
                  if (r === undefined && t === undefined) {
                    f = new Uint8Array(e);
                  } else if (t === undefined) {
                    f = new Uint8Array(e, r);
                  } else {
                    f = new Uint8Array(e, r, t);
                  }
                  Object.setPrototypeOf(f, Buffer.prototype);
                  return f;
                }
                function fromObject(e) {
                  if (Buffer.isBuffer(e)) {
                    var r = checked(e.length) | 0;
                    var t = createBuffer(r);
                    if (t.length === 0) {
                      return t;
                    }
                    e.copy(t, 0, 0, r);
                    return t;
                  }
                  if (e.length !== undefined) {
                    if (typeof e.length !== 'number' || numberIsNaN(e.length)) {
                      return createBuffer(0);
                    }
                    return fromArrayLike(e);
                  }
                  if (e.type === 'Buffer' && Array.isArray(e.data)) {
                    return fromArrayLike(e.data);
                  }
                }
                function checked(e) {
                  if (e >= o) {
                    throw new RangeError(
                      'Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + o.toString(16) + ' bytes',
                    );
                  }
                  return e | 0;
                }
                function SlowBuffer(e) {
                  if (+e != e) {
                    e = 0;
                  }
                  return Buffer.alloc(+e);
                }
                Buffer.isBuffer = function isBuffer(e) {
                  return e != null && e._isBuffer === true && e !== Buffer.prototype;
                };
                Buffer.compare = function compare(e, r) {
                  if (isInstance(e, Uint8Array)) e = Buffer.from(e, e.offset, e.byteLength);
                  if (isInstance(r, Uint8Array)) r = Buffer.from(r, r.offset, r.byteLength);
                  if (!Buffer.isBuffer(e) || !Buffer.isBuffer(r)) {
                    throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                  }
                  if (e === r) return 0;
                  var t = e.length;
                  var f = r.length;
                  for (var n = 0, i = Math.min(t, f); n < i; ++n) {
                    if (e[n] !== r[n]) {
                      t = e[n];
                      f = r[n];
                      break;
                    }
                  }
                  if (t < f) return -1;
                  if (f < t) return 1;
                  return 0;
                };
                Buffer.isEncoding = function isEncoding(e) {
                  switch (String(e).toLowerCase()) {
                    case 'hex':
                    case 'utf8':
                    case 'utf-8':
                    case 'ascii':
                    case 'latin1':
                    case 'binary':
                    case 'base64':
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                      return true;
                    default:
                      return false;
                  }
                };
                Buffer.concat = function concat(e, r) {
                  if (!Array.isArray(e)) {
                    throw new TypeError('"list" argument must be an Array of Buffers');
                  }
                  if (e.length === 0) {
                    return Buffer.alloc(0);
                  }
                  var t;
                  if (r === undefined) {
                    r = 0;
                    for (t = 0; t < e.length; ++t) {
                      r += e[t].length;
                    }
                  }
                  var f = Buffer.allocUnsafe(r);
                  var n = 0;
                  for (t = 0; t < e.length; ++t) {
                    var i = e[t];
                    if (isInstance(i, Uint8Array)) {
                      i = Buffer.from(i);
                    }
                    if (!Buffer.isBuffer(i)) {
                      throw new TypeError('"list" argument must be an Array of Buffers');
                    }
                    i.copy(f, n);
                    n += i.length;
                  }
                  return f;
                };
                function byteLength(e, r) {
                  if (Buffer.isBuffer(e)) {
                    return e.length;
                  }
                  if (ArrayBuffer.isView(e) || isInstance(e, ArrayBuffer)) {
                    return e.byteLength;
                  }
                  if (typeof e !== 'string') {
                    throw new TypeError(
                      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
                        'Received type ' +
                        typeof e,
                    );
                  }
                  var t = e.length;
                  var f = arguments.length > 2 && arguments[2] === true;
                  if (!f && t === 0) return 0;
                  var n = false;
                  for (;;) {
                    switch (r) {
                      case 'ascii':
                      case 'latin1':
                      case 'binary':
                        return t;
                      case 'utf8':
                      case 'utf-8':
                        return utf8ToBytes(e).length;
                      case 'ucs2':
                      case 'ucs-2':
                      case 'utf16le':
                      case 'utf-16le':
                        return t * 2;
                      case 'hex':
                        return t >>> 1;
                      case 'base64':
                        return base64ToBytes(e).length;
                      default:
                        if (n) {
                          return f ? -1 : utf8ToBytes(e).length;
                        }
                        r = ('' + r).toLowerCase();
                        n = true;
                    }
                  }
                }
                Buffer.byteLength = byteLength;
                function slowToString(e, r, t) {
                  var f = false;
                  if (r === undefined || r < 0) {
                    r = 0;
                  }
                  if (r > this.length) {
                    return '';
                  }
                  if (t === undefined || t > this.length) {
                    t = this.length;
                  }
                  if (t <= 0) {
                    return '';
                  }
                  t >>>= 0;
                  r >>>= 0;
                  if (t <= r) {
                    return '';
                  }
                  if (!e) e = 'utf8';
                  while (true) {
                    switch (e) {
                      case 'hex':
                        return hexSlice(this, r, t);
                      case 'utf8':
                      case 'utf-8':
                        return utf8Slice(this, r, t);
                      case 'ascii':
                        return asciiSlice(this, r, t);
                      case 'latin1':
                      case 'binary':
                        return latin1Slice(this, r, t);
                      case 'base64':
                        return base64Slice(this, r, t);
                      case 'ucs2':
                      case 'ucs-2':
                      case 'utf16le':
                      case 'utf-16le':
                        return utf16leSlice(this, r, t);
                      default:
                        if (f) throw new TypeError('Unknown encoding: ' + e);
                        e = (e + '').toLowerCase();
                        f = true;
                    }
                  }
                }
                Buffer.prototype._isBuffer = true;
                function swap(e, r, t) {
                  var f = e[r];
                  e[r] = e[t];
                  e[t] = f;
                }
                Buffer.prototype.swap16 = function swap16() {
                  var e = this.length;
                  if (e % 2 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 16-bits');
                  }
                  for (var r = 0; r < e; r += 2) {
                    swap(this, r, r + 1);
                  }
                  return this;
                };
                Buffer.prototype.swap32 = function swap32() {
                  var e = this.length;
                  if (e % 4 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 32-bits');
                  }
                  for (var r = 0; r < e; r += 4) {
                    swap(this, r, r + 3);
                    swap(this, r + 1, r + 2);
                  }
                  return this;
                };
                Buffer.prototype.swap64 = function swap64() {
                  var e = this.length;
                  if (e % 8 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 64-bits');
                  }
                  for (var r = 0; r < e; r += 8) {
                    swap(this, r, r + 7);
                    swap(this, r + 1, r + 6);
                    swap(this, r + 2, r + 5);
                    swap(this, r + 3, r + 4);
                  }
                  return this;
                };
                Buffer.prototype.toString = function toString() {
                  var e = this.length;
                  if (e === 0) return '';
                  if (arguments.length === 0) return utf8Slice(this, 0, e);
                  return slowToString.apply(this, arguments);
                };
                Buffer.prototype.toLocaleString = Buffer.prototype.toString;
                Buffer.prototype.equals = function equals(e) {
                  if (!Buffer.isBuffer(e)) throw new TypeError('Argument must be a Buffer');
                  if (this === e) return true;
                  return Buffer.compare(this, e) === 0;
                };
                Buffer.prototype.inspect = function inspect() {
                  var e = '';
                  var t = r.INSPECT_MAX_BYTES;
                  e = this.toString('hex', 0, t)
                    .replace(/(.{2})/g, '$1 ')
                    .trim();
                  if (this.length > t) e += ' ... ';
                  return '<Buffer ' + e + '>';
                };
                if (i) {
                  Buffer.prototype[i] = Buffer.prototype.inspect;
                }
                Buffer.prototype.compare = function compare(e, r, t, f, n) {
                  if (isInstance(e, Uint8Array)) {
                    e = Buffer.from(e, e.offset, e.byteLength);
                  }
                  if (!Buffer.isBuffer(e)) {
                    throw new TypeError(
                      'The "target" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof e,
                    );
                  }
                  if (r === undefined) {
                    r = 0;
                  }
                  if (t === undefined) {
                    t = e ? e.length : 0;
                  }
                  if (f === undefined) {
                    f = 0;
                  }
                  if (n === undefined) {
                    n = this.length;
                  }
                  if (r < 0 || t > e.length || f < 0 || n > this.length) {
                    throw new RangeError('out of range index');
                  }
                  if (f >= n && r >= t) {
                    return 0;
                  }
                  if (f >= n) {
                    return -1;
                  }
                  if (r >= t) {
                    return 1;
                  }
                  r >>>= 0;
                  t >>>= 0;
                  f >>>= 0;
                  n >>>= 0;
                  if (this === e) return 0;
                  var i = n - f;
                  var o = t - r;
                  var u = Math.min(i, o);
                  var a = this.slice(f, n);
                  var s = e.slice(r, t);
                  for (var h = 0; h < u; ++h) {
                    if (a[h] !== s[h]) {
                      i = a[h];
                      o = s[h];
                      break;
                    }
                  }
                  if (i < o) return -1;
                  if (o < i) return 1;
                  return 0;
                };
                function bidirectionalIndexOf(e, r, t, f, n) {
                  if (e.length === 0) return -1;
                  if (typeof t === 'string') {
                    f = t;
                    t = 0;
                  } else if (t > 2147483647) {
                    t = 2147483647;
                  } else if (t < -2147483648) {
                    t = -2147483648;
                  }
                  t = +t;
                  if (numberIsNaN(t)) {
                    t = n ? 0 : e.length - 1;
                  }
                  if (t < 0) t = e.length + t;
                  if (t >= e.length) {
                    if (n) return -1;
                    else t = e.length - 1;
                  } else if (t < 0) {
                    if (n) t = 0;
                    else return -1;
                  }
                  if (typeof r === 'string') {
                    r = Buffer.from(r, f);
                  }
                  if (Buffer.isBuffer(r)) {
                    if (r.length === 0) {
                      return -1;
                    }
                    return arrayIndexOf(e, r, t, f, n);
                  } else if (typeof r === 'number') {
                    r = r & 255;
                    if (typeof Uint8Array.prototype.indexOf === 'function') {
                      if (n) {
                        return Uint8Array.prototype.indexOf.call(e, r, t);
                      } else {
                        return Uint8Array.prototype.lastIndexOf.call(e, r, t);
                      }
                    }
                    return arrayIndexOf(e, [r], t, f, n);
                  }
                  throw new TypeError('val must be string, number or Buffer');
                }
                function arrayIndexOf(e, r, t, f, n) {
                  var i = 1;
                  var o = e.length;
                  var u = r.length;
                  if (f !== undefined) {
                    f = String(f).toLowerCase();
                    if (f === 'ucs2' || f === 'ucs-2' || f === 'utf16le' || f === 'utf-16le') {
                      if (e.length < 2 || r.length < 2) {
                        return -1;
                      }
                      i = 2;
                      o /= 2;
                      u /= 2;
                      t /= 2;
                    }
                  }
                  function read(e, r) {
                    if (i === 1) {
                      return e[r];
                    } else {
                      return e.readUInt16BE(r * i);
                    }
                  }
                  var a;
                  if (n) {
                    var s = -1;
                    for (a = t; a < o; a++) {
                      if (read(e, a) === read(r, s === -1 ? 0 : a - s)) {
                        if (s === -1) s = a;
                        if (a - s + 1 === u) return s * i;
                      } else {
                        if (s !== -1) a -= a - s;
                        s = -1;
                      }
                    }
                  } else {
                    if (t + u > o) t = o - u;
                    for (a = t; a >= 0; a--) {
                      var h = true;
                      for (var c = 0; c < u; c++) {
                        if (read(e, a + c) !== read(r, c)) {
                          h = false;
                          break;
                        }
                      }
                      if (h) return a;
                    }
                  }
                  return -1;
                }
                Buffer.prototype.includes = function includes(e, r, t) {
                  return this.indexOf(e, r, t) !== -1;
                };
                Buffer.prototype.indexOf = function indexOf(e, r, t) {
                  return bidirectionalIndexOf(this, e, r, t, true);
                };
                Buffer.prototype.lastIndexOf = function lastIndexOf(e, r, t) {
                  return bidirectionalIndexOf(this, e, r, t, false);
                };
                function hexWrite(e, r, t, f) {
                  t = Number(t) || 0;
                  var n = e.length - t;
                  if (!f) {
                    f = n;
                  } else {
                    f = Number(f);
                    if (f > n) {
                      f = n;
                    }
                  }
                  var i = r.length;
                  if (f > i / 2) {
                    f = i / 2;
                  }
                  for (var o = 0; o < f; ++o) {
                    var u = parseInt(r.substr(o * 2, 2), 16);
                    if (numberIsNaN(u)) return o;
                    e[t + o] = u;
                  }
                  return o;
                }
                function utf8Write(e, r, t, f) {
                  return blitBuffer(utf8ToBytes(r, e.length - t), e, t, f);
                }
                function asciiWrite(e, r, t, f) {
                  return blitBuffer(asciiToBytes(r), e, t, f);
                }
                function latin1Write(e, r, t, f) {
                  return asciiWrite(e, r, t, f);
                }
                function base64Write(e, r, t, f) {
                  return blitBuffer(base64ToBytes(r), e, t, f);
                }
                function ucs2Write(e, r, t, f) {
                  return blitBuffer(utf16leToBytes(r, e.length - t), e, t, f);
                }
                Buffer.prototype.write = function write(e, r, t, f) {
                  if (r === undefined) {
                    f = 'utf8';
                    t = this.length;
                    r = 0;
                  } else if (t === undefined && typeof r === 'string') {
                    f = r;
                    t = this.length;
                    r = 0;
                  } else if (isFinite(r)) {
                    r = r >>> 0;
                    if (isFinite(t)) {
                      t = t >>> 0;
                      if (f === undefined) f = 'utf8';
                    } else {
                      f = t;
                      t = undefined;
                    }
                  } else {
                    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
                  }
                  var n = this.length - r;
                  if (t === undefined || t > n) t = n;
                  if ((e.length > 0 && (t < 0 || r < 0)) || r > this.length) {
                    throw new RangeError('Attempt to write outside buffer bounds');
                  }
                  if (!f) f = 'utf8';
                  var i = false;
                  for (;;) {
                    switch (f) {
                      case 'hex':
                        return hexWrite(this, e, r, t);
                      case 'utf8':
                      case 'utf-8':
                        return utf8Write(this, e, r, t);
                      case 'ascii':
                        return asciiWrite(this, e, r, t);
                      case 'latin1':
                      case 'binary':
                        return latin1Write(this, e, r, t);
                      case 'base64':
                        return base64Write(this, e, r, t);
                      case 'ucs2':
                      case 'ucs-2':
                      case 'utf16le':
                      case 'utf-16le':
                        return ucs2Write(this, e, r, t);
                      default:
                        if (i) throw new TypeError('Unknown encoding: ' + f);
                        f = ('' + f).toLowerCase();
                        i = true;
                    }
                  }
                };
                Buffer.prototype.toJSON = function toJSON() {
                  return {
                    type: 'Buffer',
                    data: Array.prototype.slice.call(this._arr || this, 0),
                  };
                };
                function base64Slice(e, r, t) {
                  if (r === 0 && t === e.length) {
                    return f.fromByteArray(e);
                  } else {
                    return f.fromByteArray(e.slice(r, t));
                  }
                }
                function utf8Slice(e, r, t) {
                  t = Math.min(e.length, t);
                  var f = [];
                  var n = r;
                  while (n < t) {
                    var i = e[n];
                    var o = null;
                    var u = i > 239 ? 4 : i > 223 ? 3 : i > 191 ? 2 : 1;
                    if (n + u <= t) {
                      var a, s, h, c;
                      switch (u) {
                        case 1:
                          if (i < 128) {
                            o = i;
                          }
                          break;
                        case 2:
                          a = e[n + 1];
                          if ((a & 192) === 128) {
                            c = ((i & 31) << 6) | (a & 63);
                            if (c > 127) {
                              o = c;
                            }
                          }
                          break;
                        case 3:
                          a = e[n + 1];
                          s = e[n + 2];
                          if ((a & 192) === 128 && (s & 192) === 128) {
                            c = ((i & 15) << 12) | ((a & 63) << 6) | (s & 63);
                            if (c > 2047 && (c < 55296 || c > 57343)) {
                              o = c;
                            }
                          }
                          break;
                        case 4:
                          a = e[n + 1];
                          s = e[n + 2];
                          h = e[n + 3];
                          if ((a & 192) === 128 && (s & 192) === 128 && (h & 192) === 128) {
                            c = ((i & 15) << 18) | ((a & 63) << 12) | ((s & 63) << 6) | (h & 63);
                            if (c > 65535 && c < 1114112) {
                              o = c;
                            }
                          }
                      }
                    }
                    if (o === null) {
                      o = 65533;
                      u = 1;
                    } else if (o > 65535) {
                      o -= 65536;
                      f.push(((o >>> 10) & 1023) | 55296);
                      o = 56320 | (o & 1023);
                    }
                    f.push(o);
                    n += u;
                  }
                  return decodeCodePointsArray(f);
                }
                var u = 4096;
                function decodeCodePointsArray(e) {
                  var r = e.length;
                  if (r <= u) {
                    return String.fromCharCode.apply(String, e);
                  }
                  var t = '';
                  var f = 0;
                  while (f < r) {
                    t += String.fromCharCode.apply(String, e.slice(f, (f += u)));
                  }
                  return t;
                }
                function asciiSlice(e, r, t) {
                  var f = '';
                  t = Math.min(e.length, t);
                  for (var n = r; n < t; ++n) {
                    f += String.fromCharCode(e[n] & 127);
                  }
                  return f;
                }
                function latin1Slice(e, r, t) {
                  var f = '';
                  t = Math.min(e.length, t);
                  for (var n = r; n < t; ++n) {
                    f += String.fromCharCode(e[n]);
                  }
                  return f;
                }
                function hexSlice(e, r, t) {
                  var f = e.length;
                  if (!r || r < 0) r = 0;
                  if (!t || t < 0 || t > f) t = f;
                  var n = '';
                  for (var i = r; i < t; ++i) {
                    n += s[e[i]];
                  }
                  return n;
                }
                function utf16leSlice(e, r, t) {
                  var f = e.slice(r, t);
                  var n = '';
                  for (var i = 0; i < f.length; i += 2) {
                    n += String.fromCharCode(f[i] + f[i + 1] * 256);
                  }
                  return n;
                }
                Buffer.prototype.slice = function slice(e, r) {
                  var t = this.length;
                  e = ~~e;
                  r = r === undefined ? t : ~~r;
                  if (e < 0) {
                    e += t;
                    if (e < 0) e = 0;
                  } else if (e > t) {
                    e = t;
                  }
                  if (r < 0) {
                    r += t;
                    if (r < 0) r = 0;
                  } else if (r > t) {
                    r = t;
                  }
                  if (r < e) r = e;
                  var f = this.subarray(e, r);
                  Object.setPrototypeOf(f, Buffer.prototype);
                  return f;
                };
                function checkOffset(e, r, t) {
                  if (e % 1 !== 0 || e < 0) throw new RangeError('offset is not uint');
                  if (e + r > t) throw new RangeError('Trying to access beyond buffer length');
                }
                Buffer.prototype.readUIntLE = function readUIntLE(e, r, t) {
                  e = e >>> 0;
                  r = r >>> 0;
                  if (!t) checkOffset(e, r, this.length);
                  var f = this[e];
                  var n = 1;
                  var i = 0;
                  while (++i < r && (n *= 256)) {
                    f += this[e + i] * n;
                  }
                  return f;
                };
                Buffer.prototype.readUIntBE = function readUIntBE(e, r, t) {
                  e = e >>> 0;
                  r = r >>> 0;
                  if (!t) {
                    checkOffset(e, r, this.length);
                  }
                  var f = this[e + --r];
                  var n = 1;
                  while (r > 0 && (n *= 256)) {
                    f += this[e + --r] * n;
                  }
                  return f;
                };
                Buffer.prototype.readUInt8 = function readUInt8(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 1, this.length);
                  return this[e];
                };
                Buffer.prototype.readUInt16LE = function readUInt16LE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 2, this.length);
                  return this[e] | (this[e + 1] << 8);
                };
                Buffer.prototype.readUInt16BE = function readUInt16BE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 2, this.length);
                  return (this[e] << 8) | this[e + 1];
                };
                Buffer.prototype.readUInt32LE = function readUInt32LE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 4, this.length);
                  return (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) + this[e + 3] * 16777216;
                };
                Buffer.prototype.readUInt32BE = function readUInt32BE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 4, this.length);
                  return this[e] * 16777216 + ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3]);
                };
                Buffer.prototype.readIntLE = function readIntLE(e, r, t) {
                  e = e >>> 0;
                  r = r >>> 0;
                  if (!t) checkOffset(e, r, this.length);
                  var f = this[e];
                  var n = 1;
                  var i = 0;
                  while (++i < r && (n *= 256)) {
                    f += this[e + i] * n;
                  }
                  n *= 128;
                  if (f >= n) f -= Math.pow(2, 8 * r);
                  return f;
                };
                Buffer.prototype.readIntBE = function readIntBE(e, r, t) {
                  e = e >>> 0;
                  r = r >>> 0;
                  if (!t) checkOffset(e, r, this.length);
                  var f = r;
                  var n = 1;
                  var i = this[e + --f];
                  while (f > 0 && (n *= 256)) {
                    i += this[e + --f] * n;
                  }
                  n *= 128;
                  if (i >= n) i -= Math.pow(2, 8 * r);
                  return i;
                };
                Buffer.prototype.readInt8 = function readInt8(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 1, this.length);
                  if (!(this[e] & 128)) return this[e];
                  return (255 - this[e] + 1) * -1;
                };
                Buffer.prototype.readInt16LE = function readInt16LE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 2, this.length);
                  var t = this[e] | (this[e + 1] << 8);
                  return t & 32768 ? t | 4294901760 : t;
                };
                Buffer.prototype.readInt16BE = function readInt16BE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 2, this.length);
                  var t = this[e + 1] | (this[e] << 8);
                  return t & 32768 ? t | 4294901760 : t;
                };
                Buffer.prototype.readInt32LE = function readInt32LE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 4, this.length);
                  return this[e] | (this[e + 1] << 8) | (this[e + 2] << 16) | (this[e + 3] << 24);
                };
                Buffer.prototype.readInt32BE = function readInt32BE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 4, this.length);
                  return (this[e] << 24) | (this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3];
                };
                Buffer.prototype.readFloatLE = function readFloatLE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 4, this.length);
                  return n.read(this, e, true, 23, 4);
                };
                Buffer.prototype.readFloatBE = function readFloatBE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 4, this.length);
                  return n.read(this, e, false, 23, 4);
                };
                Buffer.prototype.readDoubleLE = function readDoubleLE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 8, this.length);
                  return n.read(this, e, true, 52, 8);
                };
                Buffer.prototype.readDoubleBE = function readDoubleBE(e, r) {
                  e = e >>> 0;
                  if (!r) checkOffset(e, 8, this.length);
                  return n.read(this, e, false, 52, 8);
                };
                function checkInt(e, r, t, f, n, i) {
                  if (!Buffer.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
                  if (r > n || r < i) throw new RangeError('"value" argument is out of bounds');
                  if (t + f > e.length) throw new RangeError('Index out of range');
                }
                Buffer.prototype.writeUIntLE = function writeUIntLE(e, r, t, f) {
                  e = +e;
                  r = r >>> 0;
                  t = t >>> 0;
                  if (!f) {
                    var n = Math.pow(2, 8 * t) - 1;
                    checkInt(this, e, r, t, n, 0);
                  }
                  var i = 1;
                  var o = 0;
                  this[r] = e & 255;
                  while (++o < t && (i *= 256)) {
                    this[r + o] = (e / i) & 255;
                  }
                  return r + t;
                };
                Buffer.prototype.writeUIntBE = function writeUIntBE(e, r, t, f) {
                  e = +e;
                  r = r >>> 0;
                  t = t >>> 0;
                  if (!f) {
                    var n = Math.pow(2, 8 * t) - 1;
                    checkInt(this, e, r, t, n, 0);
                  }
                  var i = t - 1;
                  var o = 1;
                  this[r + i] = e & 255;
                  while (--i >= 0 && (o *= 256)) {
                    this[r + i] = (e / o) & 255;
                  }
                  return r + t;
                };
                Buffer.prototype.writeUInt8 = function writeUInt8(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 1, 255, 0);
                  this[r] = e & 255;
                  return r + 1;
                };
                Buffer.prototype.writeUInt16LE = function writeUInt16LE(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 2, 65535, 0);
                  this[r] = e & 255;
                  this[r + 1] = e >>> 8;
                  return r + 2;
                };
                Buffer.prototype.writeUInt16BE = function writeUInt16BE(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 2, 65535, 0);
                  this[r] = e >>> 8;
                  this[r + 1] = e & 255;
                  return r + 2;
                };
                Buffer.prototype.writeUInt32LE = function writeUInt32LE(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 4, 4294967295, 0);
                  this[r + 3] = e >>> 24;
                  this[r + 2] = e >>> 16;
                  this[r + 1] = e >>> 8;
                  this[r] = e & 255;
                  return r + 4;
                };
                Buffer.prototype.writeUInt32BE = function writeUInt32BE(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 4, 4294967295, 0);
                  this[r] = e >>> 24;
                  this[r + 1] = e >>> 16;
                  this[r + 2] = e >>> 8;
                  this[r + 3] = e & 255;
                  return r + 4;
                };
                Buffer.prototype.writeIntLE = function writeIntLE(e, r, t, f) {
                  e = +e;
                  r = r >>> 0;
                  if (!f) {
                    var n = Math.pow(2, 8 * t - 1);
                    checkInt(this, e, r, t, n - 1, -n);
                  }
                  var i = 0;
                  var o = 1;
                  var u = 0;
                  this[r] = e & 255;
                  while (++i < t && (o *= 256)) {
                    if (e < 0 && u === 0 && this[r + i - 1] !== 0) {
                      u = 1;
                    }
                    this[r + i] = (((e / o) >> 0) - u) & 255;
                  }
                  return r + t;
                };
                Buffer.prototype.writeIntBE = function writeIntBE(e, r, t, f) {
                  e = +e;
                  r = r >>> 0;
                  if (!f) {
                    var n = Math.pow(2, 8 * t - 1);
                    checkInt(this, e, r, t, n - 1, -n);
                  }
                  var i = t - 1;
                  var o = 1;
                  var u = 0;
                  this[r + i] = e & 255;
                  while (--i >= 0 && (o *= 256)) {
                    if (e < 0 && u === 0 && this[r + i + 1] !== 0) {
                      u = 1;
                    }
                    this[r + i] = (((e / o) >> 0) - u) & 255;
                  }
                  return r + t;
                };
                Buffer.prototype.writeInt8 = function writeInt8(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 1, 127, -128);
                  if (e < 0) e = 255 + e + 1;
                  this[r] = e & 255;
                  return r + 1;
                };
                Buffer.prototype.writeInt16LE = function writeInt16LE(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 2, 32767, -32768);
                  this[r] = e & 255;
                  this[r + 1] = e >>> 8;
                  return r + 2;
                };
                Buffer.prototype.writeInt16BE = function writeInt16BE(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 2, 32767, -32768);
                  this[r] = e >>> 8;
                  this[r + 1] = e & 255;
                  return r + 2;
                };
                Buffer.prototype.writeInt32LE = function writeInt32LE(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);
                  this[r] = e & 255;
                  this[r + 1] = e >>> 8;
                  this[r + 2] = e >>> 16;
                  this[r + 3] = e >>> 24;
                  return r + 4;
                };
                Buffer.prototype.writeInt32BE = function writeInt32BE(e, r, t) {
                  e = +e;
                  r = r >>> 0;
                  if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);
                  if (e < 0) e = 4294967295 + e + 1;
                  this[r] = e >>> 24;
                  this[r + 1] = e >>> 16;
                  this[r + 2] = e >>> 8;
                  this[r + 3] = e & 255;
                  return r + 4;
                };
                function checkIEEE754(e, r, t, f, n, i) {
                  if (t + f > e.length) throw new RangeError('Index out of range');
                  if (t < 0) throw new RangeError('Index out of range');
                }
                function writeFloat(e, r, t, f, i) {
                  r = +r;
                  t = t >>> 0;
                  if (!i) {
                    checkIEEE754(e, r, t, 4, 34028234663852886e22, -34028234663852886e22);
                  }
                  n.write(e, r, t, f, 23, 4);
                  return t + 4;
                }
                Buffer.prototype.writeFloatLE = function writeFloatLE(e, r, t) {
                  return writeFloat(this, e, r, true, t);
                };
                Buffer.prototype.writeFloatBE = function writeFloatBE(e, r, t) {
                  return writeFloat(this, e, r, false, t);
                };
                function writeDouble(e, r, t, f, i) {
                  r = +r;
                  t = t >>> 0;
                  if (!i) {
                    checkIEEE754(e, r, t, 8, 17976931348623157e292, -17976931348623157e292);
                  }
                  n.write(e, r, t, f, 52, 8);
                  return t + 8;
                }
                Buffer.prototype.writeDoubleLE = function writeDoubleLE(e, r, t) {
                  return writeDouble(this, e, r, true, t);
                };
                Buffer.prototype.writeDoubleBE = function writeDoubleBE(e, r, t) {
                  return writeDouble(this, e, r, false, t);
                };
                Buffer.prototype.copy = function copy(e, r, t, f) {
                  if (!Buffer.isBuffer(e)) throw new TypeError('argument should be a Buffer');
                  if (!t) t = 0;
                  if (!f && f !== 0) f = this.length;
                  if (r >= e.length) r = e.length;
                  if (!r) r = 0;
                  if (f > 0 && f < t) f = t;
                  if (f === t) return 0;
                  if (e.length === 0 || this.length === 0) return 0;
                  if (r < 0) {
                    throw new RangeError('targetStart out of bounds');
                  }
                  if (t < 0 || t >= this.length) throw new RangeError('Index out of range');
                  if (f < 0) throw new RangeError('sourceEnd out of bounds');
                  if (f > this.length) f = this.length;
                  if (e.length - r < f - t) {
                    f = e.length - r + t;
                  }
                  var n = f - t;
                  if (this === e && typeof Uint8Array.prototype.copyWithin === 'function') {
                    this.copyWithin(r, t, f);
                  } else if (this === e && t < r && r < f) {
                    for (var i = n - 1; i >= 0; --i) {
                      e[i + r] = this[i + t];
                    }
                  } else {
                    Uint8Array.prototype.set.call(e, this.subarray(t, f), r);
                  }
                  return n;
                };
                Buffer.prototype.fill = function fill(e, r, t, f) {
                  if (typeof e === 'string') {
                    if (typeof r === 'string') {
                      f = r;
                      r = 0;
                      t = this.length;
                    } else if (typeof t === 'string') {
                      f = t;
                      t = this.length;
                    }
                    if (f !== undefined && typeof f !== 'string') {
                      throw new TypeError('encoding must be a string');
                    }
                    if (typeof f === 'string' && !Buffer.isEncoding(f)) {
                      throw new TypeError('Unknown encoding: ' + f);
                    }
                    if (e.length === 1) {
                      var n = e.charCodeAt(0);
                      if ((f === 'utf8' && n < 128) || f === 'latin1') {
                        e = n;
                      }
                    }
                  } else if (typeof e === 'number') {
                    e = e & 255;
                  } else if (typeof e === 'boolean') {
                    e = Number(e);
                  }
                  if (r < 0 || this.length < r || this.length < t) {
                    throw new RangeError('Out of range index');
                  }
                  if (t <= r) {
                    return this;
                  }
                  r = r >>> 0;
                  t = t === undefined ? this.length : t >>> 0;
                  if (!e) e = 0;
                  var i;
                  if (typeof e === 'number') {
                    for (i = r; i < t; ++i) {
                      this[i] = e;
                    }
                  } else {
                    var o = Buffer.isBuffer(e) ? e : Buffer.from(e, f);
                    var u = o.length;
                    if (u === 0) {
                      throw new TypeError('The value "' + e + '" is invalid for argument "value"');
                    }
                    for (i = 0; i < t - r; ++i) {
                      this[i + r] = o[i % u];
                    }
                  }
                  return this;
                };
                var a = /[^+/0-9A-Za-z-_]/g;
                function base64clean(e) {
                  e = e.split('=')[0];
                  e = e.trim().replace(a, '');
                  if (e.length < 2) return '';
                  while (e.length % 4 !== 0) {
                    e = e + '=';
                  }
                  return e;
                }
                function utf8ToBytes(e, r) {
                  r = r || Infinity;
                  var t;
                  var f = e.length;
                  var n = null;
                  var i = [];
                  for (var o = 0; o < f; ++o) {
                    t = e.charCodeAt(o);
                    if (t > 55295 && t < 57344) {
                      if (!n) {
                        if (t > 56319) {
                          if ((r -= 3) > -1) i.push(239, 191, 189);
                          continue;
                        } else if (o + 1 === f) {
                          if ((r -= 3) > -1) i.push(239, 191, 189);
                          continue;
                        }
                        n = t;
                        continue;
                      }
                      if (t < 56320) {
                        if ((r -= 3) > -1) i.push(239, 191, 189);
                        n = t;
                        continue;
                      }
                      t = (((n - 55296) << 10) | (t - 56320)) + 65536;
                    } else if (n) {
                      if ((r -= 3) > -1) i.push(239, 191, 189);
                    }
                    n = null;
                    if (t < 128) {
                      if ((r -= 1) < 0) break;
                      i.push(t);
                    } else if (t < 2048) {
                      if ((r -= 2) < 0) break;
                      i.push((t >> 6) | 192, (t & 63) | 128);
                    } else if (t < 65536) {
                      if ((r -= 3) < 0) break;
                      i.push((t >> 12) | 224, ((t >> 6) & 63) | 128, (t & 63) | 128);
                    } else if (t < 1114112) {
                      if ((r -= 4) < 0) break;
                      i.push((t >> 18) | 240, ((t >> 12) & 63) | 128, ((t >> 6) & 63) | 128, (t & 63) | 128);
                    } else {
                      throw new Error('Invalid code point');
                    }
                  }
                  return i;
                }
                function asciiToBytes(e) {
                  var r = [];
                  for (var t = 0; t < e.length; ++t) {
                    r.push(e.charCodeAt(t) & 255);
                  }
                  return r;
                }
                function utf16leToBytes(e, r) {
                  var t, f, n;
                  var i = [];
                  for (var o = 0; o < e.length; ++o) {
                    if ((r -= 2) < 0) break;
                    t = e.charCodeAt(o);
                    f = t >> 8;
                    n = t % 256;
                    i.push(n);
                    i.push(f);
                  }
                  return i;
                }
                function base64ToBytes(e) {
                  return f.toByteArray(base64clean(e));
                }
                function blitBuffer(e, r, t, f) {
                  for (var n = 0; n < f; ++n) {
                    if (n + t >= r.length || n >= e.length) break;
                    r[n + t] = e[n];
                  }
                  return n;
                }
                function isInstance(e, r) {
                  return (
                    e instanceof r ||
                    (e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === r.name)
                  );
                }
                function numberIsNaN(e) {
                  return e !== e;
                }
                var s = (function () {
                  var e = '0123456789abcdef';
                  var r = new Array(256);
                  for (var t = 0; t < 16; ++t) {
                    var f = t * 16;
                    for (var n = 0; n < 16; ++n) {
                      r[f + n] = e[t] + e[n];
                    }
                  }
                  return r;
                })();
              },
              783: function (e, r) {
                /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ r.read =
                  function (e, r, t, f, n) {
                    var i, o;
                    var u = n * 8 - f - 1;
                    var a = (1 << u) - 1;
                    var s = a >> 1;
                    var h = -7;
                    var c = t ? n - 1 : 0;
                    var l = t ? -1 : 1;
                    var p = e[r + c];
                    c += l;
                    i = p & ((1 << -h) - 1);
                    p >>= -h;
                    h += u;
                    for (; h > 0; i = i * 256 + e[r + c], c += l, h -= 8) {}
                    o = i & ((1 << -h) - 1);
                    i >>= -h;
                    h += f;
                    for (; h > 0; o = o * 256 + e[r + c], c += l, h -= 8) {}
                    if (i === 0) {
                      i = 1 - s;
                    } else if (i === a) {
                      return o ? NaN : (p ? -1 : 1) * Infinity;
                    } else {
                      o = o + Math.pow(2, f);
                      i = i - s;
                    }
                    return (p ? -1 : 1) * o * Math.pow(2, i - f);
                  };
                r.write = function (e, r, t, f, n, i) {
                  var o, u, a;
                  var s = i * 8 - n - 1;
                  var h = (1 << s) - 1;
                  var c = h >> 1;
                  var l = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
                  var p = f ? 0 : i - 1;
                  var y = f ? 1 : -1;
                  var g = r < 0 || (r === 0 && 1 / r < 0) ? 1 : 0;
                  r = Math.abs(r);
                  if (isNaN(r) || r === Infinity) {
                    u = isNaN(r) ? 1 : 0;
                    o = h;
                  } else {
                    o = Math.floor(Math.log(r) / Math.LN2);
                    if (r * (a = Math.pow(2, -o)) < 1) {
                      o--;
                      a *= 2;
                    }
                    if (o + c >= 1) {
                      r += l / a;
                    } else {
                      r += l * Math.pow(2, 1 - c);
                    }
                    if (r * a >= 2) {
                      o++;
                      a /= 2;
                    }
                    if (o + c >= h) {
                      u = 0;
                      o = h;
                    } else if (o + c >= 1) {
                      u = (r * a - 1) * Math.pow(2, n);
                      o = o + c;
                    } else {
                      u = r * Math.pow(2, c - 1) * Math.pow(2, n);
                      o = 0;
                    }
                  }
                  for (; n >= 8; e[t + p] = u & 255, p += y, u /= 256, n -= 8) {}
                  o = (o << n) | u;
                  s += n;
                  for (; s > 0; e[t + p] = o & 255, p += y, o /= 256, s -= 8) {}
                  e[t + p - y] |= g * 128;
                };
              },
            };
            var r = {};
            function __nccwpck_require__(t) {
              var f = r[t];
              if (f !== undefined) {
                return f.exports;
              }
              var n = (r[t] = {
                exports: {},
              });
              var i = true;
              try {
                e[t](n, n.exports, __nccwpck_require__);
                i = false;
              } finally {
                if (i) delete r[t];
              }
              return n.exports;
            }
            if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + '/';
            var t = __nccwpck_require__(72);
            module.exports = t;
          })();
        }
      },
    '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/client-only/index.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
        }
      },
    '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/listen-keys/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            listenKeys: () => listenKeys,
            subscribeKeys: () => subscribeKeys,
          });
          function listenKeys($store, keys, listener) {
            let keysSet = new Set(keys).add(undefined);
            return $store.listen((value, oldValue, changed) => {
              if (keysSet.has(changed)) {
                listener(value, oldValue, changed);
              }
            });
          }
          function subscribeKeys($store, keys, listener) {
            let unbind = listenKeys($store, keys, listener);
            listener($store.value);
            return unbind;
          }
        }
      },
    '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/task/index.js [app-client] (ecmascript)': (
      __turbopack_context__,
    ) => {
      'use strict';

      var { g: global, __dirname } = __turbopack_context__;
      {
        __turbopack_context__.s({
          allTasks: () => allTasks,
          cleanTasks: () => cleanTasks,
          startTask: () => startTask,
          task: () => task,
        });
        let tasks = 0;
        let resolves = [];
        function startTask() {
          tasks += 1;
          return () => {
            tasks -= 1;
            if (tasks === 0) {
              let prevResolves = resolves;
              resolves = [];
              for (let i of prevResolves) i();
            }
          };
        }
        function task(cb) {
          let endTask = startTask();
          let promise = cb().finally(endTask);
          promise.t = true;
          return promise;
        }
        function allTasks() {
          if (tasks === 0) {
            return Promise.resolve();
          } else {
            return new Promise((resolve) => {
              resolves.push(resolve);
            });
          }
        }
        function cleanTasks() {
          tasks = 0;
        }
      }
    },
    '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/clean-stores/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            clean: () => clean,
            cleanStores: () => cleanStores,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$task$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/task/index.js [app-client] (ecmascript)',
            );
          let clean = Symbol('clean');
          let cleanStores = (...stores) => {
            if (('TURBOPACK compile-time falsy', 0)) {
              ('TURBOPACK unreachable');
            }
            (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$task$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'cleanTasks'
            ])();
            for (let $store of stores) {
              if ($store) {
                if ($store.mocked) delete $store.mocked;
                if ($store[clean]) $store[clean]();
              }
            }
          };
        }
      },
    '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/atom/index.js [app-client] (ecmascript)': (
      __turbopack_context__,
    ) => {
      'use strict';

      var { g: global, __dirname } = __turbopack_context__;
      {
        __turbopack_context__.s({
          atom: () => atom,
          epoch: () => epoch,
        });
        var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
          __turbopack_context__.i(
            '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)',
          );
        var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$clean$2d$stores$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
          __turbopack_context__.i(
            '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/clean-stores/index.js [app-client] (ecmascript)',
          );
        let listenerQueue = [];
        let lqIndex = 0;
        const QUEUE_ITEMS_PER_LISTENER = 4;
        let epoch = 0;
        let atom = (initialValue) => {
          let listeners = [];
          let $atom = {
            get() {
              if (!$atom.lc) {
                $atom.listen(() => {})();
              }
              return $atom.value;
            },
            lc: 0,
            listen(listener) {
              $atom.lc = listeners.push(listener);
              return () => {
                for (let i = lqIndex + QUEUE_ITEMS_PER_LISTENER; i < listenerQueue.length; ) {
                  if (listenerQueue[i] === listener) {
                    listenerQueue.splice(i, QUEUE_ITEMS_PER_LISTENER);
                  } else {
                    i += QUEUE_ITEMS_PER_LISTENER;
                  }
                }
                let index = listeners.indexOf(listener);
                if (~index) {
                  listeners.splice(index, 1);
                  if (!--$atom.lc) $atom.off();
                }
              };
            },
            notify(oldValue, changedKey) {
              epoch++;
              let runListenerQueue = !listenerQueue.length;
              for (let listener of listeners) {
                listenerQueue.push(listener, $atom.value, oldValue, changedKey);
              }
              if (runListenerQueue) {
                for (lqIndex = 0; lqIndex < listenerQueue.length; lqIndex += QUEUE_ITEMS_PER_LISTENER) {
                  listenerQueue[lqIndex](
                    listenerQueue[lqIndex + 1],
                    listenerQueue[lqIndex + 2],
                    listenerQueue[lqIndex + 3],
                  );
                }
                listenerQueue.length = 0;
              }
            },
            /* It will be called on last listener unsubscribing.
       We will redefine it in onMount and onStop. */ off() {},
            set(newValue) {
              let oldValue = $atom.value;
              if (oldValue !== newValue) {
                $atom.value = newValue;
                $atom.notify(oldValue);
              }
            },
            subscribe(listener) {
              let unbind = $atom.listen(listener);
              listener($atom.value);
              return unbind;
            },
            value: initialValue,
          };
          if (('TURBOPACK compile-time truthy', 1)) {
            $atom[
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$clean$2d$stores$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'clean'
              ]
            ] = () => {
              listeners = [];
              $atom.lc = 0;
              $atom.off();
            };
          }
          return $atom;
        };
      }
    },
    '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/map/index.js [app-client] (ecmascript)': (
      __turbopack_context__,
    ) => {
      'use strict';

      var { g: global, __dirname } = __turbopack_context__;
      {
        __turbopack_context__.s({
          map: () => map,
        });
        var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$atom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
          __turbopack_context__.i(
            '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/atom/index.js [app-client] (ecmascript)',
          );
        let map = (initial = {}) => {
          let $map = (0,
          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$atom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
            'atom'
          ])(initial);
          $map.setKey = function (key, value) {
            let oldMap = $map.value;
            if (typeof value === 'undefined' && key in $map.value) {
              $map.value = {
                ...$map.value,
              };
              delete $map.value[key];
              $map.notify(oldMap, key);
            } else if ($map.value[key] !== value) {
              $map.value = {
                ...$map.value,
                [key]: value,
              };
              $map.notify(oldMap, key);
            }
          };
          return $map;
        };
      }
    },
    '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/lifecycle/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            STORE_UNMOUNT_DELAY: () => STORE_UNMOUNT_DELAY,
            on: () => on,
            onMount: () => onMount,
            onNotify: () => onNotify,
            onSet: () => onSet,
            onStart: () => onStart,
            onStop: () => onStop,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$clean$2d$stores$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/clean-stores/index.js [app-client] (ecmascript)',
            );
          const START = 0;
          const STOP = 1;
          const SET = 2;
          const NOTIFY = 3;
          const MOUNT = 5;
          const UNMOUNT = 6;
          const REVERT_MUTATION = 10;
          let on = (object, listener, eventKey, mutateStore) => {
            object.events = object.events || {};
            if (!object.events[eventKey + REVERT_MUTATION]) {
              object.events[eventKey + REVERT_MUTATION] = mutateStore((eventProps) => {
                // eslint-disable-next-line no-sequences
                object.events[eventKey].reduceRight((event, l) => (l(event), event), {
                  shared: {},
                  ...eventProps,
                });
              });
            }
            object.events[eventKey] = object.events[eventKey] || [];
            object.events[eventKey].push(listener);
            return () => {
              let currentListeners = object.events[eventKey];
              let index = currentListeners.indexOf(listener);
              currentListeners.splice(index, 1);
              if (!currentListeners.length) {
                delete object.events[eventKey];
                object.events[eventKey + REVERT_MUTATION]();
                delete object.events[eventKey + REVERT_MUTATION];
              }
            };
          };
          let onStart = ($store, listener) =>
            on($store, listener, START, (runListeners) => {
              let originListen = $store.listen;
              $store.listen = (arg) => {
                if (!$store.lc && !$store.starting) {
                  $store.starting = true;
                  runListeners();
                  delete $store.starting;
                }
                return originListen(arg);
              };
              return () => {
                $store.listen = originListen;
              };
            });
          let onStop = ($store, listener) =>
            on($store, listener, STOP, (runListeners) => {
              let originOff = $store.off;
              $store.off = () => {
                runListeners();
                originOff();
              };
              return () => {
                $store.off = originOff;
              };
            });
          let onSet = ($store, listener) =>
            on($store, listener, SET, (runListeners) => {
              let originSet = $store.set;
              let originSetKey = $store.setKey;
              if ($store.setKey) {
                $store.setKey = (changed, changedValue) => {
                  let isAborted;
                  let abort = () => {
                    isAborted = true;
                  };
                  runListeners({
                    abort,
                    changed,
                    newValue: {
                      ...$store.value,
                      [changed]: changedValue,
                    },
                  });
                  if (!isAborted) return originSetKey(changed, changedValue);
                };
              }
              $store.set = (newValue) => {
                let isAborted;
                let abort = () => {
                  isAborted = true;
                };
                runListeners({
                  abort,
                  newValue,
                });
                if (!isAborted) return originSet(newValue);
              };
              return () => {
                $store.set = originSet;
                $store.setKey = originSetKey;
              };
            });
          let onNotify = ($store, listener) =>
            on($store, listener, NOTIFY, (runListeners) => {
              let originNotify = $store.notify;
              $store.notify = (oldValue, changed) => {
                let isAborted;
                let abort = () => {
                  isAborted = true;
                };
                runListeners({
                  abort,
                  changed,
                  oldValue,
                });
                if (!isAborted) return originNotify(oldValue, changed);
              };
              return () => {
                $store.notify = originNotify;
              };
            });
          let STORE_UNMOUNT_DELAY = 1000;
          let onMount = ($store, initialize) => {
            let listener = (payload) => {
              let destroy = initialize(payload);
              if (destroy) $store.events[UNMOUNT].push(destroy);
            };
            return on($store, listener, MOUNT, (runListeners) => {
              let originListen = $store.listen;
              $store.listen = (...args) => {
                if (!$store.lc && !$store.active) {
                  $store.active = true;
                  runListeners();
                }
                return originListen(...args);
              };
              let originOff = $store.off;
              $store.events[UNMOUNT] = [];
              $store.off = () => {
                originOff();
                setTimeout(() => {
                  if ($store.active && !$store.lc) {
                    $store.active = false;
                    for (let destroy of $store.events[UNMOUNT]) destroy();
                    $store.events[UNMOUNT] = [];
                  }
                }, STORE_UNMOUNT_DELAY);
              };
              if (('TURBOPACK compile-time truthy', 1)) {
                let originClean =
                  $store[
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$clean$2d$stores$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'clean'
                    ]
                  ];
                $store[
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$clean$2d$stores$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'clean'
                  ]
                ] = () => {
                  for (let destroy of $store.events[UNMOUNT]) destroy();
                  $store.events[UNMOUNT] = [];
                  $store.active = false;
                  originClean();
                };
              }
              return () => {
                $store.listen = originListen;
                $store.off = originOff;
              };
            });
          };
        }
      },
    '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/computed/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            batched: () => batched,
            computed: () => computed,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$atom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/atom/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$lifecycle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/lifecycle/index.js [app-client] (ecmascript)',
            );
          let computedStore = (stores, cb, batched) => {
            if (!Array.isArray(stores)) stores = [stores];
            let previousArgs;
            let currentEpoch;
            let set = () => {
              if (
                currentEpoch ===
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$atom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'epoch'
                ]
              )
                return;
              currentEpoch =
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$atom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'epoch'
                ];
              let args = stores.map(($store) => $store.get());
              if (!previousArgs || args.some((arg, i) => arg !== previousArgs[i])) {
                previousArgs = args;
                let value = cb(...args);
                if (value && value.then && value.t) {
                  value.then((asyncValue) => {
                    if (previousArgs === args) {
                      // Prevent a stale set
                      $computed.set(asyncValue);
                    }
                  });
                } else {
                  $computed.set(value);
                  currentEpoch =
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$atom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'epoch'
                    ];
                }
              }
            };
            let $computed = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$atom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'atom'
            ])(undefined);
            let get = $computed.get;
            $computed.get = () => {
              set();
              return get();
            };
            let timer;
            let run = batched
              ? () => {
                  clearTimeout(timer);
                  timer = setTimeout(set);
                }
              : set;
            (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$lifecycle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'onMount'
            ])($computed, () => {
              let unbinds = stores.map(($store) => $store.listen(run));
              set();
              return () => {
                for (let unbind of unbinds) unbind();
              };
            });
            return $computed;
          };
          let computed = (stores, fn) => computedStore(stores, fn);
          let batched = (stores, fn) => computedStore(stores, fn, true);
        }
      },
    '[project]/node_modules/.pnpm/@nanostores+react@0.8.4_nanostores@0.11.4_react@18.3.1/node_modules/@nanostores/react/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            useStore: () => useStore,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$listen$2d$keys$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/nanostores@0.11.4/node_modules/nanostores/listen-keys/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)',
            );
          let emit = (snapshotRef, onChange) => (value) => {
            if (snapshotRef.current === value) return;
            snapshotRef.current = value;
            onChange();
          };
          function useStore(store, { keys, deps = [store, keys] } = {}) {
            let snapshotRef = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'useRef'
            ])();
            snapshotRef.current = store.get();
            let subscribe = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'useCallback'
            ])(
              {
                'useStore.useCallback[subscribe]': (onChange) => {
                  emit(snapshotRef, onChange)(store.value);
                  return keys?.length > 0
                    ? (0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanostores$40$0$2e$11$2e$4$2f$node_modules$2f$nanostores$2f$listen$2d$keys$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'listenKeys'
                      ])(store, keys, emit(snapshotRef, onChange))
                    : store.listen(emit(snapshotRef, onChange));
                },
              }['useStore.useCallback[subscribe]'],
              deps,
            );
            let get = () => snapshotRef.current;
            return (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'useSyncExternalStore'
            ])(subscribe, get, get);
          }
        }
      },
    '[project]/node_modules/.pnpm/path-browserify@1.0.1/node_modules/path-browserify/index.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          // 'path' module extracted from Node.js v8.11.1 (only the posix part)
          // transplited with Babel
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)',
            );
          ('use strict');
          function assertPath(path) {
            if (typeof path !== 'string') {
              throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
            }
          }
          // Resolves . and .. elements in a path with directory names
          function normalizeStringPosix(path, allowAboveRoot) {
            var res = '';
            var lastSegmentLength = 0;
            var lastSlash = -1;
            var dots = 0;
            var code;
            for (var i = 0; i <= path.length; ++i) {
              if (i < path.length) code = path.charCodeAt(i);
              else if (code === 47 /*/*/) break;
              else code = 47 /*/*/;
              if (code === 47 /*/*/) {
                if (lastSlash === i - 1 || dots === 1) {
                  // NOOP
                } else if (lastSlash !== i - 1 && dots === 2) {
                  if (
                    res.length < 2 ||
                    lastSegmentLength !== 2 ||
                    res.charCodeAt(res.length - 1) !== 46 /*.*/ ||
                    res.charCodeAt(res.length - 2) !== 46 /*.*/
                  ) {
                    if (res.length > 2) {
                      var lastSlashIndex = res.lastIndexOf('/');
                      if (lastSlashIndex !== res.length - 1) {
                        if (lastSlashIndex === -1) {
                          res = '';
                          lastSegmentLength = 0;
                        } else {
                          res = res.slice(0, lastSlashIndex);
                          lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
                        }
                        lastSlash = i;
                        dots = 0;
                        continue;
                      }
                    } else if (res.length === 2 || res.length === 1) {
                      res = '';
                      lastSegmentLength = 0;
                      lastSlash = i;
                      dots = 0;
                      continue;
                    }
                  }
                  if (allowAboveRoot) {
                    if (res.length > 0) res += '/..';
                    else res = '..';
                    lastSegmentLength = 2;
                  }
                } else {
                  if (res.length > 0) res += '/' + path.slice(lastSlash + 1, i);
                  else res = path.slice(lastSlash + 1, i);
                  lastSegmentLength = i - lastSlash - 1;
                }
                lastSlash = i;
                dots = 0;
              } else if (code === 46 /*.*/ && dots !== -1) {
                ++dots;
              } else {
                dots = -1;
              }
            }
            return res;
          }
          function _format(sep, pathObject) {
            var dir = pathObject.dir || pathObject.root;
            var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
            if (!dir) {
              return base;
            }
            if (dir === pathObject.root) {
              return dir + base;
            }
            return dir + sep + base;
          }
          var posix = {
            // path.resolve([from ...], to)
            resolve: function resolve() {
              var resolvedPath = '';
              var resolvedAbsolute = false;
              var cwd;
              for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
                var path;
                if (i >= 0) path = arguments[i];
                else {
                  if (cwd === undefined)
                    cwd =
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'default'
                      ].cwd();
                  path = cwd;
                }
                assertPath(path);
                // Skip empty entries
                if (path.length === 0) {
                  continue;
                }
                resolvedPath = path + '/' + resolvedPath;
                resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
              }
              // At this point the path should be resolved to a full absolute path, but
              // handle relative paths to be safe (might happen when process.cwd() fails)
              // Normalize the path
              resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);
              if (resolvedAbsolute) {
                if (resolvedPath.length > 0) return '/' + resolvedPath;
                else return '/';
              } else if (resolvedPath.length > 0) {
                return resolvedPath;
              } else {
                return '.';
              }
            },
            normalize: function normalize(path) {
              assertPath(path);
              if (path.length === 0) return '.';
              var isAbsolute = path.charCodeAt(0) === 47; /*/*/
              var trailingSeparator = path.charCodeAt(path.length - 1) === 47; /*/*/
              // Normalize the path
              path = normalizeStringPosix(path, !isAbsolute);
              if (path.length === 0 && !isAbsolute) path = '.';
              if (path.length > 0 && trailingSeparator) path += '/';
              if (isAbsolute) return '/' + path;
              return path;
            },
            isAbsolute: function isAbsolute(path) {
              assertPath(path);
              return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
            },
            join: function join() {
              if (arguments.length === 0) return '.';
              var joined;
              for (var i = 0; i < arguments.length; ++i) {
                var arg = arguments[i];
                assertPath(arg);
                if (arg.length > 0) {
                  if (joined === undefined) joined = arg;
                  else joined += '/' + arg;
                }
              }
              if (joined === undefined) return '.';
              return posix.normalize(joined);
            },
            relative: function relative(from, to) {
              assertPath(from);
              assertPath(to);
              if (from === to) return '';
              from = posix.resolve(from);
              to = posix.resolve(to);
              if (from === to) return '';
              // Trim any leading backslashes
              var fromStart = 1;
              for (; fromStart < from.length; ++fromStart) {
                if (from.charCodeAt(fromStart) !== 47 /*/*/) break;
              }
              var fromEnd = from.length;
              var fromLen = fromEnd - fromStart;
              // Trim any leading backslashes
              var toStart = 1;
              for (; toStart < to.length; ++toStart) {
                if (to.charCodeAt(toStart) !== 47 /*/*/) break;
              }
              var toEnd = to.length;
              var toLen = toEnd - toStart;
              // Compare paths to find the longest common path from root
              var length = fromLen < toLen ? fromLen : toLen;
              var lastCommonSep = -1;
              var i = 0;
              for (; i <= length; ++i) {
                if (i === length) {
                  if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === 47 /*/*/) {
                      // We get here if `from` is the exact base path for `to`.
                      // For example: from='/foo/bar'; to='/foo/bar/baz'
                      return to.slice(toStart + i + 1);
                    } else if (i === 0) {
                      // We get here if `from` is the root
                      // For example: from='/'; to='/foo'
                      return to.slice(toStart + i);
                    }
                  } else if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
                      // We get here if `to` is the exact base path for `from`.
                      // For example: from='/foo/bar/baz'; to='/foo/bar'
                      lastCommonSep = i;
                    } else if (i === 0) {
                      // We get here if `to` is the root.
                      // For example: from='/foo'; to='/'
                      lastCommonSep = 0;
                    }
                  }
                  break;
                }
                var fromCode = from.charCodeAt(fromStart + i);
                var toCode = to.charCodeAt(toStart + i);
                if (fromCode !== toCode) break;
                else if (fromCode === 47 /*/*/) lastCommonSep = i;
              }
              var out = '';
              // Generate the relative path based on the path difference between `to`
              // and `from`
              for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
                if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
                  if (out.length === 0) out += '..';
                  else out += '/..';
                }
              }
              // Lastly, append the rest of the destination (`to`) path that comes after
              // the common path parts
              if (out.length > 0) return out + to.slice(toStart + lastCommonSep);
              else {
                toStart += lastCommonSep;
                if (to.charCodeAt(toStart) === 47 /*/*/) ++toStart;
                return to.slice(toStart);
              }
            },
            _makeLong: function _makeLong(path) {
              return path;
            },
            dirname: function dirname(path) {
              assertPath(path);
              if (path.length === 0) return '.';
              var code = path.charCodeAt(0);
              var hasRoot = code === 47; /*/*/
              var end = -1;
              var matchedSlash = true;
              for (var i = path.length - 1; i >= 1; --i) {
                code = path.charCodeAt(i);
                if (code === 47 /*/*/) {
                  if (!matchedSlash) {
                    end = i;
                    break;
                  }
                } else {
                  // We saw the first non-path separator
                  matchedSlash = false;
                }
              }
              if (end === -1) return hasRoot ? '/' : '.';
              if (hasRoot && end === 1) return '//';
              return path.slice(0, end);
            },
            basename: function basename(path, ext) {
              if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
              assertPath(path);
              var start = 0;
              var end = -1;
              var matchedSlash = true;
              var i;
              if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
                if (ext.length === path.length && ext === path) return '';
                var extIdx = ext.length - 1;
                var firstNonSlashEnd = -1;
                for (i = path.length - 1; i >= 0; --i) {
                  var code = path.charCodeAt(i);
                  if (code === 47 /*/*/) {
                    // If we reached a path separator that was not part of a set of path
                    // separators at the end of the string, stop now
                    if (!matchedSlash) {
                      start = i + 1;
                      break;
                    }
                  } else {
                    if (firstNonSlashEnd === -1) {
                      // We saw the first non-path separator, remember this index in case
                      // we need it if the extension ends up not matching
                      matchedSlash = false;
                      firstNonSlashEnd = i + 1;
                    }
                    if (extIdx >= 0) {
                      // Try to match the explicit extension
                      if (code === ext.charCodeAt(extIdx)) {
                        if (--extIdx === -1) {
                          // We matched the extension, so mark this as the end of our path
                          // component
                          end = i;
                        }
                      } else {
                        // Extension does not match, so our result is the entire path
                        // component
                        extIdx = -1;
                        end = firstNonSlashEnd;
                      }
                    }
                  }
                }
                if (start === end) end = firstNonSlashEnd;
                else if (end === -1) end = path.length;
                return path.slice(start, end);
              } else {
                for (i = path.length - 1; i >= 0; --i) {
                  if (path.charCodeAt(i) === 47 /*/*/) {
                    // If we reached a path separator that was not part of a set of path
                    // separators at the end of the string, stop now
                    if (!matchedSlash) {
                      start = i + 1;
                      break;
                    }
                  } else if (end === -1) {
                    // We saw the first non-path separator, mark this as the end of our
                    // path component
                    matchedSlash = false;
                    end = i + 1;
                  }
                }
                if (end === -1) return '';
                return path.slice(start, end);
              }
            },
            extname: function extname(path) {
              assertPath(path);
              var startDot = -1;
              var startPart = 0;
              var end = -1;
              var matchedSlash = true;
              // Track the state of characters (if any) we see before our first dot and
              // after any path separator we find
              var preDotState = 0;
              for (var i = path.length - 1; i >= 0; --i) {
                var code = path.charCodeAt(i);
                if (code === 47 /*/*/) {
                  // If we reached a path separator that was not part of a set of path
                  // separators at the end of the string, stop now
                  if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                  }
                  continue;
                }
                if (end === -1) {
                  // We saw the first non-path separator, mark this as the end of our
                  // extension
                  matchedSlash = false;
                  end = i + 1;
                }
                if (code === 46 /*.*/) {
                  // If this is our first dot, mark it as the start of our extension
                  if (startDot === -1) startDot = i;
                  else if (preDotState !== 1) preDotState = 1;
                } else if (startDot !== -1) {
                  // We saw a non-dot and non-path separator before our dot, so we should
                  // have a good chance at having a non-empty extension
                  preDotState = -1;
                }
              }
              if (
                startDot === -1 ||
                end === -1 || // We saw a non-dot character immediately before the dot
                preDotState === 0 || // The (right-most) trimmed path component is exactly '..'
                (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)
              ) {
                return '';
              }
              return path.slice(startDot, end);
            },
            format: function format(pathObject) {
              if (pathObject === null || typeof pathObject !== 'object') {
                throw new TypeError(
                  'The "pathObject" argument must be of type Object. Received type ' + typeof pathObject,
                );
              }
              return _format('/', pathObject);
            },
            parse: function parse(path) {
              assertPath(path);
              var ret = {
                root: '',
                dir: '',
                base: '',
                ext: '',
                name: '',
              };
              if (path.length === 0) return ret;
              var code = path.charCodeAt(0);
              var isAbsolute = code === 47; /*/*/
              var start;
              if (isAbsolute) {
                ret.root = '/';
                start = 1;
              } else {
                start = 0;
              }
              var startDot = -1;
              var startPart = 0;
              var end = -1;
              var matchedSlash = true;
              var i = path.length - 1;
              // Track the state of characters (if any) we see before our first dot and
              // after any path separator we find
              var preDotState = 0;
              // Get non-dir info
              for (; i >= start; --i) {
                code = path.charCodeAt(i);
                if (code === 47 /*/*/) {
                  // If we reached a path separator that was not part of a set of path
                  // separators at the end of the string, stop now
                  if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                  }
                  continue;
                }
                if (end === -1) {
                  // We saw the first non-path separator, mark this as the end of our
                  // extension
                  matchedSlash = false;
                  end = i + 1;
                }
                if (code === 46 /*.*/) {
                  // If this is our first dot, mark it as the start of our extension
                  if (startDot === -1) startDot = i;
                  else if (preDotState !== 1) preDotState = 1;
                } else if (startDot !== -1) {
                  // We saw a non-dot and non-path separator before our dot, so we should
                  // have a good chance at having a non-empty extension
                  preDotState = -1;
                }
              }
              if (
                startDot === -1 ||
                end === -1 || // We saw a non-dot character immediately before the dot
                preDotState === 0 || // The (right-most) trimmed path component is exactly '..'
                (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)
              ) {
                if (end !== -1) {
                  if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);
                  else ret.base = ret.name = path.slice(startPart, end);
                }
              } else {
                if (startPart === 0 && isAbsolute) {
                  ret.name = path.slice(1, startDot);
                  ret.base = path.slice(1, end);
                } else {
                  ret.name = path.slice(startPart, startDot);
                  ret.base = path.slice(startPart, end);
                }
                ret.ext = path.slice(startDot, end);
              }
              if (startPart > 0) ret.dir = path.slice(0, startPart - 1);
              else if (isAbsolute) ret.dir = '/';
              return ret;
            },
            sep: '/',
            delimiter: ':',
            win32: null,
            posix: null,
          };
          posix.posix = posix;
          module.exports = posix;
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/constants.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            BROADCAST_CHANNEL_NAME: () => BROADCAST_CHANNEL_NAME,
            DEFAULT_EDITOR_ORIGIN: () => DEFAULT_EDITOR_ORIGIN,
            SEARCH_PARAM_AUTH_CODE: () => SEARCH_PARAM_AUTH_CODE,
            SEARCH_PARAM_ERROR: () => SEARCH_PARAM_ERROR,
            SEARCH_PARAM_ERROR_DESCRIPTION: () => SEARCH_PARAM_ERROR_DESCRIPTION,
            STORAGE_CODE_VERIFIER_NAME: () => STORAGE_CODE_VERIFIER_NAME,
            STORAGE_POPUP_NAME: () => STORAGE_POPUP_NAME,
            STORAGE_TOKENS_NAME: () => STORAGE_TOKENS_NAME,
          });
          const DEFAULT_EDITOR_ORIGIN = 'https://stackblitz.com';
          const SEARCH_PARAM_AUTH_CODE = 'code';
          const SEARCH_PARAM_ERROR = 'error';
          const SEARCH_PARAM_ERROR_DESCRIPTION = 'error_description';
          const BROADCAST_CHANNEL_NAME = '__wc_api_bc__';
          const STORAGE_TOKENS_NAME = '__wc_api_tokens__';
          const STORAGE_CODE_VERIFIER_NAME = '__wc_api_verifier__';
          const STORAGE_POPUP_NAME = '__wc_api_popup__';
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            TypedEventTarget: () => TypedEventTarget,
          });
          class TypedEventTarget {
            _bus = new EventTarget();
            listen(listener) {
              function wrappedListener(event) {
                listener(event.data);
              }
              this._bus.addEventListener('message', wrappedListener);
              return () => this._bus.removeEventListener('message', wrappedListener);
            }
            fireEvent(data) {
              this._bus.dispatchEvent(
                new MessageEvent('message', {
                  data,
                }),
              );
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/tokens.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            Tokens: () => Tokens,
            addAccessTokenChangedListener: () => addAccessTokenChangedListener,
            clearTokensInStorage: () => clearTokensInStorage,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/constants.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$TypedEventTarget$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js [app-client] (ecmascript)',
            );
          const IGNORED_ERROR = new Error();
          IGNORED_ERROR.stack = '';
          const accessTokenChangedListeners =
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$TypedEventTarget$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'TypedEventTarget'
            ]();
          class Tokens {
            origin;
            refresh;
            access;
            expires;
            _revoked = new AbortController();
            constructor( // editor origin that those tokens are bound to, mostly used for development
              origin, // token to use to get a new access token
              refresh, // token to provide to webcontainer
              access, // time in UTC when the token expires
              expires,
            ) {
              this.origin = origin;
              this.refresh = refresh;
              this.access = access;
              this.expires = expires;
            }
            async activate(onFailedRefresh) {
              if (this._revoked.signal.aborted) {
                throw new Error('Token revoked');
              }
              // if the access token expired we fetch a new one
              if (this.expires < Date.now()) {
                if (!(await this._fetchNewAccessToken())) {
                  return false;
                }
              }
              this._sync();
              this._startRefreshTokensLoop(onFailedRefresh);
              return true;
            }
            async revoke(clientId, ignoreRevokeError) {
              this._revoked.abort();
              try {
                const response = await fetch(`${this.origin}/oauth/revoke`, {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                  },
                  body: new URLSearchParams({
                    token: this.refresh,
                    token_type_hint: 'refresh_token',
                    client_id: clientId,
                  }),
                  mode: 'cors',
                });
                if (!response.ok) {
                  throw new Error(`Failed to logout`);
                }
              } catch (error) {
                if (!ignoreRevokeError) {
                  throw error;
                }
              }
              clearTokensInStorage();
            }
            static fromStorage() {
              const savedTokens = readTokensFromStorage();
              if (!savedTokens) {
                return null;
              }
              return new Tokens(savedTokens.origin, savedTokens.refresh, savedTokens.access, savedTokens.expires);
            }
            static async fromAuthCode({ editorOrigin, clientId, codeVerifier, authCode, redirectUri }) {
              const response = await fetch(`${editorOrigin}/oauth/token`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams({
                  client_id: clientId,
                  code: authCode,
                  code_verifier: codeVerifier,
                  grant_type: 'authorization_code',
                  redirect_uri: redirectUri,
                }),
                mode: 'cors',
              });
              if (!response.ok) {
                throw new Error(`Failed to fetch token: ${response.status}`);
              }
              const tokenResponse = await response.json();
              assertTokenResponse(tokenResponse);
              const { access_token: access, refresh_token: refresh } = tokenResponse;
              const expires = getExpiresFromTokenResponse(tokenResponse);
              return new Tokens(editorOrigin, refresh, access, expires);
            }
            async _fetchNewAccessToken() {
              try {
                const response = await fetch(`${this.origin}/oauth/token`, {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                  },
                  body: new URLSearchParams({
                    grant_type: 'refresh_token',
                    refresh_token: this.refresh,
                  }),
                  mode: 'cors',
                  signal: this._revoked.signal,
                });
                if (!response.ok) {
                  throw IGNORED_ERROR;
                }
                const tokenResponse = await response.json();
                assertTokenResponse(tokenResponse);
                const { access_token: access, refresh_token: refresh } = tokenResponse;
                const expires = getExpiresFromTokenResponse(tokenResponse);
                this.access = access;
                this.expires = expires;
                this.refresh = refresh;
                return true;
              } catch {
                clearTokensInStorage();
                return false;
              }
            }
            _sync() {
              persistTokensInStorage(this);
              fireAccessTokenChanged(this.access);
            }
            async _startRefreshTokensLoop(onFailedRefresh) {
              while (true) {
                const expiresIn = this.expires - Date.now() - 1000;
                await wait(Math.max(expiresIn, 1000));
                if (this._revoked.signal.aborted) {
                  return;
                }
                if (!this._fetchNewAccessToken()) {
                  onFailedRefresh();
                  return;
                }
                this._sync();
              }
            }
          }
          function clearTokensInStorage() {
            localStorage.removeItem(
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'STORAGE_TOKENS_NAME'
              ],
            );
          }
          function addAccessTokenChangedListener(listener) {
            return accessTokenChangedListeners.listen(listener);
          }
          function readTokensFromStorage() {
            const serializedTokens = localStorage.getItem(
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'STORAGE_TOKENS_NAME'
              ],
            );
            if (!serializedTokens) {
              return null;
            }
            try {
              return JSON.parse(serializedTokens);
            } catch {
              return null;
            }
          }
          function persistTokensInStorage(tokens) {
            localStorage.setItem(
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'STORAGE_TOKENS_NAME'
              ],
              JSON.stringify(tokens),
            );
          }
          function getExpiresFromTokenResponse({ created_at, expires_in }) {
            return (created_at + expires_in) * 1000;
          }
          function assertTokenResponse(token) {
            if (typeof token !== 'object' || !token) {
              throw new Error('Invalid Token Response');
            }
            if (
              typeof token.access_token !== 'string' ||
              typeof token.refresh_token !== 'string' ||
              typeof token.created_at !== 'number' ||
              typeof token.expires_in !== 'number'
            ) {
              throw new Error('Invalid Token Response');
            }
          }
          function wait(ms) {
            return new Promise((resolve) => setTimeout(resolve, ms));
          }
          function fireAccessTokenChanged(accessToken) {
            accessTokenChangedListeners.fireEvent(accessToken);
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/iframe-url.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            iframeSettings: () => iframeSettings,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/constants.js [app-client] (ecmascript)',
            );
          const params = {};
          let editorOrigin = null;
          const iframeSettings = {
            get editorOrigin() {
              if (editorOrigin == null) {
                editorOrigin = new URL(
                  globalThis.WEBCONTAINER_API_IFRAME_URL ??
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'DEFAULT_EDITOR_ORIGIN'
                    ],
                ).origin;
              }
              return editorOrigin;
            },
            set editorOrigin(newOrigin) {
              editorOrigin = new URL(newOrigin).origin;
            },
            setQueryParam(key, value) {
              params[key] = value;
            },
            get url() {
              const url = new URL(this.editorOrigin);
              url.pathname = '/headless';
              for (const param in params) {
                url.searchParams.set(param, params[param]);
              }
              url.searchParams.set('version', '1.5.1-internal.9');
              return url;
            },
          };
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/code.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          /**
           * Implementation of https://www.rfc-editor.org/rfc/rfc7636#section-4.2 that can
           * run in the browser.
           *
           * @internal
           *
           * @param input Code verifier.
           */ __turbopack_context__.s({
            S256: () => S256,
            newCodeVerifier: () => newCodeVerifier,
          });
          async function S256(input) {
            // input here is assumed to match https://www.rfc-editor.org/rfc/rfc3986#section-2.3
            const ascii = new TextEncoder().encode(input);
            const sha256 = new Uint8Array(await crypto.subtle.digest('SHA-256', ascii));
            // base64url encode, based on https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem
            return btoa(sha256.reduce((binary, byte) => binary + String.fromCodePoint(byte), ''))
              .replace(/\+/g, '-')
              .replace(/\//g, '_')
              .replace(/=+$/, '');
          }
          function newCodeVerifier() {
            const random = new Uint8Array(96);
            crypto.getRandomValues(random);
            let codeVerifier = '';
            for (let i = 0; i < 32; ++i) {
              codeVerifier += nextFourChars(random[3 * i + 0], random[3 * i + 1], random[3 * i + 2]);
            }
            return codeVerifier;
          }
          function nextFourChars(byte1, byte2, byte3) {
            const char1 = byte1 >> 2;
            const char2 = ((byte1 & 3) << 4) | (byte2 >> 4);
            const char3 = (byte2 & 15) | ((byte3 & 192) >> 2);
            const char4 = byte3 & 63;
            return [char1, char2, char3, char4].map(unreservedCharacters).join('');
          }
          function unreservedCharacters(code) {
            let offset;
            if (code < 26) {
              offset = code + 65; // [A-Z]
            } else if (code < 52) {
              offset = code - 26 + 97; // [a-z]
            } else if (code < 62) {
              offset = code - 52 + 48; // [0-9]
            } else {
              offset = code === 62 ? 30 /* _ */ : 45 /* - */;
            }
            return String.fromCharCode(offset);
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/reset-promise.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          /**
           * @internal
           */ __turbopack_context__.s({
            resettablePromise: () => resettablePromise,
          });
          function resettablePromise() {
            let resolve;
            let promise;
            function reset() {
              promise = new Promise((_resolve) => (resolve = _resolve));
            }
            reset();
            return {
              get promise() {
                return promise;
              },
              resolve(value) {
                return resolve(value);
              },
              reset,
            };
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/auth-state.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            assertAuthTokens: () => assertAuthTokens,
            auth: () => auth,
            authState: () => authState,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$tokens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/tokens.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/constants.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$iframe$2d$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/iframe-url.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$code$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/code.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$reset$2d$promise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/reset-promise.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$TypedEventTarget$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js [app-client] (ecmascript)',
            );
          const authState = {
            initialized: false,
            bootCalled: false,
            authComplete: (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$reset$2d$promise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'resettablePromise'
            ])(),
            clientId: '',
            oauthScope: '',
            broadcastChannel: null,
            get editorOrigin() {
              return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$iframe$2d$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'iframeSettings'
              ].editorOrigin;
            },
            tokens: null,
          };
          const authFailedListeners =
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$TypedEventTarget$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'TypedEventTarget'
            ]();
          const loggedOutListeners =
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$TypedEventTarget$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'TypedEventTarget'
            ]();
          function broadcastMessage(message) {
            if (!authState.broadcastChannel) {
              return;
            }
            authState.broadcastChannel.postMessage(message);
            // check if we are in a popup mode
            if (
              localStorage.getItem(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'STORAGE_POPUP_NAME'
                ],
              ) === 'true' &&
              message.type !== 'auth-logout'
            ) {
              localStorage.removeItem(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'STORAGE_POPUP_NAME'
                ],
              );
              // wait a tick to make sure the posted message has been sent
              setTimeout(() => {
                window.close();
              });
            }
          }
          const auth = {
            init({ editorOrigin, clientId, scope }) {
              if (authState.initialized) {
                throw new Error('Init should only be called once');
              }
              let enterprise = true;
              // #region internal
              enterprise = false;
              // #endregion
              if (enterprise && authState.bootCalled) {
                throw new Error('`auth.init` should always be called before `WebContainer.boot`');
              }
              authState.initialized = true;
              authState.tokens =
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$tokens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'Tokens'
                ].fromStorage();
              authState.clientId = clientId;
              authState.oauthScope = scope;
              authState.broadcastChannel = new BroadcastChannel(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'BROADCAST_CHANNEL_NAME'
                ],
              );
              // configure iframe url
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$iframe$2d$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'iframeSettings'
              ].setQueryParam('client_id', clientId);
              if (editorOrigin) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$iframe$2d$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'iframeSettings'
                ].editorOrigin = new URL(editorOrigin).origin;
              }
              loggedOutListeners.listen(() => authState.authComplete.reset());
              // if authentication or logout are done in another page, we want to reflect the state on this page as well
              authState.broadcastChannel.addEventListener('message', onChannelMessage);
              async function onChannelMessage(event) {
                const typedEvent = event.data;
                if (typedEvent.type === 'auth-complete') {
                  authState.tokens =
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$tokens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'Tokens'
                    ].fromStorage();
                  // we ignore the possible error here because they can't have expired just yet
                  await authState.tokens.activate(onFailedTokenRefresh);
                  authState.authComplete.resolve();
                  return;
                }
                if (typedEvent.type === 'auth-failed') {
                  authFailedListeners.fireEvent(typedEvent);
                  return;
                }
                if (typedEvent.type === 'auth-logout') {
                  loggedOutListeners.fireEvent();
                  return;
                }
              }
              if (authState.tokens) {
                const tokens = authState.tokens;
                if (tokens.origin === authState.editorOrigin) {
                  /**
                   * Here we assume that the refresh token never expires which
                   * might not be correct. If that is the case though, we will
                   * emit a 'logged-out' event to signal that the user has been
                   * logged out, which could also happen at a later time anyway.
                   *
                   * Because this flow is done entirely locally, we do not broadcast
                   * anything to the other tabs. They should be performing a similar
                   * check.
                   */ (async () => {
                    const success = await tokens.activate(onFailedTokenRefresh);
                    if (!success) {
                      // if we got new token in the meantime we discard this error
                      if (authState.tokens !== tokens) {
                        return;
                      }
                      loggedOutListeners.fireEvent();
                      return;
                    }
                    authState.authComplete.resolve();
                  })();
                  return {
                    status: 'authorized',
                  };
                }
                (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$tokens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'clearTokensInStorage'
                ])();
                authState.tokens = null;
              }
              const locationURL = new URL(window.location.href);
              const { searchParams } = locationURL;
              const updateURL = () => window.history.replaceState({}, document.title, locationURL);
              // check for errors first, aka the user declined the authorisation or stackblitz did
              if (
                searchParams.has(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'SEARCH_PARAM_ERROR'
                  ],
                )
              ) {
                const error = searchParams.get(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'SEARCH_PARAM_ERROR'
                  ],
                );
                const description = searchParams.get(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'SEARCH_PARAM_ERROR_DESCRIPTION'
                  ],
                );
                searchParams.delete(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'SEARCH_PARAM_ERROR'
                  ],
                );
                searchParams.delete(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'SEARCH_PARAM_ERROR_DESCRIPTION'
                  ],
                );
                updateURL();
                broadcastMessage({
                  type: 'auth-failed',
                  error,
                  description,
                });
                return {
                  status: 'auth-failed',
                  error,
                  description,
                };
              }
              // if there's an auth code
              if (
                searchParams.has(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'SEARCH_PARAM_AUTH_CODE'
                  ],
                )
              ) {
                const authCode = searchParams.get(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'SEARCH_PARAM_AUTH_CODE'
                  ],
                );
                const editorOrigin = authState.editorOrigin;
                searchParams.delete(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'SEARCH_PARAM_AUTH_CODE'
                  ],
                );
                updateURL();
                const codeVerifier = localStorage.getItem(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'STORAGE_CODE_VERIFIER_NAME'
                  ],
                );
                if (!codeVerifier) {
                  return {
                    status: 'need-auth',
                  };
                }
                localStorage.removeItem(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'STORAGE_CODE_VERIFIER_NAME'
                  ],
                );
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$tokens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'Tokens'
                ]
                  .fromAuthCode({
                    editorOrigin,
                    clientId: authState.clientId,
                    authCode,
                    codeVerifier,
                    redirectUri: defaultRedirectUri(),
                  })
                  .then(async (tokens) => {
                    authState.tokens = tokens;
                    assertAuthTokens(authState.tokens);
                    const success = await authState.tokens.activate(onFailedTokenRefresh);
                    // if authentication failed we throw, and we'll mark auth as failed
                    if (!success) {
                      throw new Error();
                    }
                    authState.authComplete.resolve();
                    broadcastMessage({
                      type: 'auth-complete',
                    });
                  })
                  .catch((error) => {
                    // this should never happen unless the rails app is now down for some reason?
                    console.error(error);
                    // treat it as a logged out event so that the user can retry to login
                    loggedOutListeners.fireEvent();
                    broadcastMessage({
                      type: 'auth-logout',
                    });
                  });
                return {
                  status: 'authorized',
                };
              }
              return {
                status: 'need-auth',
              };
            },
            async startAuthFlow({ popup } = {}) {
              if (!authState.initialized) {
                throw new Error('auth.init must be called first');
              }
              if (popup) {
                localStorage.setItem(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'STORAGE_POPUP_NAME'
                  ],
                  'true',
                );
                const height = 500;
                const width = 620;
                const left = window.screenLeft + (window.outerWidth - width) / 2;
                const top = window.screenTop + (window.outerHeight - height) / 2;
                window.open(
                  await generateOAuthRequest(),
                  '_blank',
                  `popup,width=${width},height=${height},left=${left},top=${top}`,
                );
              } else {
                window.location.href = await generateOAuthRequest();
              }
            },
            async logout({ ignoreRevokeError } = {}) {
              await authState.tokens?.revoke(authState.clientId, ignoreRevokeError ?? false);
              loggedOutListeners.fireEvent();
              broadcastMessage({
                type: 'auth-logout',
              });
            },
            loggedIn() {
              return authState.authComplete.promise;
            },
            on(event, listener) {
              switch (event) {
                case 'auth-failed': {
                  return authFailedListeners.listen(listener);
                }
                case 'logged-out': {
                  return loggedOutListeners.listen(listener);
                }
                default: {
                  throw new Error(`Unsupported event type '${event}'.`);
                }
              }
            },
          };
          function onFailedTokenRefresh() {
            loggedOutListeners.fireEvent();
            broadcastMessage({
              type: 'auth-logout',
            });
          }
          function defaultRedirectUri() {
            return window.location.href;
          }
          async function generateOAuthRequest() {
            const codeVerifier = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$code$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'newCodeVerifier'
            ])();
            localStorage.setItem(
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'STORAGE_CODE_VERIFIER_NAME'
              ],
              codeVerifier,
            );
            const codeChallenge = await (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$code$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'S256'
            ])(codeVerifier);
            const url = new URL('/oauth/authorize', authState.editorOrigin);
            const { searchParams } = url;
            searchParams.append('response_type', 'code');
            searchParams.append('client_id', authState.clientId);
            searchParams.append('redirect_uri', defaultRedirectUri());
            searchParams.append('scope', authState.oauthScope);
            searchParams.append('code_challenge', codeChallenge);
            searchParams.append('code_challenge_method', 'S256');
            return url.toString();
          }
          function assertAuthTokens(tokens) {
            if (!tokens) {
              throw new Error('Oops! Tokens is not defined when it always should be.');
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/preview-message-types.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          /**
           * This type is in a separate module so that localservice can import it
           * without bundling all the other webcontainer specific stuff.
           */ __turbopack_context__.s({
            PreviewMessageType: () => PreviewMessageType,
          });
          var PreviewMessageType;
          (function (PreviewMessageType) {
            PreviewMessageType['UncaughtException'] = 'PREVIEW_UNCAUGHT_EXCEPTION';
            PreviewMessageType['UnhandledRejection'] = 'PREVIEW_UNHANDLED_REJECTION';
            PreviewMessageType['ConsoleError'] = 'PREVIEW_CONSOLE_ERROR';
          })(PreviewMessageType || (PreviewMessageType = {}));
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/vendor/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            Comlink: () => comlink_exports,
          });
          var __defProp = Object.defineProperty;
          var __export = (target, all) => {
            for (var name in all)
              __defProp(target, name, {
                get: all[name],
                enumerable: true,
              });
          };
          // dist/vendor/comlink.js
          var comlink_exports = {};
          __export(comlink_exports, {
            createEndpoint: () => createEndpoint,
            expose: () => expose,
            proxy: () => proxy,
            proxyMarker: () => proxyMarker,
            releaseProxy: () => releaseProxy,
            transfer: () => transfer,
            transferHandlers: () => transferHandlers,
            windowEndpoint: () => windowEndpoint,
            wrap: () => wrap,
          });
          // ../../node_modules/comlink/dist/esm/comlink.mjs
          var proxyMarker = Symbol('Comlink.proxy');
          var createEndpoint = Symbol('Comlink.endpoint');
          var releaseProxy = Symbol('Comlink.releaseProxy');
          var throwMarker = Symbol('Comlink.thrown');
          var isObject = (val) => (typeof val === 'object' && val !== null) || typeof val === 'function';
          var proxyTransferHandler = {
            canHandle: (val) => isObject(val) && val[proxyMarker],
            serialize(obj) {
              const { port1, port2 } = new MessageChannel();
              expose(obj, port1);
              return [port2, [port2]];
            },
            deserialize(port) {
              port.start();
              return wrap(port);
            },
          };
          var throwTransferHandler = {
            canHandle: (value) => isObject(value) && throwMarker in value,
            serialize({ value }) {
              let serialized;
              if (value instanceof Error) {
                serialized = {
                  isError: true,
                  value: {
                    message: value.message,
                    name: value.name,
                    stack: value.stack,
                  },
                };
              } else {
                serialized = {
                  isError: false,
                  value,
                };
              }
              return [serialized, []];
            },
            deserialize(serialized) {
              if (serialized.isError) {
                throw Object.assign(new Error(serialized.value.message), serialized.value);
              }
              throw serialized.value;
            },
          };
          var transferHandlers = /* @__PURE__ */ new Map([
            ['proxy', proxyTransferHandler],
            ['throw', throwTransferHandler],
          ]);
          function expose(obj, ep = self) {
            ep.addEventListener('message', function callback(ev) {
              if (!ev || !ev.data) {
                return;
              }
              const { id, type, path } = Object.assign(
                {
                  path: [],
                },
                ev.data,
              );
              const argumentList = (ev.data.argumentList || []).map(fromWireValue);
              let returnValue;
              try {
                const parent = path.slice(0, -1).reduce((obj2, prop) => obj2[prop], obj);
                const rawValue = path.reduce((obj2, prop) => obj2[prop], obj);
                switch (type) {
                  case 0:
                    {
                      returnValue = rawValue;
                    }
                    break;
                  case 1:
                    {
                      parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);
                      returnValue = true;
                    }
                    break;
                  case 2:
                    {
                      returnValue = rawValue.apply(parent, argumentList);
                    }
                    break;
                  case 3:
                    {
                      const value = new rawValue(...argumentList);
                      returnValue = proxy(value);
                    }
                    break;
                  case 4:
                    {
                      const { port1, port2 } = new MessageChannel();
                      expose(obj, port2);
                      returnValue = transfer(port1, [port1]);
                    }
                    break;
                  case 5:
                    {
                      returnValue = void 0;
                    }
                    break;
                }
              } catch (value) {
                returnValue = {
                  value,
                  [throwMarker]: 0,
                };
              }
              Promise.resolve(returnValue)
                .catch((value) => {
                  return {
                    value,
                    [throwMarker]: 0,
                  };
                })
                .then((returnValue2) => {
                  const [wireValue, transferables] = toWireValue(returnValue2);
                  ep.postMessage(
                    Object.assign(Object.assign({}, wireValue), {
                      id,
                    }),
                    transferables,
                  );
                  if (type === 5) {
                    ep.removeEventListener('message', callback);
                    closeEndPoint(ep);
                  }
                });
            });
            if (ep.start) {
              ep.start();
            }
          }
          function isMessagePort(endpoint) {
            return endpoint.constructor.name === 'MessagePort';
          }
          function closeEndPoint(endpoint) {
            if (isMessagePort(endpoint)) endpoint.close();
          }
          function wrap(ep, target) {
            return createProxy(ep, [], target);
          }
          function throwIfProxyReleased(isReleased) {
            if (isReleased) {
              throw new Error('Proxy has been released and is not useable');
            }
          }
          function createProxy(ep, path = [], target = function () {}) {
            let isProxyReleased = false;
            const proxy2 = new Proxy(target, {
              get(_target, prop) {
                throwIfProxyReleased(isProxyReleased);
                if (prop === releaseProxy) {
                  return () => {
                    return requestResponseMessage(ep, {
                      type: 5,
                      path: path.map((p) => p.toString()),
                    }).then(() => {
                      closeEndPoint(ep);
                      isProxyReleased = true;
                    });
                  };
                }
                if (prop === 'then') {
                  if (path.length === 0) {
                    return {
                      then: () => proxy2,
                    };
                  }
                  const r = requestResponseMessage(ep, {
                    type: 0,
                    path: path.map((p) => p.toString()),
                  }).then(fromWireValue);
                  return r.then.bind(r);
                }
                return createProxy(ep, [...path, prop]);
              },
              set(_target, prop, rawValue) {
                throwIfProxyReleased(isProxyReleased);
                const [value, transferables] = toWireValue(rawValue);
                return requestResponseMessage(
                  ep,
                  {
                    type: 1,
                    path: [...path, prop].map((p) => p.toString()),
                    value,
                  },
                  transferables,
                ).then(fromWireValue);
              },
              apply(_target, _thisArg, rawArgumentList) {
                throwIfProxyReleased(isProxyReleased);
                const last = path[path.length - 1];
                if (last === createEndpoint) {
                  return requestResponseMessage(ep, {
                    type: 4,
                  }).then(fromWireValue);
                }
                if (last === 'bind') {
                  return createProxy(ep, path.slice(0, -1));
                }
                const [argumentList, transferables] = processArguments(rawArgumentList);
                return requestResponseMessage(
                  ep,
                  {
                    type: 2,
                    path: path.map((p) => p.toString()),
                    argumentList,
                  },
                  transferables,
                ).then(fromWireValue);
              },
              construct(_target, rawArgumentList) {
                throwIfProxyReleased(isProxyReleased);
                const [argumentList, transferables] = processArguments(rawArgumentList);
                return requestResponseMessage(
                  ep,
                  {
                    type: 3,
                    path: path.map((p) => p.toString()),
                    argumentList,
                  },
                  transferables,
                ).then(fromWireValue);
              },
            });
            return proxy2;
          }
          function myFlat(arr) {
            return Array.prototype.concat.apply([], arr);
          }
          function processArguments(argumentList) {
            const processed = argumentList.map(toWireValue);
            return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];
          }
          var transferCache = /* @__PURE__ */ new WeakMap();
          function transfer(obj, transfers) {
            transferCache.set(obj, transfers);
            return obj;
          }
          function proxy(obj) {
            return Object.assign(obj, {
              [proxyMarker]: true,
            });
          }
          function windowEndpoint(w, context = self, targetOrigin = '*') {
            return {
              postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),
              addEventListener: context.addEventListener.bind(context),
              removeEventListener: context.removeEventListener.bind(context),
            };
          }
          function toWireValue(value) {
            for (const [name, handler] of transferHandlers) {
              if (handler.canHandle(value)) {
                const [serializedValue, transferables] = handler.serialize(value);
                return [
                  {
                    type: 3,
                    name,
                    value: serializedValue,
                  },
                  transferables,
                ];
              }
            }
            return [
              {
                type: 0,
                value,
              },
              transferCache.get(value) || [],
            ];
          }
          function fromWireValue(value) {
            switch (value.type) {
              case 3:
                return transferHandlers.get(value.name).deserialize(value.value);
              case 0:
                return value.value;
            }
          }
          function requestResponseMessage(ep, msg, transfers) {
            return new Promise((resolve) => {
              const id = generateUUID();
              ep.addEventListener('message', function l(ev) {
                if (!ev.data || !ev.data.id || ev.data.id !== id) {
                  return;
                }
                ep.removeEventListener('message', l);
                resolve(ev.data);
              });
              if (ep.start) {
                ep.start();
              }
              ep.postMessage(
                Object.assign(
                  {
                    id,
                  },
                  msg,
                ),
                transfers,
              );
            });
          }
          function generateUUID() {
            return new Array(4)
              .fill(0)
              .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))
              .join('-');
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/reload-preview.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          /**
           * This function reloads the provided iframe.
           *
           * @param preview The iframe page to reload.
           * @param hardRefreshTimeout The timeout after which the preview is reset if it hasn't responded to the reload event.
           */ __turbopack_context__.s({
            reloadPreview: () => reloadPreview,
          });
          function reloadPreview(preview, hardRefreshTimeout = 200) {
            const { port1, port2 } = new MessageChannel();
            let resolve;
            const promise = new Promise((_resolve) => {
              resolve = _resolve;
            });
            const done = () => {
              resolve();
              port2.close();
            };
            const timeout = setTimeout(() => {
              const iframeSrc = preview.src;
              preview.src = iframeSrc;
              done();
            }, hardRefreshTimeout);
            port2.addEventListener('message', (event) => {
              const data = event.data;
              if (data == null || typeof data !== 'object') {
                return;
              }
              if (data.type === 'LOCALSERVICE_WINDOW_RELOADED') {
                clearTimeout(timeout);
                done();
              }
            });
            preview.contentWindow?.postMessage(
              {
                type: 'LOCALSERVICE_RELOAD_WINDOW',
                callback: port1,
              },
              '*',
              [port1],
            );
            return promise;
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/is-preview-message.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            isPreviewMessage: () => isPreviewMessage,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$preview$2d$message$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/preview-message-types.js [app-client] (ecmascript)',
            );
          const PREVIEW_MESSAGE_TYPES = [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$preview$2d$message$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'PreviewMessageType'
            ].ConsoleError,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$preview$2d$message$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'PreviewMessageType'
            ].UncaughtException,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$preview$2d$message$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'PreviewMessageType'
            ].UnhandledRejection,
          ];
          function isPreviewMessage(data) {
            if (data == null || typeof data !== 'object') {
              return false;
            }
            if (!('type' in data) || !PREVIEW_MESSAGE_TYPES.includes(data.type)) {
              return false;
            }
            return true;
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/null-prototype.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            nullPrototype: () => nullPrototype,
          });
          function nullPrototype(source) {
            const prototype = Object.create(null);
            if (!source) {
              return prototype;
            }
            return Object.assign(prototype, source);
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/file-system.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            toExternalFileSystemTree: () => toExternalFileSystemTree,
            toInternalFileSystemTree: () => toInternalFileSystemTree,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$null$2d$prototype$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/null-prototype.js [app-client] (ecmascript)',
            );
          function toInternalFileSystemTree(tree) {
            const newTree = {
              d: {},
            };
            for (const name of Object.keys(tree)) {
              const entry = tree[name];
              if ('file' in entry) {
                if ('symlink' in entry.file) {
                  newTree.d[name] = {
                    f: {
                      l: entry.file.symlink,
                    },
                  };
                  continue;
                }
                const contents = entry.file.contents;
                const stringContents = typeof contents === 'string' ? contents : binaryString(contents);
                const binary =
                  typeof contents === 'string'
                    ? {}
                    : {
                        b: true,
                      };
                newTree.d[name] = {
                  f: {
                    c: stringContents,
                    ...binary,
                  },
                };
                continue;
              }
              const newEntry = toInternalFileSystemTree(entry.directory);
              newTree.d[name] = newEntry;
            }
            return newTree;
          }
          function toExternalFileSystemTree(tree) {
            const newTree = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$null$2d$prototype$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'nullPrototype'
            ])();
            if ('f' in tree) {
              throw new Error('It is not possible to export a single file in the JSON format.');
            }
            if ('d' in tree) {
              for (const name of Object.keys(tree.d)) {
                const entry = tree.d[name];
                if ('d' in entry) {
                  newTree[name] = (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$null$2d$prototype$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'nullPrototype'
                  ])({
                    directory: toExternalFileSystemTree(entry),
                  });
                } else if ('f' in entry) {
                  if ('c' in entry.f) {
                    newTree[name] = (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$null$2d$prototype$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'nullPrototype'
                    ])({
                      file: (0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$null$2d$prototype$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'nullPrototype'
                      ])({
                        contents: entry.f.c,
                      }),
                    });
                  } else if ('l' in entry.f) {
                    newTree[name] = (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$null$2d$prototype$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'nullPrototype'
                    ])({
                      file: (0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$null$2d$prototype$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'nullPrototype'
                      ])({
                        symlink: entry.f.l,
                      }),
                    });
                  }
                }
              }
            }
            return newTree;
          }
          function binaryString(bytes) {
            let result = '';
            for (const byte of bytes) {
              result += String.fromCharCode(byte);
            }
            return result;
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils.js [app-client] (ecmascript) <locals>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils.js [app-client] (ecmascript) <module evaluation>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$reload$2d$preview$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/reload-preview.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$preview$2d$message$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/preview-message-types.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$is$2d$preview$2d$message$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/is-preview-message.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$null$2d$prototype$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/null-prototype.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$file$2d$system$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/file-system.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils.js [app-client] (ecmascript) <locals>',
            );
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/index.js [app-client] (ecmascript) <locals>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          /**
           * The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.
           *
           * Its main entrypoint is the {@link WebContainer} class.
           *
           * @packageDocumentation
           */ __turbopack_context__.s({
            WebContainer: () => WebContainer,
            WebContainerInternal: () => WebContainerInternal,
            auth: () => auth,
            configureAPIKey: () => configureAPIKey,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/auth-state.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/vendor/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$tokens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/tokens.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$iframe$2d$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/iframe-url.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$is$2d$preview$2d$message$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/is-preview-message.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$file$2d$system$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils/file-system.js [app-client] (ecmascript)',
            );
          const auth =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'auth'
            ];
          let bootPromise = null;
          let cachedServerPromise = null;
          let cachedBootOptions = {};
          const decoder = new TextDecoder();
          const encoder = new TextEncoder();
          class WebContainer {
            _instance;
            _runtimeInfo;
            /**
             * Gives access to the underlying file system.
             */ fs;
            // #region internal
            internal;
            // #endregion
            static _instance = null;
            _tornDown = false;
            _unsubscribeFromTokenChangedListener = () => {};
            /** @internal */ constructor(/** @internal */ _instance, fs, previewScript, /** @internal */ _runtimeInfo) {
              this._instance = _instance;
              this._runtimeInfo = _runtimeInfo;
              this.fs = new FileSystemAPIClient(fs);
              // #region internal
              const previewScriptAPI = new PreviewScriptAPIClient(previewScript);
              this.internal = new WebContainerInternal(previewScriptAPI, _instance);
              // #endregion
              // forward the credentials to webcontainer if needed
              if (
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'authState'
                ].initialized
              ) {
                this._unsubscribeFromTokenChangedListener = (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$tokens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'addAccessTokenChangedListener'
                ])((accessToken) => {
                  this._instance.setCredentials({
                    accessToken,
                    editorOrigin:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'authState'
                      ].editorOrigin,
                  });
                });
                (async () => {
                  await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'authState'
                  ].authComplete.promise;
                  if (this._tornDown) {
                    return;
                  }
                  (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'assertAuthTokens'
                  ])(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'authState'
                    ].tokens,
                  );
                  await this._instance.setCredentials({
                    accessToken:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'authState'
                      ].tokens.access,
                    editorOrigin:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'authState'
                      ].editorOrigin,
                  });
                })().catch((error) => {
                  // print the error as this is likely a bug in webcontainer
                  console.error(error);
                });
              }
            }
            async spawn(command, optionsOrArgs, options) {
              let args = [];
              if (Array.isArray(optionsOrArgs)) {
                args = optionsOrArgs;
              } else {
                options = optionsOrArgs;
              }
              let output = undefined;
              let outputStream = new ReadableStream();
              if (options?.output !== false) {
                const result = streamWithPush();
                output = result.push;
                outputStream = result.stream;
              }
              let stdout = undefined;
              let stdoutStream;
              let stderr = undefined;
              let stderrStream;
              // #region internal
              stdoutStream = new ReadableStream();
              stderrStream = new ReadableStream();
              if (options?.stdout) {
                const result = streamWithPush();
                stdout = result.push;
                stdoutStream = result.stream;
              }
              if (options?.stderr) {
                const result = streamWithPush();
                stderr = result.push;
                stderrStream = result.stream;
              }
              // #endregion
              const wrappedOutput = proxyListener(binaryListener(output));
              const wrappedStdout = proxyListener(binaryListener(stdout));
              const wrappedStderr = proxyListener(binaryListener(stderr));
              const process = await this._instance.run(
                {
                  command,
                  args,
                  cwd: options?.cwd,
                  env: options?.env,
                  terminal: options?.terminal,
                },
                wrappedStdout,
                wrappedStderr,
                wrappedOutput,
              );
              return new WebContainerProcessImpl(process, outputStream, stdoutStream, stderrStream);
            }
            async export(path, options) {
              const serializeOptions = {
                format: options?.format ?? 'json',
                includes: options?.includes,
                excludes: options?.excludes,
                external: true,
              };
              const result = await this._instance.serialize(path, serializeOptions);
              if (serializeOptions.format === 'json') {
                const data = JSON.parse(decoder.decode(result));
                return (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$file$2d$system$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'toExternalFileSystemTree'
                ])(data);
              }
              return result;
            }
            on(event, listener) {
              if (event === 'preview-message') {
                const originalListener = listener;
                listener = (message) => {
                  if (
                    (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$is$2d$preview$2d$message$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'isPreviewMessage'
                    ])(message)
                  ) {
                    originalListener(message);
                  }
                };
              }
              const { listener: wrapped, subscribe } = syncSubscription(listener);
              return subscribe(
                this._instance.on(
                  event,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'Comlink'
                  ].proxy(wrapped),
                ),
              );
            }
            /**
             * Mounts a tree of files into the filesystem. This can be specified as a tree object ({@link FileSystemTree})
             * or as a binary snapshot generated by [`@webcontainer/snapshot`](https://www.npmjs.com/package/@webcontainer/snapshot).
             *
             * @param snapshotOrTree - A tree of files, or a binary snapshot. Note that binary payloads will be transferred.
             * @param options.mountPoint - Specifies a nested path where the tree should be mounted.
             */ mount(snapshotOrTree, options) {
              const payload =
                snapshotOrTree instanceof Uint8Array
                  ? snapshotOrTree
                  : snapshotOrTree instanceof ArrayBuffer
                    ? new Uint8Array(snapshotOrTree)
                    : encoder.encode(
                        JSON.stringify(
                          (0,
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2f$file$2d$system$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'toInternalFileSystemTree'
                          ])(snapshotOrTree),
                        ),
                      );
              return this._instance.loadFiles(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'Comlink'
                ].transfer(payload, [payload.buffer]),
                {
                  mountPoints: options?.mountPoint,
                },
              );
            }
            /**
             * Set a custom script to be injected into all previews. When this function is called, every
             * future page reload will contain the provided script tag on all HTML responses.
             *
             * Note:
             *
             * When this function resolves, every preview reloaded _after_ will have the new script.
             * Existing preview have to be explicitely reloaded.
             *
             * To reload a preview you can use `reloadPreview`.
             *
             * @param scriptSrc Source for the script tag.
             * @param options Options to define which type of script this is.
             */ setPreviewScript(scriptSrc, options) {
              return this._instance.setPreviewScript(scriptSrc, options);
            }
            /**
             * The default value of the `PATH` environment variable for processes started through {@link spawn}.
             */ get path() {
              return this._runtimeInfo.path;
            }
            /**
             * The full path to the working directory (see {@link FileSystemAPI}).
             */ get workdir() {
              return this._runtimeInfo.cwd;
            }
            /**
             * Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,
             * a new WebContainer instance can be obtained by calling {@link WebContainer.boot | `boot`}.
             *
             * All entities derived from this instance (e.g. processes, the file system, etc.) also become unusable
             * after calling this method.
             */ teardown() {
              if (this._tornDown) {
                throw new Error('WebContainer already torn down');
              }
              this._tornDown = true;
              this._unsubscribeFromTokenChangedListener();
              this.fs._teardown();
              this._instance.teardown();
              this._instance[
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'Comlink'
                ].releaseProxy
              ]();
              if (WebContainer._instance === this) {
                WebContainer._instance = null;
              }
            }
            /**
             * Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently
             * (see {@link WebContainer.teardown | `teardown`}).
             *
             * Booting WebContainer is an expensive operation.
             */ static async boot(options = {}) {
              const { workdirName } = options;
              if (window.crossOriginIsolated && options.coep === 'none') {
                console.warn(
                  `A Cross-Origin-Embedder-Policy header is required in cross origin isolated environments.\nSet the 'coep' option to 'require-corp'.`,
                );
              }
              if (workdirName?.includes('/') || workdirName === '..' || workdirName === '.') {
                throw new Error('workdirName should be a valid folder name');
              }
              // signal that boot was called to auth module as calling auth.init after boot is likely incorrect
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'authState'
              ].bootCalled = true;
              // try to "acquire the lock", i.e. wait for any ongoing boot request to finish
              while (bootPromise) {
                await bootPromise;
              }
              if (WebContainer._instance) {
                throw new Error('Only a single WebContainer instance can be booted');
              }
              const instancePromise = unsynchronizedBoot(options);
              // the "lock" is a promise for the ongoing boot that never fails
              bootPromise = instancePromise.catch(() => {});
              try {
                const instance = await instancePromise;
                WebContainer._instance = instance;
                return instance;
              } finally {
                // release the "lock"
                bootPromise = null;
              }
            }
          }
          function configureAPIKey(key) {
            if (
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'authState'
              ].bootCalled
            ) {
              throw new Error('`configureAPIKey` should always be called before `WebContainer.boot`');
            }
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$iframe$2d$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'iframeSettings'
            ].setQueryParam('client_id', key);
          }
          class WebContainerInternal {
            previewScript;
            _instance;
            constructor(
              /**
               * Exchange messages with preview scripts.
               */ previewScript,
              /** @internal */ _instance,
            ) {
              this.previewScript = previewScript;
              this._instance = _instance;
            }
            watchPaths(options, cb) {
              const { listener, subscribe } = syncSubscription(cb);
              return subscribe(
                this._instance.watchPaths(
                  options,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'Comlink'
                  ].proxy(listener),
                ),
              );
            }
            getProcesses() {
              return this._instance.getProcesses();
            }
            onProcessesRemove(cb) {
              const { listener, subscribe } = syncSubscription(cb);
              return subscribe(
                this._instance.onProcessesRemove(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'Comlink'
                  ].proxy(listener),
                ),
              );
            }
            serialize(path, options) {
              return this._instance.serialize(path, options);
            }
            setCORSProxy(options) {
              return this._instance.setCORSProxy(options);
            }
            setCORSAuthToken(token) {
              return this._instance.setCORSAuthToken(token);
            }
          }
          const DIR_ENTRY_TYPE_FILE = 1;
          const DIR_ENTRY_TYPE_DIR = 2;
          /**
           * @internal
           */ class DirEntImpl {
            name;
            _type;
            constructor(name, _type) {
              this.name = name;
              this._type = _type;
            }
            isFile() {
              return this._type === DIR_ENTRY_TYPE_FILE;
            }
            isDirectory() {
              return this._type === DIR_ENTRY_TYPE_DIR;
            }
          }
          class FSWatcher {
            _apiClient;
            _path;
            _options;
            _listener;
            _wrappedListener;
            _watcher;
            _closed = false;
            constructor(_apiClient, _path, _options, _listener) {
              this._apiClient = _apiClient;
              this._path = _path;
              this._options = _options;
              this._listener = _listener;
              this._apiClient._watchers.add(this);
              this._wrappedListener = (event, filename) => {
                if (this._listener && !this._closed) {
                  this._listener(event, filename);
                }
              };
              this._apiClient._fs
                .watch(this._path, this._options, proxyListener(this._wrappedListener))
                .then((_watcher) => {
                  this._watcher = _watcher;
                  if (this._closed) {
                    this._teardown();
                  }
                })
                .catch(console.error);
            }
            close() {
              if (!this._closed) {
                this._closed = true;
                this._apiClient._watchers.delete(this);
                this._teardown();
              }
            }
            /**
             * @internal
             */ _teardown() {
              this._watcher?.close().finally(() => {
                this._watcher?.[
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'Comlink'
                  ].releaseProxy
                ]();
              });
            }
          }
          /**
           * @internal
           */ class WebContainerProcessImpl {
            output;
            input;
            exit;
            _process;
            stdout;
            stderr;
            constructor(process, output, stdout, stderr) {
              this.output = output;
              this._process = process;
              this.input = new WritableStream({
                write: (data) => {
                  // this promise is not supposed to fail anyway
                  this._getProcess()
                    ?.write(data)
                    .catch(() => {});
                },
              });
              this.exit = this._onExit();
              // #region internal
              // this cast is only needed to make stable builds happy, where those fields are unexposed
              // #endregion
              this.stdout = stdout;
              this.stderr = stderr;
            }
            kill() {
              this._getProcess()?.kill();
            }
            resize(dimensions) {
              this._getProcess()?.resize(dimensions);
            }
            async _onExit() {
              try {
                return await this._process.onExit;
              } finally {
                this._process?.[
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'Comlink'
                  ].releaseProxy
                ]();
                this._process = null;
              }
            }
            _getProcess() {
              if (this._process == null) {
                console.warn('This process already exited');
              }
              return this._process;
            }
          }
          /**
           * @internal
           */ class FileSystemAPIClient {
            _fs;
            _watchers = new Set([]);
            constructor(fs) {
              this._fs = fs;
            }
            rm(...args) {
              return this._fs.rm(...args);
            }
            async readFile(path, encoding) {
              return await this._fs.readFile(path, encoding);
            }
            async rename(oldPath, newPath) {
              return await this._fs.rename(oldPath, newPath);
            }
            async writeFile(path, data, options) {
              if (data instanceof Uint8Array) {
                const buffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);
                data =
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'Comlink'
                  ].transfer(new Uint8Array(buffer), [buffer]);
              }
              await this._fs.writeFile(path, data, options);
            }
            async readdir(path, options) {
              const result = await this._fs.readdir(path, options);
              if (isStringArray(result)) {
                return result;
              }
              if (isTypedArrayCollection(result)) {
                return result;
              }
              const entries = result.map((entry) => new DirEntImpl(entry.name, entry['Symbol(type)']));
              return entries;
            }
            async mkdir(path, options) {
              return await this._fs.mkdir(path, options);
            }
            watch(path, options, listener) {
              if (typeof options === 'function') {
                listener = options;
                options = null;
              }
              return new FSWatcher(this, path, options, listener);
            }
            /**
             * @internal
             */ _teardown() {
              this._fs[
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'Comlink'
                ].releaseProxy
              ]();
              for (const watcherWrapper of this._watchers) {
                watcherWrapper.close();
              }
            }
          }
          /**
           * @internal
           */ class PreviewScriptAPIClient {
            _previewScript;
            /**
             * For each type of event, only a single message port is sent across
             * so that values sent from previews can be transfered.
             *
             * We then dispatch to multiple listeners here on the embedder / host.
             */ _listeners = new Map();
            storage = {
              set: (value) => {
                /**
                 * This call to structure clone is here to make sure that we'll later be able
                 * to structure clone it and so we can fail early.
                 */ this._previewScript.storageSet(structuredClone(value));
              },
              get: () => {
                return this._previewScript.storageGet();
              },
              on: (_event, listener) => {
                return this._on('storage:change', listener);
              },
            };
            constructor(_previewScript) {
              this._previewScript = _previewScript;
            }
            broadcast(message) {
              /**
               * This call to structure clone is here to make sure that we'll later be able
               * to structure clone it and so we can fail early.
               */ this._previewScript.broadcast(structuredClone(message));
            }
            on(event, listener) {
              return this._on(event, listener);
            }
            _on(eventType, listener) {
              let listenersForEvent = this._listeners.get(eventType);
              if (!listenersForEvent) {
                const localListeners = new Set();
                const { listener: wrapped, subscribe } = syncSubscription((data) => {
                  localListeners.forEach((listener) => listener(data));
                });
                listenersForEvent = {
                  localListeners,
                  remoteUnsubscribe: subscribe(
                    this._previewScript.on(
                      eventType,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'Comlink'
                      ].proxy(wrapped),
                    ),
                  ),
                };
              }
              listenersForEvent.localListeners.add(listener);
              return () => {
                const { localListeners, remoteUnsubscribe } = listenersForEvent;
                localListeners.delete(listener);
                if (localListeners.size === 0) {
                  remoteUnsubscribe();
                  this._listeners.delete(eventType);
                }
              };
            }
          }
          async function unsynchronizedBoot(options) {
            const { serverPromise } = serverFactory(options);
            const server = await serverPromise;
            const instance = await server.build({
              host: window.location.host,
              version: '1.5.1-internal.9',
              workdirName: options.workdirName,
              forwardPreviewErrors: options.forwardPreviewErrors,
            });
            const [fs, previewScript, runtimeInfo] = await Promise.all([
              instance.fs(),
              instance.previewScript(),
              instance.runtimeInfo(),
            ]);
            return new WebContainer(instance, fs, previewScript, runtimeInfo);
          }
          function binaryListener(listener) {
            if (listener == null) {
              return undefined;
            }
            return (data) => {
              if (data instanceof Uint8Array) {
                listener(decoder.decode(data));
              } else if (data == null) {
                listener(null);
              }
            };
          }
          function proxyListener(listener) {
            if (listener == null) {
              return undefined;
            }
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'Comlink'
            ].proxy(listener);
          }
          function serverFactory(options) {
            if (cachedServerPromise != null) {
              if (options.coep !== cachedBootOptions.coep) {
                console.warn(`Attempting to boot WebContainer with 'coep: ${options.coep}'`);
                console.warn(`First boot had 'coep: ${cachedBootOptions.coep}', new settings will not take effect!`);
              }
              return {
                serverPromise: cachedServerPromise,
              };
            }
            const iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            iframe.setAttribute('allow', 'cross-origin-isolated');
            const url =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$iframe$2d$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'iframeSettings'
              ].url;
            if (options.coep) {
              url.searchParams.set('coep', options.coep);
            }
            iframe.src = url.toString();
            const { origin } = url;
            cachedBootOptions = {
              ...options,
            };
            cachedServerPromise = new Promise((resolve) => {
              const onMessage = (event) => {
                if (event.origin !== origin) {
                  return;
                }
                const { data } = event;
                if (data.type === 'init') {
                  resolve(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'Comlink'
                    ].wrap(event.ports[0]),
                  );
                  return;
                }
                if (data.type === 'warning') {
                  console[data.level].call(console, data.message);
                  return;
                }
              };
              window.addEventListener('message', onMessage);
            });
            document.body.insertBefore(iframe, null);
            return {
              serverPromise: cachedServerPromise,
            };
          }
          function isStringArray(list) {
            return typeof list[0] === 'string';
          }
          function isTypedArrayCollection(list) {
            return list[0] instanceof Uint8Array;
          }
          function streamWithPush() {
            let controller = null;
            const stream = new ReadableStream({
              start(controller_) {
                controller = controller_;
              },
            });
            const push = (item) => {
              if (item != null) {
                controller?.enqueue(item);
              } else {
                controller?.close();
                controller = null;
              }
            };
            return {
              stream,
              push,
            };
          }
          function syncSubscription(listener) {
            let stopped = false;
            let unsubscribe = () => {};
            const wrapped = (...args) => {
              if (stopped) {
                return;
              }
              listener(...args);
            };
            return {
              subscribe(promise) {
                promise.then((unsubscribe_) => {
                  unsubscribe = unsubscribe_;
                  if (stopped) {
                    unsubscribe();
                  }
                });
                return () => {
                  stopped = true;
                  unsubscribe();
                };
              },
              listener: wrapped,
            };
          }
        }
      },
    '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/index.js [app-client] (ecmascript) <module evaluation>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$auth$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/auth-state.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$preview$2d$message$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/preview-message-types.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$vendor$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/vendor/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$tokens$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/tokens.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$internal$2f$iframe$2d$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/internal/iframe-url.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/utils.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webcontainer$2b$api$40$1$2e$5$2e$1$2d$internal$2e$9$2f$node_modules$2f40$webcontainer$2f$api$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@webcontainer+api@1.5.1-internal.9/node_modules/@webcontainer/api/dist/index.js [app-client] (ecmascript) <locals>',
            );
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/errors/ai-sdk-error.ts
          __turbopack_context__.s({
            AISDKError: () => AISDKError,
            APICallError: () => APICallError,
            EmptyResponseBodyError: () => EmptyResponseBodyError,
            InvalidArgumentError: () => InvalidArgumentError,
            InvalidPromptError: () => InvalidPromptError,
            InvalidResponseDataError: () => InvalidResponseDataError,
            JSONParseError: () => JSONParseError,
            LoadAPIKeyError: () => LoadAPIKeyError,
            LoadSettingError: () => LoadSettingError,
            NoContentGeneratedError: () => NoContentGeneratedError,
            NoSuchModelError: () => NoSuchModelError,
            TooManyEmbeddingValuesForCallError: () => TooManyEmbeddingValuesForCallError,
            TypeValidationError: () => TypeValidationError,
            UnsupportedFunctionalityError: () => UnsupportedFunctionalityError,
            getErrorMessage: () => getErrorMessage,
            isJSONArray: () => isJSONArray,
            isJSONObject: () => isJSONObject,
            isJSONValue: () => isJSONValue,
          });
          var marker = 'vercel.ai.error';
          var symbol = Symbol.for(marker);
          var _a;
          var _AISDKError = class _AISDKError extends Error {
            /**
             * Creates an AI SDK Error.
             *
             * @param {Object} params - The parameters for creating the error.
             * @param {string} params.name - The name of the error.
             * @param {string} params.message - The error message.
             * @param {unknown} [params.cause] - The underlying cause of the error.
             */ constructor({ name: name14, message, cause }) {
              super(message);
              this[_a] = true;
              this.name = name14;
              this.cause = cause;
            }
            /**
             * Checks if the given error is an AI SDK Error.
             * @param {unknown} error - The error to check.
             * @returns {boolean} True if the error is an AI SDK Error, false otherwise.
             */ static isInstance(error) {
              return _AISDKError.hasMarker(error, marker);
            }
            static hasMarker(error, marker15) {
              const markerSymbol = Symbol.for(marker15);
              return (
                error != null &&
                typeof error === 'object' &&
                markerSymbol in error &&
                typeof error[markerSymbol] === 'boolean' &&
                error[markerSymbol] === true
              );
            }
          };
          _a = symbol;
          var AISDKError = _AISDKError;
          // src/errors/api-call-error.ts
          var name = 'AI_APICallError';
          var marker2 = `vercel.ai.error.${name}`;
          var symbol2 = Symbol.for(marker2);
          var _a2;
          var APICallError = class extends AISDKError {
            constructor({
              message,
              url,
              requestBodyValues,
              statusCode,
              responseHeaders,
              responseBody,
              cause,
              isRetryable = statusCode != null &&
                (statusCode === 408 || // request timeout
                  statusCode === 409 || // conflict
                  statusCode === 429 || // too many requests
                  statusCode >= 500), // server error
              data,
            }) {
              super({
                name,
                message,
                cause,
              });
              this[_a2] = true;
              this.url = url;
              this.requestBodyValues = requestBodyValues;
              this.statusCode = statusCode;
              this.responseHeaders = responseHeaders;
              this.responseBody = responseBody;
              this.isRetryable = isRetryable;
              this.data = data;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker2);
            }
          };
          _a2 = symbol2;
          // src/errors/empty-response-body-error.ts
          var name2 = 'AI_EmptyResponseBodyError';
          var marker3 = `vercel.ai.error.${name2}`;
          var symbol3 = Symbol.for(marker3);
          var _a3;
          var EmptyResponseBodyError = class extends AISDKError {
            // used in isInstance
            constructor({ message = 'Empty response body' } = {}) {
              super({
                name: name2,
                message,
              });
              this[_a3] = true;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker3);
            }
          };
          _a3 = symbol3;
          // src/errors/get-error-message.ts
          function getErrorMessage(error) {
            if (error == null) {
              return 'unknown error';
            }
            if (typeof error === 'string') {
              return error;
            }
            if (error instanceof Error) {
              return error.message;
            }
            return JSON.stringify(error);
          }
          // src/errors/invalid-argument-error.ts
          var name3 = 'AI_InvalidArgumentError';
          var marker4 = `vercel.ai.error.${name3}`;
          var symbol4 = Symbol.for(marker4);
          var _a4;
          var InvalidArgumentError = class extends AISDKError {
            constructor({ message, cause, argument }) {
              super({
                name: name3,
                message,
                cause,
              });
              this[_a4] = true;
              this.argument = argument;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker4);
            }
          };
          _a4 = symbol4;
          // src/errors/invalid-prompt-error.ts
          var name4 = 'AI_InvalidPromptError';
          var marker5 = `vercel.ai.error.${name4}`;
          var symbol5 = Symbol.for(marker5);
          var _a5;
          var InvalidPromptError = class extends AISDKError {
            constructor({ prompt, message, cause }) {
              super({
                name: name4,
                message: `Invalid prompt: ${message}`,
                cause,
              });
              this[_a5] = true;
              this.prompt = prompt;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker5);
            }
          };
          _a5 = symbol5;
          // src/errors/invalid-response-data-error.ts
          var name5 = 'AI_InvalidResponseDataError';
          var marker6 = `vercel.ai.error.${name5}`;
          var symbol6 = Symbol.for(marker6);
          var _a6;
          var InvalidResponseDataError = class extends AISDKError {
            constructor({ data, message = `Invalid response data: ${JSON.stringify(data)}.` }) {
              super({
                name: name5,
                message,
              });
              this[_a6] = true;
              this.data = data;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker6);
            }
          };
          _a6 = symbol6;
          // src/errors/json-parse-error.ts
          var name6 = 'AI_JSONParseError';
          var marker7 = `vercel.ai.error.${name6}`;
          var symbol7 = Symbol.for(marker7);
          var _a7;
          var JSONParseError = class extends AISDKError {
            constructor({ text, cause }) {
              super({
                name: name6,
                message: `JSON parsing failed: Text: ${text}.
Error message: ${getErrorMessage(cause)}`,
                cause,
              });
              this[_a7] = true;
              this.text = text;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker7);
            }
          };
          _a7 = symbol7;
          // src/errors/load-api-key-error.ts
          var name7 = 'AI_LoadAPIKeyError';
          var marker8 = `vercel.ai.error.${name7}`;
          var symbol8 = Symbol.for(marker8);
          var _a8;
          var LoadAPIKeyError = class extends AISDKError {
            // used in isInstance
            constructor({ message }) {
              super({
                name: name7,
                message,
              });
              this[_a8] = true;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker8);
            }
          };
          _a8 = symbol8;
          // src/errors/load-setting-error.ts
          var name8 = 'AI_LoadSettingError';
          var marker9 = `vercel.ai.error.${name8}`;
          var symbol9 = Symbol.for(marker9);
          var _a9;
          var LoadSettingError = class extends AISDKError {
            // used in isInstance
            constructor({ message }) {
              super({
                name: name8,
                message,
              });
              this[_a9] = true;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker9);
            }
          };
          _a9 = symbol9;
          // src/errors/no-content-generated-error.ts
          var name9 = 'AI_NoContentGeneratedError';
          var marker10 = `vercel.ai.error.${name9}`;
          var symbol10 = Symbol.for(marker10);
          var _a10;
          var NoContentGeneratedError = class extends AISDKError {
            // used in isInstance
            constructor({ message = 'No content generated.' } = {}) {
              super({
                name: name9,
                message,
              });
              this[_a10] = true;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker10);
            }
          };
          _a10 = symbol10;
          // src/errors/no-such-model-error.ts
          var name10 = 'AI_NoSuchModelError';
          var marker11 = `vercel.ai.error.${name10}`;
          var symbol11 = Symbol.for(marker11);
          var _a11;
          var NoSuchModelError = class extends AISDKError {
            constructor({ errorName = name10, modelId, modelType, message = `No such ${modelType}: ${modelId}` }) {
              super({
                name: errorName,
                message,
              });
              this[_a11] = true;
              this.modelId = modelId;
              this.modelType = modelType;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker11);
            }
          };
          _a11 = symbol11;
          // src/errors/too-many-embedding-values-for-call-error.ts
          var name11 = 'AI_TooManyEmbeddingValuesForCallError';
          var marker12 = `vercel.ai.error.${name11}`;
          var symbol12 = Symbol.for(marker12);
          var _a12;
          var TooManyEmbeddingValuesForCallError = class extends AISDKError {
            constructor(options) {
              super({
                name: name11,
                message: `Too many values for a single embedding call. The ${options.provider} model "${options.modelId}" can only embed up to ${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,
              });
              this[_a12] = true;
              this.provider = options.provider;
              this.modelId = options.modelId;
              this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;
              this.values = options.values;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker12);
            }
          };
          _a12 = symbol12;
          // src/errors/type-validation-error.ts
          var name12 = 'AI_TypeValidationError';
          var marker13 = `vercel.ai.error.${name12}`;
          var symbol13 = Symbol.for(marker13);
          var _a13;
          var _TypeValidationError = class _TypeValidationError extends AISDKError {
            constructor({ value, cause }) {
              super({
                name: name12,
                message: `Type validation failed: Value: ${JSON.stringify(value)}.
Error message: ${getErrorMessage(cause)}`,
                cause,
              });
              this[_a13] = true;
              this.value = value;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker13);
            }
            /**
             * Wraps an error into a TypeValidationError.
             * If the cause is already a TypeValidationError with the same value, it returns the cause.
             * Otherwise, it creates a new TypeValidationError.
             *
             * @param {Object} params - The parameters for wrapping the error.
             * @param {unknown} params.value - The value that failed validation.
             * @param {unknown} params.cause - The original error or cause of the validation failure.
             * @returns {TypeValidationError} A TypeValidationError instance.
             */ static wrap({ value, cause }) {
              return _TypeValidationError.isInstance(cause) && cause.value === value
                ? cause
                : new _TypeValidationError({
                    value,
                    cause,
                  });
            }
          };
          _a13 = symbol13;
          var TypeValidationError = _TypeValidationError;
          // src/errors/unsupported-functionality-error.ts
          var name13 = 'AI_UnsupportedFunctionalityError';
          var marker14 = `vercel.ai.error.${name13}`;
          var symbol14 = Symbol.for(marker14);
          var _a14;
          var UnsupportedFunctionalityError = class extends AISDKError {
            constructor({ functionality, message = `'${functionality}' functionality not supported.` }) {
              super({
                name: name13,
                message,
              });
              this[_a14] = true;
              this.functionality = functionality;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker14);
            }
          };
          _a14 = symbol14;
          // src/json-value/is-json.ts
          function isJSONValue(value) {
            if (
              value === null ||
              typeof value === 'string' ||
              typeof value === 'number' ||
              typeof value === 'boolean'
            ) {
              return true;
            }
            if (Array.isArray(value)) {
              return value.every(isJSONValue);
            }
            if (typeof value === 'object') {
              return Object.entries(value).every(([key, val]) => typeof key === 'string' && isJSONValue(val));
            }
            return false;
          }
          function isJSONArray(value) {
            return Array.isArray(value) && value.every(isJSONValue);
          }
          function isJSONObject(value) {
            return (
              value != null &&
              typeof value === 'object' &&
              Object.entries(value).every(([key, val]) => typeof key === 'string' && isJSONValue(val))
            );
          }
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.9/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/errors/ai-sdk-error.ts
          __turbopack_context__.s({
            AISDKError: () => AISDKError,
            APICallError: () => APICallError,
            EmptyResponseBodyError: () => EmptyResponseBodyError,
            InvalidArgumentError: () => InvalidArgumentError,
            InvalidPromptError: () => InvalidPromptError,
            InvalidResponseDataError: () => InvalidResponseDataError,
            JSONParseError: () => JSONParseError,
            LoadAPIKeyError: () => LoadAPIKeyError,
            LoadSettingError: () => LoadSettingError,
            NoContentGeneratedError: () => NoContentGeneratedError,
            NoSuchModelError: () => NoSuchModelError,
            TooManyEmbeddingValuesForCallError: () => TooManyEmbeddingValuesForCallError,
            TypeValidationError: () => TypeValidationError,
            UnsupportedFunctionalityError: () => UnsupportedFunctionalityError,
            getErrorMessage: () => getErrorMessage,
            isJSONArray: () => isJSONArray,
            isJSONObject: () => isJSONObject,
            isJSONValue: () => isJSONValue,
          });
          var marker = 'vercel.ai.error';
          var symbol = Symbol.for(marker);
          var _a;
          var _AISDKError = class _AISDKError extends Error {
            /**
             * Creates an AI SDK Error.
             *
             * @param {Object} params - The parameters for creating the error.
             * @param {string} params.name - The name of the error.
             * @param {string} params.message - The error message.
             * @param {unknown} [params.cause] - The underlying cause of the error.
             */ constructor({ name: name14, message, cause }) {
              super(message);
              this[_a] = true;
              this.name = name14;
              this.cause = cause;
            }
            /**
             * Checks if the given error is an AI SDK Error.
             * @param {unknown} error - The error to check.
             * @returns {boolean} True if the error is an AI SDK Error, false otherwise.
             */ static isInstance(error) {
              return _AISDKError.hasMarker(error, marker);
            }
            static hasMarker(error, marker15) {
              const markerSymbol = Symbol.for(marker15);
              return (
                error != null &&
                typeof error === 'object' &&
                markerSymbol in error &&
                typeof error[markerSymbol] === 'boolean' &&
                error[markerSymbol] === true
              );
            }
          };
          _a = symbol;
          var AISDKError = _AISDKError;
          // src/errors/api-call-error.ts
          var name = 'AI_APICallError';
          var marker2 = `vercel.ai.error.${name}`;
          var symbol2 = Symbol.for(marker2);
          var _a2;
          var APICallError = class extends AISDKError {
            constructor({
              message,
              url,
              requestBodyValues,
              statusCode,
              responseHeaders,
              responseBody,
              cause,
              isRetryable = statusCode != null &&
                (statusCode === 408 || // request timeout
                  statusCode === 409 || // conflict
                  statusCode === 429 || // too many requests
                  statusCode >= 500), // server error
              data,
            }) {
              super({
                name,
                message,
                cause,
              });
              this[_a2] = true;
              this.url = url;
              this.requestBodyValues = requestBodyValues;
              this.statusCode = statusCode;
              this.responseHeaders = responseHeaders;
              this.responseBody = responseBody;
              this.isRetryable = isRetryable;
              this.data = data;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker2);
            }
          };
          _a2 = symbol2;
          // src/errors/empty-response-body-error.ts
          var name2 = 'AI_EmptyResponseBodyError';
          var marker3 = `vercel.ai.error.${name2}`;
          var symbol3 = Symbol.for(marker3);
          var _a3;
          var EmptyResponseBodyError = class extends AISDKError {
            // used in isInstance
            constructor({ message = 'Empty response body' } = {}) {
              super({
                name: name2,
                message,
              });
              this[_a3] = true;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker3);
            }
          };
          _a3 = symbol3;
          // src/errors/get-error-message.ts
          function getErrorMessage(error) {
            if (error == null) {
              return 'unknown error';
            }
            if (typeof error === 'string') {
              return error;
            }
            if (error instanceof Error) {
              return error.message;
            }
            return JSON.stringify(error);
          }
          // src/errors/invalid-argument-error.ts
          var name3 = 'AI_InvalidArgumentError';
          var marker4 = `vercel.ai.error.${name3}`;
          var symbol4 = Symbol.for(marker4);
          var _a4;
          var InvalidArgumentError = class extends AISDKError {
            constructor({ message, cause, argument }) {
              super({
                name: name3,
                message,
                cause,
              });
              this[_a4] = true;
              this.argument = argument;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker4);
            }
          };
          _a4 = symbol4;
          // src/errors/invalid-prompt-error.ts
          var name4 = 'AI_InvalidPromptError';
          var marker5 = `vercel.ai.error.${name4}`;
          var symbol5 = Symbol.for(marker5);
          var _a5;
          var InvalidPromptError = class extends AISDKError {
            constructor({ prompt, message, cause }) {
              super({
                name: name4,
                message: `Invalid prompt: ${message}`,
                cause,
              });
              this[_a5] = true;
              this.prompt = prompt;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker5);
            }
          };
          _a5 = symbol5;
          // src/errors/invalid-response-data-error.ts
          var name5 = 'AI_InvalidResponseDataError';
          var marker6 = `vercel.ai.error.${name5}`;
          var symbol6 = Symbol.for(marker6);
          var _a6;
          var InvalidResponseDataError = class extends AISDKError {
            constructor({ data, message = `Invalid response data: ${JSON.stringify(data)}.` }) {
              super({
                name: name5,
                message,
              });
              this[_a6] = true;
              this.data = data;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker6);
            }
          };
          _a6 = symbol6;
          // src/errors/json-parse-error.ts
          var name6 = 'AI_JSONParseError';
          var marker7 = `vercel.ai.error.${name6}`;
          var symbol7 = Symbol.for(marker7);
          var _a7;
          var JSONParseError = class extends AISDKError {
            constructor({ text, cause }) {
              super({
                name: name6,
                message: `JSON parsing failed: Text: ${text}.
Error message: ${getErrorMessage(cause)}`,
                cause,
              });
              this[_a7] = true;
              this.text = text;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker7);
            }
          };
          _a7 = symbol7;
          // src/errors/load-api-key-error.ts
          var name7 = 'AI_LoadAPIKeyError';
          var marker8 = `vercel.ai.error.${name7}`;
          var symbol8 = Symbol.for(marker8);
          var _a8;
          var LoadAPIKeyError = class extends AISDKError {
            // used in isInstance
            constructor({ message }) {
              super({
                name: name7,
                message,
              });
              this[_a8] = true;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker8);
            }
          };
          _a8 = symbol8;
          // src/errors/load-setting-error.ts
          var name8 = 'AI_LoadSettingError';
          var marker9 = `vercel.ai.error.${name8}`;
          var symbol9 = Symbol.for(marker9);
          var _a9;
          var LoadSettingError = class extends AISDKError {
            // used in isInstance
            constructor({ message }) {
              super({
                name: name8,
                message,
              });
              this[_a9] = true;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker9);
            }
          };
          _a9 = symbol9;
          // src/errors/no-content-generated-error.ts
          var name9 = 'AI_NoContentGeneratedError';
          var marker10 = `vercel.ai.error.${name9}`;
          var symbol10 = Symbol.for(marker10);
          var _a10;
          var NoContentGeneratedError = class extends AISDKError {
            // used in isInstance
            constructor({ message = 'No content generated.' } = {}) {
              super({
                name: name9,
                message,
              });
              this[_a10] = true;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker10);
            }
          };
          _a10 = symbol10;
          // src/errors/no-such-model-error.ts
          var name10 = 'AI_NoSuchModelError';
          var marker11 = `vercel.ai.error.${name10}`;
          var symbol11 = Symbol.for(marker11);
          var _a11;
          var NoSuchModelError = class extends AISDKError {
            constructor({ errorName = name10, modelId, modelType, message = `No such ${modelType}: ${modelId}` }) {
              super({
                name: errorName,
                message,
              });
              this[_a11] = true;
              this.modelId = modelId;
              this.modelType = modelType;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker11);
            }
          };
          _a11 = symbol11;
          // src/errors/too-many-embedding-values-for-call-error.ts
          var name11 = 'AI_TooManyEmbeddingValuesForCallError';
          var marker12 = `vercel.ai.error.${name11}`;
          var symbol12 = Symbol.for(marker12);
          var _a12;
          var TooManyEmbeddingValuesForCallError = class extends AISDKError {
            constructor(options) {
              super({
                name: name11,
                message: `Too many values for a single embedding call. The ${options.provider} model "${options.modelId}" can only embed up to ${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,
              });
              this[_a12] = true;
              this.provider = options.provider;
              this.modelId = options.modelId;
              this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;
              this.values = options.values;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker12);
            }
          };
          _a12 = symbol12;
          // src/errors/type-validation-error.ts
          var name12 = 'AI_TypeValidationError';
          var marker13 = `vercel.ai.error.${name12}`;
          var symbol13 = Symbol.for(marker13);
          var _a13;
          var _TypeValidationError = class _TypeValidationError extends AISDKError {
            constructor({ value, cause }) {
              super({
                name: name12,
                message: `Type validation failed: Value: ${JSON.stringify(value)}.
Error message: ${getErrorMessage(cause)}`,
                cause,
              });
              this[_a13] = true;
              this.value = value;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker13);
            }
            /**
             * Wraps an error into a TypeValidationError.
             * If the cause is already a TypeValidationError with the same value, it returns the cause.
             * Otherwise, it creates a new TypeValidationError.
             *
             * @param {Object} params - The parameters for wrapping the error.
             * @param {unknown} params.value - The value that failed validation.
             * @param {unknown} params.cause - The original error or cause of the validation failure.
             * @returns {TypeValidationError} A TypeValidationError instance.
             */ static wrap({ value, cause }) {
              return _TypeValidationError.isInstance(cause) && cause.value === value
                ? cause
                : new _TypeValidationError({
                    value,
                    cause,
                  });
            }
          };
          _a13 = symbol13;
          var TypeValidationError = _TypeValidationError;
          // src/errors/unsupported-functionality-error.ts
          var name13 = 'AI_UnsupportedFunctionalityError';
          var marker14 = `vercel.ai.error.${name13}`;
          var symbol14 = Symbol.for(marker14);
          var _a14;
          var UnsupportedFunctionalityError = class extends AISDKError {
            constructor({ functionality, message = `'${functionality}' functionality not supported.` }) {
              super({
                name: name13,
                message,
              });
              this[_a14] = true;
              this.functionality = functionality;
            }
            static isInstance(error) {
              return AISDKError.hasMarker(error, marker14);
            }
          };
          _a14 = symbol14;
          // src/json-value/is-json.ts
          function isJSONValue(value) {
            if (
              value === null ||
              typeof value === 'string' ||
              typeof value === 'number' ||
              typeof value === 'boolean'
            ) {
              return true;
            }
            if (Array.isArray(value)) {
              return value.every(isJSONValue);
            }
            if (typeof value === 'object') {
              return Object.entries(value).every(([key, val]) => typeof key === 'string' && isJSONValue(val));
            }
            return false;
          }
          function isJSONArray(value) {
            return Array.isArray(value) && value.every(isJSONValue);
          }
          function isJSONObject(value) {
            return (
              value != null &&
              typeof value === 'object' &&
              Object.entries(value).every(([key, val]) => typeof key === 'string' && isJSONValue(val))
            );
          }
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/nanoid@3.3.9/node_modules/nanoid/non-secure/index.js [app-client] (ecmascript)': (
      __turbopack_context__,
    ) => {
      'use strict';

      var { g: global, __dirname } = __turbopack_context__;
      {
        // This alphabet uses `A-Za-z0-9_-` symbols.
        // The order of characters is optimized for better gzip and brotli compression.
        // References to the same file (works both for gzip and brotli):
        // `'use`, `andom`, and `rict'`
        // References to the brotli default dictionary:
        // `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`
        __turbopack_context__.s({
          customAlphabet: () => customAlphabet,
          nanoid: () => nanoid,
        });
        let urlAlphabet = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';
        let customAlphabet = (alphabet, defaultSize = 21) => {
          return (size = defaultSize) => {
            let id = '';
            // A compact alternative for `for (var i = 0; i < step; i++)`.
            let i = size | 0;
            while (i--) {
              // `| 0` is more compact and faster than `Math.floor()`.
              id += alphabet[(Math.random() * alphabet.length) | 0];
            }
            return id;
          };
        };
        let nanoid = (size = 21) => {
          let id = '';
          // A compact alternative for `for (var i = 0; i < step; i++)`.
          let i = size | 0;
          while (i--) {
            // `| 0` is more compact and faster than `Math.floor()`.
            id += urlAlphabet[(Math.random() * 64) | 0];
          }
          return id;
        };
      }
    },
    '[project]/node_modules/.pnpm/secure-json-parse@2.7.0/node_modules/secure-json-parse/index.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)',
            );
          ('use strict');
          const hasBuffer =
            typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'Buffer'
            ] !== 'undefined';
          const suspectProtoRx =
            /"(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])"\s*:/;
          const suspectConstructorRx =
            /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
          function _parse(text, reviver, options) {
            // Normalize arguments
            if (options == null) {
              if (reviver !== null && typeof reviver === 'object') {
                options = reviver;
                reviver = undefined;
              }
            }
            if (
              hasBuffer &&
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'Buffer'
              ].isBuffer(text)
            ) {
              text = text.toString();
            }
            // BOM checker
            if (text && text.charCodeAt(0) === 0xfeff) {
              text = text.slice(1);
            }
            // Parse normally, allowing exceptions
            const obj = JSON.parse(text, reviver);
            // Ignore null and non-objects
            if (obj === null || typeof obj !== 'object') {
              return obj;
            }
            const protoAction = (options && options.protoAction) || 'error';
            const constructorAction = (options && options.constructorAction) || 'error';
            // options: 'error' (default) / 'remove' / 'ignore'
            if (protoAction === 'ignore' && constructorAction === 'ignore') {
              return obj;
            }
            if (protoAction !== 'ignore' && constructorAction !== 'ignore') {
              if (suspectProtoRx.test(text) === false && suspectConstructorRx.test(text) === false) {
                return obj;
              }
            } else if (protoAction !== 'ignore' && constructorAction === 'ignore') {
              if (suspectProtoRx.test(text) === false) {
                return obj;
              }
            } else {
              if (suspectConstructorRx.test(text) === false) {
                return obj;
              }
            }
            // Scan result for proto keys
            return filter(obj, {
              protoAction,
              constructorAction,
              safe: options && options.safe,
            });
          }
          function filter(obj, { protoAction = 'error', constructorAction = 'error', safe } = {}) {
            let next = [obj];
            while (next.length) {
              const nodes = next;
              next = [];
              for (const node of nodes) {
                if (protoAction !== 'ignore' && Object.prototype.hasOwnProperty.call(node, '__proto__')) {
                  if (safe === true) {
                    return null;
                  } else if (protoAction === 'error') {
                    throw new SyntaxError('Object contains forbidden prototype property');
                  }
                  delete node.__proto__; // eslint-disable-line no-proto
                }
                if (
                  constructorAction !== 'ignore' &&
                  Object.prototype.hasOwnProperty.call(node, 'constructor') &&
                  Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')
                ) {
                  if (safe === true) {
                    return null;
                  } else if (constructorAction === 'error') {
                    throw new SyntaxError('Object contains forbidden prototype property');
                  }
                  delete node.constructor;
                }
                for (const key in node) {
                  const value = node[key];
                  if (value && typeof value === 'object') {
                    next.push(value);
                  }
                }
              }
            }
            return obj;
          }
          function parse(text, reviver, options) {
            const stackTraceLimit = Error.stackTraceLimit;
            Error.stackTraceLimit = 0;
            try {
              return _parse(text, reviver, options);
            } finally {
              Error.stackTraceLimit = stackTraceLimit;
            }
          }
          function safeParse(text, reviver) {
            const stackTraceLimit = Error.stackTraceLimit;
            Error.stackTraceLimit = 0;
            try {
              return _parse(text, reviver, {
                safe: true,
              });
            } catch (_e) {
              return null;
            } finally {
              Error.stackTraceLimit = stackTraceLimit;
            }
          }
          module.exports = parse;
          module.exports.default = parse;
          module.exports.parse = parse;
          module.exports.safeParse = safeParse;
          module.exports.scan = filter;
        }
      },
    '[project]/node_modules/.pnpm/eventsource-parser@3.0.0/node_modules/eventsource-parser/dist/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            ParseError: () => ParseError,
            createParser: () => createParser,
          });
          var __defProp = Object.defineProperty,
            __defNormalProp = (obj, key, value) =>
              key in obj
                ? __defProp(obj, key, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value,
                  })
                : (obj[key] = value),
            __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != 'symbol' ? key + '' : key, value);
          class ParseError extends Error {
            constructor(message, options) {
              super(message),
                __publicField(this, 'type'),
                __publicField(this, 'field'),
                __publicField(this, 'value'),
                __publicField(this, 'line'),
                (this.name = 'ParseError'),
                (this.type = options.type),
                (this.field = options.field),
                (this.value = options.value),
                (this.line = options.line);
            }
          }
          function noop(_arg) {}
          function createParser(callbacks) {
            const { onEvent = noop, onError = noop, onRetry = noop, onComment } = callbacks;
            let incompleteLine = '',
              isFirstChunk = !0,
              id,
              data = '',
              eventType = '';
            function feed(newChunk) {
              const chunk = isFirstChunk ? newChunk.replace(/^\xEF\xBB\xBF/, '') : newChunk,
                [complete, incomplete] = splitLines(`${incompleteLine}${chunk}`);
              for (const line of complete) parseLine(line);
              (incompleteLine = incomplete), (isFirstChunk = !1);
            }
            function parseLine(line) {
              if (line === '') {
                dispatchEvent();
                return;
              }
              if (line.startsWith(':')) {
                onComment && onComment(line.slice(line.startsWith(': ') ? 2 : 1));
                return;
              }
              const fieldSeparatorIndex = line.indexOf(':');
              if (fieldSeparatorIndex !== -1) {
                const field = line.slice(0, fieldSeparatorIndex),
                  offset = line[fieldSeparatorIndex + 1] === ' ' ? 2 : 1,
                  value = line.slice(fieldSeparatorIndex + offset);
                processField(field, value, line);
                return;
              }
              processField(line, '', line);
            }
            function processField(field, value, line) {
              switch (field) {
                case 'event':
                  eventType = value;
                  break;
                case 'data':
                  data = `${data}${value}
`;
                  break;
                case 'id':
                  id = value.includes('\0') ? void 0 : value;
                  break;
                case 'retry':
                  /^\d+$/.test(value)
                    ? onRetry(parseInt(value, 10))
                    : onError(
                        new ParseError(`Invalid \`retry\` value: "${value}"`, {
                          type: 'invalid-retry',
                          value,
                          line,
                        }),
                      );
                  break;
                default:
                  onError(
                    new ParseError(`Unknown field "${field.length > 20 ? `${field.slice(0, 20)}\u2026` : field}"`, {
                      type: 'unknown-field',
                      field,
                      value,
                      line,
                    }),
                  );
                  break;
              }
            }
            function dispatchEvent() {
              data.length > 0 &&
                onEvent({
                  id,
                  event: eventType || void 0,
                  // If the data buffer's last character is a U+000A LINE FEED (LF) character,
                  // then remove the last character from the data buffer.
                  data: data.endsWith(`
`)
                    ? data.slice(0, -1)
                    : data,
                }),
                (id = void 0),
                (data = ''),
                (eventType = '');
            }
            function reset(options = {}) {
              incompleteLine && options.consume && parseLine(incompleteLine),
                (id = void 0),
                (data = ''),
                (eventType = ''),
                (incompleteLine = '');
            }
            return {
              feed,
              reset,
            };
          }
          function splitLines(chunk) {
            const lines = [];
            let incompleteLine = '';
            const totalLength = chunk.length;
            for (let i = 0; i < totalLength; i++) {
              const char = chunk[i];
              char === '\r' &&
              chunk[i + 1] ===
                `
`
                ? (lines.push(incompleteLine), (incompleteLine = ''), i++)
                : char === '\r' ||
                    char ===
                      `
`
                  ? (lines.push(incompleteLine), (incompleteLine = ''))
                  : (incompleteLine += char);
            }
            return [lines, incompleteLine];
          }
          //# sourceMappingURL=index.js.map
        }
      },
    '[project]/node_modules/.pnpm/eventsource-parser@3.0.0/node_modules/eventsource-parser/dist/stream.js [app-client] (ecmascript) <locals>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            EventSourceParserStream: () => EventSourceParserStream,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventsource$2d$parser$40$3$2e$0$2e$0$2f$node_modules$2f$eventsource$2d$parser$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/eventsource-parser@3.0.0/node_modules/eventsource-parser/dist/index.js [app-client] (ecmascript)',
            );
          class EventSourceParserStream extends TransformStream {
            constructor({ onError, onRetry, onComment } = {}) {
              let parser;
              super({
                start(controller) {
                  parser = (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventsource$2d$parser$40$3$2e$0$2e$0$2f$node_modules$2f$eventsource$2d$parser$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'createParser'
                  ])({
                    onEvent: (event) => {
                      controller.enqueue(event);
                    },
                    onError(error) {
                      onError === 'terminate'
                        ? controller.error(error)
                        : typeof onError == 'function' && onError(error);
                    },
                    onRetry,
                    onComment,
                  });
                },
                transform(chunk) {
                  parser.feed(chunk);
                },
              });
            }
          }
          //# sourceMappingURL=stream.js.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.13_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/combine-headers.ts
          __turbopack_context__.s({
            asValidator: () => asValidator,
            combineHeaders: () => combineHeaders,
            convertAsyncIteratorToReadableStream: () => convertAsyncIteratorToReadableStream,
            convertBase64ToUint8Array: () => convertBase64ToUint8Array,
            convertUint8ArrayToBase64: () => convertUint8ArrayToBase64,
            createBinaryResponseHandler: () => createBinaryResponseHandler,
            createEventSourceResponseHandler: () => createEventSourceResponseHandler,
            createIdGenerator: () => createIdGenerator,
            createJsonErrorResponseHandler: () => createJsonErrorResponseHandler,
            createJsonResponseHandler: () => createJsonResponseHandler,
            createJsonStreamResponseHandler: () => createJsonStreamResponseHandler,
            createStatusCodeErrorResponseHandler: () => createStatusCodeErrorResponseHandler,
            delay: () => delay,
            extractResponseHeaders: () => extractResponseHeaders,
            generateId: () => generateId,
            getErrorMessage: () => getErrorMessage,
            getFromApi: () => getFromApi,
            isAbortError: () => isAbortError,
            isParsableJson: () => isParsableJson,
            isValidator: () => isValidator,
            loadApiKey: () => loadApiKey,
            loadOptionalSetting: () => loadOptionalSetting,
            loadSetting: () => loadSetting,
            parseJSON: () => parseJSON,
            postJsonToApi: () => postJsonToApi,
            postToApi: () => postToApi,
            removeUndefinedEntries: () => removeUndefinedEntries,
            resolve: () => resolve,
            safeParseJSON: () => safeParseJSON,
            safeValidateTypes: () => safeValidateTypes,
            validateTypes: () => validateTypes,
            validator: () => validator,
            validatorSymbol: () => validatorSymbol,
            withoutTrailingSlash: () => withoutTrailingSlash,
            zodValidator: () => zodValidator,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)',
            );
          // src/generate-id.ts
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanoid$40$3$2e$3$2e$9$2f$node_modules$2f$nanoid$2f$non$2d$secure$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/nanoid@3.3.9/node_modules/nanoid/non-secure/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$secure$2d$json$2d$parse$40$2$2e$7$2e$0$2f$node_modules$2f$secure$2d$json$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/secure-json-parse@2.7.0/node_modules/secure-json-parse/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventsource$2d$parser$40$3$2e$0$2e$0$2f$node_modules$2f$eventsource$2d$parser$2f$dist$2f$stream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/eventsource-parser@3.0.0/node_modules/eventsource-parser/dist/stream.js [app-client] (ecmascript) <locals>',
            );
          function combineHeaders(...headers) {
            return headers.reduce(
              (combinedHeaders, currentHeaders) => ({
                ...combinedHeaders,
                ...(currentHeaders != null ? currentHeaders : {}),
              }),
              {},
            );
          }
          // src/convert-async-iterator-to-readable-stream.ts
          function convertAsyncIteratorToReadableStream(iterator) {
            return new ReadableStream({
              /**
               * Called when the consumer wants to pull more data from the stream.
               *
               * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.
               * @returns {Promise<void>}
               */ async pull(controller) {
                try {
                  const { value, done } = await iterator.next();
                  if (done) {
                    controller.close();
                  } else {
                    controller.enqueue(value);
                  }
                } catch (error) {
                  controller.error(error);
                }
              },
              /**
               * Called when the consumer cancels the stream.
               */ cancel() {},
            });
          }
          // src/delay.ts
          async function delay(delayInMs) {
            return delayInMs == null ? Promise.resolve() : new Promise((resolve2) => setTimeout(resolve2, delayInMs));
          }
          // src/extract-response-headers.ts
          function extractResponseHeaders(response) {
            const headers = {};
            response.headers.forEach((value, key) => {
              headers[key] = value;
            });
            return headers;
          }
          var createIdGenerator = ({
            prefix,
            size: defaultSize = 16,
            alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',
            separator = '-',
          } = {}) => {
            const generator = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanoid$40$3$2e$3$2e$9$2f$node_modules$2f$nanoid$2f$non$2d$secure$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'customAlphabet'
            ])(alphabet, defaultSize);
            if (prefix == null) {
              return generator;
            }
            if (alphabet.includes(separator)) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'InvalidArgumentError'
              ]({
                argument: 'separator',
                message: `The separator "${separator}" must not be part of the alphabet "${alphabet}".`,
              });
            }
            return (size) => `${prefix}${separator}${generator(size)}`;
          };
          var generateId = createIdGenerator();
          // src/get-error-message.ts
          function getErrorMessage(error) {
            if (error == null) {
              return 'unknown error';
            }
            if (typeof error === 'string') {
              return error;
            }
            if (error instanceof Error) {
              return error.message;
            }
            return JSON.stringify(error);
          }
          // src/remove-undefined-entries.ts
          function removeUndefinedEntries(record) {
            return Object.fromEntries(Object.entries(record).filter(([_key, value]) => value != null));
          }
          // src/is-abort-error.ts
          function isAbortError(error) {
            return error instanceof Error && (error.name === 'AbortError' || error.name === 'TimeoutError');
          }
          // src/get-from-api.ts
          var getOriginalFetch = () => globalThis.fetch;
          var getFromApi = async ({
            url,
            headers = {},
            successfulResponseHandler,
            failedResponseHandler,
            abortSignal,
            fetch = getOriginalFetch(),
          }) => {
            try {
              const response = await fetch(url, {
                method: 'GET',
                headers: removeUndefinedEntries(headers),
                signal: abortSignal,
              });
              const responseHeaders = extractResponseHeaders(response);
              if (!response.ok) {
                let errorInformation;
                try {
                  errorInformation = await failedResponseHandler({
                    response,
                    url,
                    requestBodyValues: {},
                  });
                } catch (error) {
                  if (
                    isAbortError(error) ||
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ].isInstance(error)
                  ) {
                    throw error;
                  }
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: 'Failed to process error response',
                    cause: error,
                    statusCode: response.status,
                    url,
                    responseHeaders,
                    requestBodyValues: {},
                  });
                }
                throw errorInformation.value;
              }
              try {
                return await successfulResponseHandler({
                  response,
                  url,
                  requestBodyValues: {},
                });
              } catch (error) {
                if (error instanceof Error) {
                  if (
                    isAbortError(error) ||
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ].isInstance(error)
                  ) {
                    throw error;
                  }
                }
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Failed to process successful response',
                  cause: error,
                  statusCode: response.status,
                  url,
                  responseHeaders,
                  requestBodyValues: {},
                });
              }
            } catch (error) {
              if (isAbortError(error)) {
                throw error;
              }
              if (error instanceof TypeError && error.message === 'fetch failed') {
                const cause = error.cause;
                if (cause != null) {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: `Cannot connect to API: ${cause.message}`,
                    cause,
                    url,
                    isRetryable: true,
                    requestBodyValues: {},
                  });
                }
              }
              throw error;
            }
          };
          function loadApiKey({ apiKey, environmentVariableName, apiKeyParameterName = 'apiKey', description }) {
            if (typeof apiKey === 'string') {
              return apiKey;
            }
            if (apiKey != null) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadAPIKeyError'
              ]({
                message: `${description} API key must be a string.`,
              });
            }
            if (
              typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ] === 'undefined'
            ) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadAPIKeyError'
              ]({
                message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`,
              });
            }
            apiKey =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].env[environmentVariableName];
            if (apiKey == null) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadAPIKeyError'
              ]({
                message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`,
              });
            }
            if (typeof apiKey !== 'string') {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadAPIKeyError'
              ]({
                message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,
              });
            }
            return apiKey;
          }
          // src/load-optional-setting.ts
          function loadOptionalSetting({ settingValue, environmentVariableName }) {
            if (typeof settingValue === 'string') {
              return settingValue;
            }
            if (
              settingValue != null ||
              typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ] === 'undefined'
            ) {
              return void 0;
            }
            settingValue =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].env[environmentVariableName];
            if (settingValue == null || typeof settingValue !== 'string') {
              return void 0;
            }
            return settingValue;
          }
          function loadSetting({ settingValue, environmentVariableName, settingName, description }) {
            if (typeof settingValue === 'string') {
              return settingValue;
            }
            if (settingValue != null) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadSettingError'
              ]({
                message: `${description} setting must be a string.`,
              });
            }
            if (
              typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ] === 'undefined'
            ) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadSettingError'
              ]({
                message: `${description} setting is missing. Pass it using the '${settingName}' parameter. Environment variables is not supported in this environment.`,
              });
            }
            settingValue =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].env[environmentVariableName];
            if (settingValue == null) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadSettingError'
              ]({
                message: `${description} setting is missing. Pass it using the '${settingName}' parameter or the ${environmentVariableName} environment variable.`,
              });
            }
            if (typeof settingValue !== 'string') {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadSettingError'
              ]({
                message: `${description} setting must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,
              });
            }
            return settingValue;
          }
          // src/validator.ts
          var validatorSymbol = Symbol.for('vercel.ai.validator');
          function validator(validate) {
            return {
              [validatorSymbol]: true,
              validate,
            };
          }
          function isValidator(value) {
            return (
              typeof value === 'object' &&
              value !== null &&
              validatorSymbol in value &&
              value[validatorSymbol] === true &&
              'validate' in value
            );
          }
          function asValidator(value) {
            return isValidator(value) ? value : zodValidator(value);
          }
          function zodValidator(zodSchema) {
            return validator((value) => {
              const result = zodSchema.safeParse(value);
              return result.success
                ? {
                    success: true,
                    value: result.data,
                  }
                : {
                    success: false,
                    error: result.error,
                  };
            });
          }
          // src/validate-types.ts
          function validateTypes({ value, schema: inputSchema }) {
            const result = safeValidateTypes({
              value,
              schema: inputSchema,
            });
            if (!result.success) {
              throw __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'TypeValidationError'
              ].wrap({
                value,
                cause: result.error,
              });
            }
            return result.value;
          }
          function safeValidateTypes({ value, schema }) {
            const validator2 = asValidator(schema);
            try {
              if (validator2.validate == null) {
                return {
                  success: true,
                  value,
                };
              }
              const result = validator2.validate(value);
              if (result.success) {
                return result;
              }
              return {
                success: false,
                error:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'TypeValidationError'
                  ].wrap({
                    value,
                    cause: result.error,
                  }),
              };
            } catch (error) {
              return {
                success: false,
                error:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'TypeValidationError'
                  ].wrap({
                    value,
                    cause: error,
                  }),
              };
            }
          }
          // src/parse-json.ts
          function parseJSON({ text, schema }) {
            try {
              const value =
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$secure$2d$json$2d$parse$40$2$2e$7$2e$0$2f$node_modules$2f$secure$2d$json$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'default'
                ].parse(text);
              if (schema == null) {
                return value;
              }
              return validateTypes({
                value,
                schema,
              });
            } catch (error) {
              if (
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'JSONParseError'
                ].isInstance(error) ||
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'TypeValidationError'
                ].isInstance(error)
              ) {
                throw error;
              }
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'JSONParseError'
              ]({
                text,
                cause: error,
              });
            }
          }
          function safeParseJSON({ text, schema }) {
            try {
              const value =
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$secure$2d$json$2d$parse$40$2$2e$7$2e$0$2f$node_modules$2f$secure$2d$json$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'default'
                ].parse(text);
              if (schema == null) {
                return {
                  success: true,
                  value,
                  rawValue: value,
                };
              }
              const validationResult = safeValidateTypes({
                value,
                schema,
              });
              return validationResult.success
                ? {
                    ...validationResult,
                    rawValue: value,
                  }
                : validationResult;
            } catch (error) {
              return {
                success: false,
                error:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'JSONParseError'
                  ].isInstance(error)
                    ? error
                    : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'JSONParseError'
                      ]({
                        text,
                        cause: error,
                      }),
              };
            }
          }
          function isParsableJson(input) {
            try {
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$secure$2d$json$2d$parse$40$2$2e$7$2e$0$2f$node_modules$2f$secure$2d$json$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].parse(input);
              return true;
            } catch (e) {
              return false;
            }
          }
          var getOriginalFetch2 = () => globalThis.fetch;
          var postJsonToApi = async ({
            url,
            headers,
            body,
            failedResponseHandler,
            successfulResponseHandler,
            abortSignal,
            fetch,
          }) =>
            postToApi({
              url,
              headers: {
                'Content-Type': 'application/json',
                ...headers,
              },
              body: {
                content: JSON.stringify(body),
                values: body,
              },
              failedResponseHandler,
              successfulResponseHandler,
              abortSignal,
              fetch,
            });
          var postToApi = async ({
            url,
            headers = {},
            body,
            successfulResponseHandler,
            failedResponseHandler,
            abortSignal,
            fetch = getOriginalFetch2(),
          }) => {
            try {
              const response = await fetch(url, {
                method: 'POST',
                headers: removeUndefinedEntries(headers),
                body: body.content,
                signal: abortSignal,
              });
              const responseHeaders = extractResponseHeaders(response);
              if (!response.ok) {
                let errorInformation;
                try {
                  errorInformation = await failedResponseHandler({
                    response,
                    url,
                    requestBodyValues: body.values,
                  });
                } catch (error) {
                  if (
                    isAbortError(error) ||
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ].isInstance(error)
                  ) {
                    throw error;
                  }
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: 'Failed to process error response',
                    cause: error,
                    statusCode: response.status,
                    url,
                    responseHeaders,
                    requestBodyValues: body.values,
                  });
                }
                throw errorInformation.value;
              }
              try {
                return await successfulResponseHandler({
                  response,
                  url,
                  requestBodyValues: body.values,
                });
              } catch (error) {
                if (error instanceof Error) {
                  if (
                    isAbortError(error) ||
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ].isInstance(error)
                  ) {
                    throw error;
                  }
                }
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Failed to process successful response',
                  cause: error,
                  statusCode: response.status,
                  url,
                  responseHeaders,
                  requestBodyValues: body.values,
                });
              }
            } catch (error) {
              if (isAbortError(error)) {
                throw error;
              }
              if (error instanceof TypeError && error.message === 'fetch failed') {
                const cause = error.cause;
                if (cause != null) {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: `Cannot connect to API: ${cause.message}`,
                    cause,
                    url,
                    requestBodyValues: body.values,
                    isRetryable: true,
                  });
                }
              }
              throw error;
            }
          };
          // src/resolve.ts
          async function resolve(value) {
            if (typeof value === 'function') {
              value = value();
            }
            return Promise.resolve(value);
          }
          var createJsonErrorResponseHandler =
            ({ errorSchema, errorToMessage, isRetryable }) =>
            async ({ response, url, requestBodyValues }) => {
              const responseBody = await response.text();
              const responseHeaders = extractResponseHeaders(response);
              if (responseBody.trim() === '') {
                return {
                  responseHeaders,
                  value:
                    new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ]({
                      message: response.statusText,
                      url,
                      requestBodyValues,
                      statusCode: response.status,
                      responseHeaders,
                      responseBody,
                      isRetryable: isRetryable == null ? void 0 : isRetryable(response),
                    }),
                };
              }
              try {
                const parsedError = parseJSON({
                  text: responseBody,
                  schema: errorSchema,
                });
                return {
                  responseHeaders,
                  value:
                    new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ]({
                      message: errorToMessage(parsedError),
                      url,
                      requestBodyValues,
                      statusCode: response.status,
                      responseHeaders,
                      responseBody,
                      data: parsedError,
                      isRetryable: isRetryable == null ? void 0 : isRetryable(response, parsedError),
                    }),
                };
              } catch (parseError) {
                return {
                  responseHeaders,
                  value:
                    new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ]({
                      message: response.statusText,
                      url,
                      requestBodyValues,
                      statusCode: response.status,
                      responseHeaders,
                      responseBody,
                      isRetryable: isRetryable == null ? void 0 : isRetryable(response),
                    }),
                };
              }
            };
          var createEventSourceResponseHandler =
            (chunkSchema) =>
            async ({ response }) => {
              const responseHeaders = extractResponseHeaders(response);
              if (response.body == null) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'EmptyResponseBodyError'
                ]({});
              }
              return {
                responseHeaders,
                value: response.body
                  .pipeThrough(new TextDecoderStream())
                  .pipeThrough(
                    new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventsource$2d$parser$40$3$2e$0$2e$0$2f$node_modules$2f$eventsource$2d$parser$2f$dist$2f$stream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__[
                      'EventSourceParserStream'
                    ](),
                  )
                  .pipeThrough(
                    new TransformStream({
                      transform({ data }, controller) {
                        if (data === '[DONE]') {
                          return;
                        }
                        controller.enqueue(
                          safeParseJSON({
                            text: data,
                            schema: chunkSchema,
                          }),
                        );
                      },
                    }),
                  ),
              };
            };
          var createJsonStreamResponseHandler =
            (chunkSchema) =>
            async ({ response }) => {
              const responseHeaders = extractResponseHeaders(response);
              if (response.body == null) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'EmptyResponseBodyError'
                ]({});
              }
              let buffer = '';
              return {
                responseHeaders,
                value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(
                  new TransformStream({
                    transform(chunkText, controller) {
                      if (chunkText.endsWith('\n')) {
                        controller.enqueue(
                          safeParseJSON({
                            text: buffer + chunkText,
                            schema: chunkSchema,
                          }),
                        );
                        buffer = '';
                      } else {
                        buffer += chunkText;
                      }
                    },
                  }),
                ),
              };
            };
          var createJsonResponseHandler =
            (responseSchema) =>
            async ({ response, url, requestBodyValues }) => {
              const responseBody = await response.text();
              const parsedResult = safeParseJSON({
                text: responseBody,
                schema: responseSchema,
              });
              const responseHeaders = extractResponseHeaders(response);
              if (!parsedResult.success) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Invalid JSON response',
                  cause: parsedResult.error,
                  statusCode: response.status,
                  responseHeaders,
                  responseBody,
                  url,
                  requestBodyValues,
                });
              }
              return {
                responseHeaders,
                value: parsedResult.value,
                rawValue: parsedResult.rawValue,
              };
            };
          var createBinaryResponseHandler =
            () =>
            async ({ response, url, requestBodyValues }) => {
              const responseHeaders = extractResponseHeaders(response);
              if (!response.body) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Response body is empty',
                  url,
                  requestBodyValues,
                  statusCode: response.status,
                  responseHeaders,
                  responseBody: void 0,
                });
              }
              try {
                const buffer = await response.arrayBuffer();
                return {
                  responseHeaders,
                  value: new Uint8Array(buffer),
                };
              } catch (error) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Failed to read response as array buffer',
                  url,
                  requestBodyValues,
                  statusCode: response.status,
                  responseHeaders,
                  responseBody: void 0,
                  cause: error,
                });
              }
            };
          var createStatusCodeErrorResponseHandler =
            () =>
            async ({ response, url, requestBodyValues }) => {
              const responseHeaders = extractResponseHeaders(response);
              const responseBody = await response.text();
              return {
                responseHeaders,
                value:
                  new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: response.statusText,
                    url,
                    requestBodyValues,
                    statusCode: response.status,
                    responseHeaders,
                    responseBody,
                  }),
              };
            };
          // src/uint8-utils.ts
          var { btoa, atob } = globalThis;
          function convertBase64ToUint8Array(base64String) {
            const base64Url = base64String.replace(/-/g, '+').replace(/_/g, '/');
            const latin1string = atob(base64Url);
            return Uint8Array.from(latin1string, (byte) => byte.codePointAt(0));
          }
          function convertUint8ArrayToBase64(array) {
            let latin1string = '';
            for (let i = 0; i < array.length; i++) {
              latin1string += String.fromCodePoint(array[i]);
            }
            return btoa(latin1string);
          }
          // src/without-trailing-slash.ts
          function withoutTrailingSlash(url) {
            return url == null ? void 0 : url.replace(/\/$/, '');
          }
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.10_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/combine-headers.ts
          __turbopack_context__.s({
            asValidator: () => asValidator,
            combineHeaders: () => combineHeaders,
            convertAsyncIteratorToReadableStream: () => convertAsyncIteratorToReadableStream,
            convertBase64ToUint8Array: () => convertBase64ToUint8Array,
            convertUint8ArrayToBase64: () => convertUint8ArrayToBase64,
            createBinaryResponseHandler: () => createBinaryResponseHandler,
            createEventSourceResponseHandler: () => createEventSourceResponseHandler,
            createIdGenerator: () => createIdGenerator,
            createJsonErrorResponseHandler: () => createJsonErrorResponseHandler,
            createJsonResponseHandler: () => createJsonResponseHandler,
            createJsonStreamResponseHandler: () => createJsonStreamResponseHandler,
            createStatusCodeErrorResponseHandler: () => createStatusCodeErrorResponseHandler,
            delay: () => delay,
            extractResponseHeaders: () => extractResponseHeaders,
            generateId: () => generateId,
            getErrorMessage: () => getErrorMessage,
            getFromApi: () => getFromApi,
            isAbortError: () => isAbortError,
            isParsableJson: () => isParsableJson,
            isValidator: () => isValidator,
            loadApiKey: () => loadApiKey,
            loadOptionalSetting: () => loadOptionalSetting,
            loadSetting: () => loadSetting,
            parseJSON: () => parseJSON,
            postJsonToApi: () => postJsonToApi,
            postToApi: () => postToApi,
            removeUndefinedEntries: () => removeUndefinedEntries,
            resolve: () => resolve,
            safeParseJSON: () => safeParseJSON,
            safeValidateTypes: () => safeValidateTypes,
            validateTypes: () => validateTypes,
            validator: () => validator,
            validatorSymbol: () => validatorSymbol,
            withoutTrailingSlash: () => withoutTrailingSlash,
            zodValidator: () => zodValidator,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)',
            );
          // src/generate-id.ts
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.9/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanoid$40$3$2e$3$2e$9$2f$node_modules$2f$nanoid$2f$non$2d$secure$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/nanoid@3.3.9/node_modules/nanoid/non-secure/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$secure$2d$json$2d$parse$40$2$2e$7$2e$0$2f$node_modules$2f$secure$2d$json$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/secure-json-parse@2.7.0/node_modules/secure-json-parse/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventsource$2d$parser$40$3$2e$0$2e$0$2f$node_modules$2f$eventsource$2d$parser$2f$dist$2f$stream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/eventsource-parser@3.0.0/node_modules/eventsource-parser/dist/stream.js [app-client] (ecmascript) <locals>',
            );
          function combineHeaders(...headers) {
            return headers.reduce(
              (combinedHeaders, currentHeaders) => ({
                ...combinedHeaders,
                ...(currentHeaders != null ? currentHeaders : {}),
              }),
              {},
            );
          }
          // src/convert-async-iterator-to-readable-stream.ts
          function convertAsyncIteratorToReadableStream(iterator) {
            return new ReadableStream({
              /**
               * Called when the consumer wants to pull more data from the stream.
               *
               * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.
               * @returns {Promise<void>}
               */ async pull(controller) {
                try {
                  const { value, done } = await iterator.next();
                  if (done) {
                    controller.close();
                  } else {
                    controller.enqueue(value);
                  }
                } catch (error) {
                  controller.error(error);
                }
              },
              /**
               * Called when the consumer cancels the stream.
               */ cancel() {},
            });
          }
          // src/delay.ts
          async function delay(delayInMs) {
            return delayInMs == null ? Promise.resolve() : new Promise((resolve2) => setTimeout(resolve2, delayInMs));
          }
          // src/extract-response-headers.ts
          function extractResponseHeaders(response) {
            const headers = {};
            response.headers.forEach((value, key) => {
              headers[key] = value;
            });
            return headers;
          }
          var createIdGenerator = ({
            prefix,
            size: defaultSize = 16,
            alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',
            separator = '-',
          } = {}) => {
            const generator = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$nanoid$40$3$2e$3$2e$9$2f$node_modules$2f$nanoid$2f$non$2d$secure$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'customAlphabet'
            ])(alphabet, defaultSize);
            if (prefix == null) {
              return generator;
            }
            if (alphabet.includes(separator)) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'InvalidArgumentError'
              ]({
                argument: 'separator',
                message: `The separator "${separator}" must not be part of the alphabet "${alphabet}".`,
              });
            }
            return (size) => `${prefix}${separator}${generator(size)}`;
          };
          var generateId = createIdGenerator();
          // src/get-error-message.ts
          function getErrorMessage(error) {
            if (error == null) {
              return 'unknown error';
            }
            if (typeof error === 'string') {
              return error;
            }
            if (error instanceof Error) {
              return error.message;
            }
            return JSON.stringify(error);
          }
          // src/remove-undefined-entries.ts
          function removeUndefinedEntries(record) {
            return Object.fromEntries(Object.entries(record).filter(([_key, value]) => value != null));
          }
          // src/is-abort-error.ts
          function isAbortError(error) {
            return error instanceof Error && (error.name === 'AbortError' || error.name === 'TimeoutError');
          }
          // src/get-from-api.ts
          var getOriginalFetch = () => globalThis.fetch;
          var getFromApi = async ({
            url,
            headers = {},
            successfulResponseHandler,
            failedResponseHandler,
            abortSignal,
            fetch = getOriginalFetch(),
          }) => {
            try {
              const response = await fetch(url, {
                method: 'GET',
                headers: removeUndefinedEntries(headers),
                signal: abortSignal,
              });
              const responseHeaders = extractResponseHeaders(response);
              if (!response.ok) {
                let errorInformation;
                try {
                  errorInformation = await failedResponseHandler({
                    response,
                    url,
                    requestBodyValues: {},
                  });
                } catch (error) {
                  if (
                    isAbortError(error) ||
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ].isInstance(error)
                  ) {
                    throw error;
                  }
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: 'Failed to process error response',
                    cause: error,
                    statusCode: response.status,
                    url,
                    responseHeaders,
                    requestBodyValues: {},
                  });
                }
                throw errorInformation.value;
              }
              try {
                return await successfulResponseHandler({
                  response,
                  url,
                  requestBodyValues: {},
                });
              } catch (error) {
                if (error instanceof Error) {
                  if (
                    isAbortError(error) ||
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ].isInstance(error)
                  ) {
                    throw error;
                  }
                }
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Failed to process successful response',
                  cause: error,
                  statusCode: response.status,
                  url,
                  responseHeaders,
                  requestBodyValues: {},
                });
              }
            } catch (error) {
              if (isAbortError(error)) {
                throw error;
              }
              if (error instanceof TypeError && error.message === 'fetch failed') {
                const cause = error.cause;
                if (cause != null) {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: `Cannot connect to API: ${cause.message}`,
                    cause,
                    url,
                    isRetryable: true,
                    requestBodyValues: {},
                  });
                }
              }
              throw error;
            }
          };
          function loadApiKey({ apiKey, environmentVariableName, apiKeyParameterName = 'apiKey', description }) {
            if (typeof apiKey === 'string') {
              return apiKey;
            }
            if (apiKey != null) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadAPIKeyError'
              ]({
                message: `${description} API key must be a string.`,
              });
            }
            if (
              typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ] === 'undefined'
            ) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadAPIKeyError'
              ]({
                message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`,
              });
            }
            apiKey =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].env[environmentVariableName];
            if (apiKey == null) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadAPIKeyError'
              ]({
                message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`,
              });
            }
            if (typeof apiKey !== 'string') {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadAPIKeyError'
              ]({
                message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,
              });
            }
            return apiKey;
          }
          // src/load-optional-setting.ts
          function loadOptionalSetting({ settingValue, environmentVariableName }) {
            if (typeof settingValue === 'string') {
              return settingValue;
            }
            if (
              settingValue != null ||
              typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ] === 'undefined'
            ) {
              return void 0;
            }
            settingValue =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].env[environmentVariableName];
            if (settingValue == null || typeof settingValue !== 'string') {
              return void 0;
            }
            return settingValue;
          }
          function loadSetting({ settingValue, environmentVariableName, settingName, description }) {
            if (typeof settingValue === 'string') {
              return settingValue;
            }
            if (settingValue != null) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadSettingError'
              ]({
                message: `${description} setting must be a string.`,
              });
            }
            if (
              typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ] === 'undefined'
            ) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadSettingError'
              ]({
                message: `${description} setting is missing. Pass it using the '${settingName}' parameter. Environment variables is not supported in this environment.`,
              });
            }
            settingValue =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].env[environmentVariableName];
            if (settingValue == null) {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadSettingError'
              ]({
                message: `${description} setting is missing. Pass it using the '${settingName}' parameter or the ${environmentVariableName} environment variable.`,
              });
            }
            if (typeof settingValue !== 'string') {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'LoadSettingError'
              ]({
                message: `${description} setting must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,
              });
            }
            return settingValue;
          }
          // src/validator.ts
          var validatorSymbol = Symbol.for('vercel.ai.validator');
          function validator(validate) {
            return {
              [validatorSymbol]: true,
              validate,
            };
          }
          function isValidator(value) {
            return (
              typeof value === 'object' &&
              value !== null &&
              validatorSymbol in value &&
              value[validatorSymbol] === true &&
              'validate' in value
            );
          }
          function asValidator(value) {
            return isValidator(value) ? value : zodValidator(value);
          }
          function zodValidator(zodSchema) {
            return validator((value) => {
              const result = zodSchema.safeParse(value);
              return result.success
                ? {
                    success: true,
                    value: result.data,
                  }
                : {
                    success: false,
                    error: result.error,
                  };
            });
          }
          // src/validate-types.ts
          function validateTypes({ value, schema: inputSchema }) {
            const result = safeValidateTypes({
              value,
              schema: inputSchema,
            });
            if (!result.success) {
              throw __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'TypeValidationError'
              ].wrap({
                value,
                cause: result.error,
              });
            }
            return result.value;
          }
          function safeValidateTypes({ value, schema }) {
            const validator2 = asValidator(schema);
            try {
              if (validator2.validate == null) {
                return {
                  success: true,
                  value,
                };
              }
              const result = validator2.validate(value);
              if (result.success) {
                return result;
              }
              return {
                success: false,
                error:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'TypeValidationError'
                  ].wrap({
                    value,
                    cause: result.error,
                  }),
              };
            } catch (error) {
              return {
                success: false,
                error:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'TypeValidationError'
                  ].wrap({
                    value,
                    cause: error,
                  }),
              };
            }
          }
          // src/parse-json.ts
          function parseJSON({ text, schema }) {
            try {
              const value =
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$secure$2d$json$2d$parse$40$2$2e$7$2e$0$2f$node_modules$2f$secure$2d$json$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'default'
                ].parse(text);
              if (schema == null) {
                return value;
              }
              return validateTypes({
                value,
                schema,
              });
            } catch (error) {
              if (
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'JSONParseError'
                ].isInstance(error) ||
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'TypeValidationError'
                ].isInstance(error)
              ) {
                throw error;
              }
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'JSONParseError'
              ]({
                text,
                cause: error,
              });
            }
          }
          function safeParseJSON({ text, schema }) {
            try {
              const value =
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$secure$2d$json$2d$parse$40$2$2e$7$2e$0$2f$node_modules$2f$secure$2d$json$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'default'
                ].parse(text);
              if (schema == null) {
                return {
                  success: true,
                  value,
                  rawValue: value,
                };
              }
              const validationResult = safeValidateTypes({
                value,
                schema,
              });
              return validationResult.success
                ? {
                    ...validationResult,
                    rawValue: value,
                  }
                : validationResult;
            } catch (error) {
              return {
                success: false,
                error:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'JSONParseError'
                  ].isInstance(error)
                    ? error
                    : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'JSONParseError'
                      ]({
                        text,
                        cause: error,
                      }),
              };
            }
          }
          function isParsableJson(input) {
            try {
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$secure$2d$json$2d$parse$40$2$2e$7$2e$0$2f$node_modules$2f$secure$2d$json$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].parse(input);
              return true;
            } catch (e) {
              return false;
            }
          }
          var getOriginalFetch2 = () => globalThis.fetch;
          var postJsonToApi = async ({
            url,
            headers,
            body,
            failedResponseHandler,
            successfulResponseHandler,
            abortSignal,
            fetch,
          }) =>
            postToApi({
              url,
              headers: {
                'Content-Type': 'application/json',
                ...headers,
              },
              body: {
                content: JSON.stringify(body),
                values: body,
              },
              failedResponseHandler,
              successfulResponseHandler,
              abortSignal,
              fetch,
            });
          var postToApi = async ({
            url,
            headers = {},
            body,
            successfulResponseHandler,
            failedResponseHandler,
            abortSignal,
            fetch = getOriginalFetch2(),
          }) => {
            try {
              const response = await fetch(url, {
                method: 'POST',
                headers: removeUndefinedEntries(headers),
                body: body.content,
                signal: abortSignal,
              });
              const responseHeaders = extractResponseHeaders(response);
              if (!response.ok) {
                let errorInformation;
                try {
                  errorInformation = await failedResponseHandler({
                    response,
                    url,
                    requestBodyValues: body.values,
                  });
                } catch (error) {
                  if (
                    isAbortError(error) ||
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ].isInstance(error)
                  ) {
                    throw error;
                  }
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: 'Failed to process error response',
                    cause: error,
                    statusCode: response.status,
                    url,
                    responseHeaders,
                    requestBodyValues: body.values,
                  });
                }
                throw errorInformation.value;
              }
              try {
                return await successfulResponseHandler({
                  response,
                  url,
                  requestBodyValues: body.values,
                });
              } catch (error) {
                if (error instanceof Error) {
                  if (
                    isAbortError(error) ||
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ].isInstance(error)
                  ) {
                    throw error;
                  }
                }
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Failed to process successful response',
                  cause: error,
                  statusCode: response.status,
                  url,
                  responseHeaders,
                  requestBodyValues: body.values,
                });
              }
            } catch (error) {
              if (isAbortError(error)) {
                throw error;
              }
              if (error instanceof TypeError && error.message === 'fetch failed') {
                const cause = error.cause;
                if (cause != null) {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: `Cannot connect to API: ${cause.message}`,
                    cause,
                    url,
                    requestBodyValues: body.values,
                    isRetryable: true,
                  });
                }
              }
              throw error;
            }
          };
          // src/resolve.ts
          async function resolve(value) {
            if (typeof value === 'function') {
              value = value();
            }
            return Promise.resolve(value);
          }
          var createJsonErrorResponseHandler =
            ({ errorSchema, errorToMessage, isRetryable }) =>
            async ({ response, url, requestBodyValues }) => {
              const responseBody = await response.text();
              const responseHeaders = extractResponseHeaders(response);
              if (responseBody.trim() === '') {
                return {
                  responseHeaders,
                  value:
                    new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ]({
                      message: response.statusText,
                      url,
                      requestBodyValues,
                      statusCode: response.status,
                      responseHeaders,
                      responseBody,
                      isRetryable: isRetryable == null ? void 0 : isRetryable(response),
                    }),
                };
              }
              try {
                const parsedError = parseJSON({
                  text: responseBody,
                  schema: errorSchema,
                });
                return {
                  responseHeaders,
                  value:
                    new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ]({
                      message: errorToMessage(parsedError),
                      url,
                      requestBodyValues,
                      statusCode: response.status,
                      responseHeaders,
                      responseBody,
                      data: parsedError,
                      isRetryable: isRetryable == null ? void 0 : isRetryable(response, parsedError),
                    }),
                };
              } catch (parseError) {
                return {
                  responseHeaders,
                  value:
                    new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'APICallError'
                    ]({
                      message: response.statusText,
                      url,
                      requestBodyValues,
                      statusCode: response.status,
                      responseHeaders,
                      responseBody,
                      isRetryable: isRetryable == null ? void 0 : isRetryable(response),
                    }),
                };
              }
            };
          var createEventSourceResponseHandler =
            (chunkSchema) =>
            async ({ response }) => {
              const responseHeaders = extractResponseHeaders(response);
              if (response.body == null) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'EmptyResponseBodyError'
                ]({});
              }
              return {
                responseHeaders,
                value: response.body
                  .pipeThrough(new TextDecoderStream())
                  .pipeThrough(
                    new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventsource$2d$parser$40$3$2e$0$2e$0$2f$node_modules$2f$eventsource$2d$parser$2f$dist$2f$stream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__[
                      'EventSourceParserStream'
                    ](),
                  )
                  .pipeThrough(
                    new TransformStream({
                      transform({ data }, controller) {
                        if (data === '[DONE]') {
                          return;
                        }
                        controller.enqueue(
                          safeParseJSON({
                            text: data,
                            schema: chunkSchema,
                          }),
                        );
                      },
                    }),
                  ),
              };
            };
          var createJsonStreamResponseHandler =
            (chunkSchema) =>
            async ({ response }) => {
              const responseHeaders = extractResponseHeaders(response);
              if (response.body == null) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'EmptyResponseBodyError'
                ]({});
              }
              let buffer = '';
              return {
                responseHeaders,
                value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(
                  new TransformStream({
                    transform(chunkText, controller) {
                      if (chunkText.endsWith('\n')) {
                        controller.enqueue(
                          safeParseJSON({
                            text: buffer + chunkText,
                            schema: chunkSchema,
                          }),
                        );
                        buffer = '';
                      } else {
                        buffer += chunkText;
                      }
                    },
                  }),
                ),
              };
            };
          var createJsonResponseHandler =
            (responseSchema) =>
            async ({ response, url, requestBodyValues }) => {
              const responseBody = await response.text();
              const parsedResult = safeParseJSON({
                text: responseBody,
                schema: responseSchema,
              });
              const responseHeaders = extractResponseHeaders(response);
              if (!parsedResult.success) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Invalid JSON response',
                  cause: parsedResult.error,
                  statusCode: response.status,
                  responseHeaders,
                  responseBody,
                  url,
                  requestBodyValues,
                });
              }
              return {
                responseHeaders,
                value: parsedResult.value,
                rawValue: parsedResult.rawValue,
              };
            };
          var createBinaryResponseHandler =
            () =>
            async ({ response, url, requestBodyValues }) => {
              const responseHeaders = extractResponseHeaders(response);
              if (!response.body) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Response body is empty',
                  url,
                  requestBodyValues,
                  statusCode: response.status,
                  responseHeaders,
                  responseBody: void 0,
                });
              }
              try {
                const buffer = await response.arrayBuffer();
                return {
                  responseHeaders,
                  value: new Uint8Array(buffer),
                };
              } catch (error) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'APICallError'
                ]({
                  message: 'Failed to read response as array buffer',
                  url,
                  requestBodyValues,
                  statusCode: response.status,
                  responseHeaders,
                  responseBody: void 0,
                  cause: error,
                });
              }
            };
          var createStatusCodeErrorResponseHandler =
            () =>
            async ({ response, url, requestBodyValues }) => {
              const responseHeaders = extractResponseHeaders(response);
              const responseBody = await response.text();
              return {
                responseHeaders,
                value:
                  new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'APICallError'
                  ]({
                    message: response.statusText,
                    url,
                    requestBodyValues,
                    statusCode: response.status,
                    responseHeaders,
                    responseBody,
                  }),
              };
            };
          // src/uint8-utils.ts
          var { btoa, atob } = globalThis;
          function convertBase64ToUint8Array(base64String) {
            const base64Url = base64String.replace(/-/g, '+').replace(/_/g, '/');
            const latin1string = atob(base64Url);
            return Uint8Array.from(latin1string, (byte) => byte.codePointAt(0));
          }
          function convertUint8ArrayToBase64(array) {
            let latin1string = '';
            for (let i = 0; i < array.length; i++) {
              latin1string += String.fromCodePoint(array[i]);
            }
            return btoa(latin1string);
          }
          // src/without-trailing-slash.ts
          function withoutTrailingSlash(url) {
            return url == null ? void 0 : url.replace(/\/$/, '');
          }
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+anthropic@1.1.17_zod@3.24.2/node_modules/@ai-sdk/anthropic/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/anthropic-provider.ts
          __turbopack_context__.s({
            anthropic: () => anthropic,
            createAnthropic: () => createAnthropic,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.13_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs [app-client] (ecmascript)',
            );
          var anthropicErrorDataSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].literal('error'),
              error:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].string(),
                  message:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                }),
            });
          var anthropicFailedResponseHandler = (0,
          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
            'createJsonErrorResponseHandler'
          ])({
            errorSchema: anthropicErrorDataSchema,
            errorToMessage: (data) => data.error.message,
          });
          function prepareTools(mode) {
            var _a;
            const tools = ((_a = mode.tools) == null ? void 0 : _a.length) ? mode.tools : void 0;
            const toolWarnings = [];
            const betas = /* @__PURE__ */ new Set();
            if (tools == null) {
              return {
                tools: void 0,
                tool_choice: void 0,
                toolWarnings,
                betas,
              };
            }
            const anthropicTools2 = [];
            for (const tool of tools) {
              switch (tool.type) {
                case 'function':
                  anthropicTools2.push({
                    name: tool.name,
                    description: tool.description,
                    input_schema: tool.parameters,
                  });
                  break;
                case 'provider-defined':
                  switch (tool.id) {
                    case 'anthropic.computer_20250124':
                      betas.add('computer-use-2025-01-24');
                      anthropicTools2.push({
                        name: tool.name,
                        type: 'computer_20250124',
                        display_width_px: tool.args.displayWidthPx,
                        display_height_px: tool.args.displayHeightPx,
                        display_number: tool.args.displayNumber,
                      });
                      break;
                    case 'anthropic.computer_20241022':
                      betas.add('computer-use-2024-10-22');
                      anthropicTools2.push({
                        name: tool.name,
                        type: 'computer_20241022',
                        display_width_px: tool.args.displayWidthPx,
                        display_height_px: tool.args.displayHeightPx,
                        display_number: tool.args.displayNumber,
                      });
                      break;
                    case 'anthropic.text_editor_20250124':
                      betas.add('computer-use-2025-01-24');
                      anthropicTools2.push({
                        name: tool.name,
                        type: 'text_editor_20250124',
                      });
                      break;
                    case 'anthropic.text_editor_20241022':
                      betas.add('computer-use-2024-10-22');
                      anthropicTools2.push({
                        name: tool.name,
                        type: 'text_editor_20241022',
                      });
                      break;
                    case 'anthropic.bash_20250124':
                      betas.add('computer-use-2025-01-24');
                      anthropicTools2.push({
                        name: tool.name,
                        type: 'bash_20250124',
                      });
                      break;
                    case 'anthropic.bash_20241022':
                      betas.add('computer-use-2024-10-22');
                      anthropicTools2.push({
                        name: tool.name,
                        type: 'bash_20241022',
                      });
                      break;
                    default:
                      toolWarnings.push({
                        type: 'unsupported-tool',
                        tool,
                      });
                      break;
                  }
                  break;
                default:
                  toolWarnings.push({
                    type: 'unsupported-tool',
                    tool,
                  });
                  break;
              }
            }
            const toolChoice = mode.toolChoice;
            if (toolChoice == null) {
              return {
                tools: anthropicTools2,
                tool_choice: void 0,
                toolWarnings,
                betas,
              };
            }
            const type = toolChoice.type;
            switch (type) {
              case 'auto':
                return {
                  tools: anthropicTools2,
                  tool_choice: {
                    type: 'auto',
                  },
                  toolWarnings,
                  betas,
                };
              case 'required':
                return {
                  tools: anthropicTools2,
                  tool_choice: {
                    type: 'any',
                  },
                  toolWarnings,
                  betas,
                };
              case 'none':
                return {
                  tools: void 0,
                  tool_choice: void 0,
                  toolWarnings,
                  betas,
                };
              case 'tool':
                return {
                  tools: anthropicTools2,
                  tool_choice: {
                    type: 'tool',
                    name: toolChoice.toolName,
                  },
                  toolWarnings,
                  betas,
                };
              default: {
                const _exhaustiveCheck = type;
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'UnsupportedFunctionalityError'
                ]({
                  functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,
                });
              }
            }
          }
          function convertToAnthropicMessagesPrompt({ prompt, sendReasoning, warnings }) {
            var _a, _b, _c, _d;
            const betas = /* @__PURE__ */ new Set();
            const blocks = groupIntoBlocks(prompt);
            let system = void 0;
            const messages = [];
            function getCacheControl(providerMetadata) {
              var _a2;
              const anthropic2 = providerMetadata == null ? void 0 : providerMetadata.anthropic;
              const cacheControlValue =
                (_a2 = anthropic2 == null ? void 0 : anthropic2.cacheControl) != null
                  ? _a2
                  : anthropic2 == null
                    ? void 0
                    : anthropic2.cache_control;
              return cacheControlValue;
            }
            for (let i = 0; i < blocks.length; i++) {
              const block = blocks[i];
              const isLastBlock = i === blocks.length - 1;
              const type = block.type;
              switch (type) {
                case 'system': {
                  if (system != null) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'UnsupportedFunctionalityError'
                    ]({
                      functionality: 'Multiple system messages that are separated by user/assistant messages',
                    });
                  }
                  system = block.messages.map(({ content, providerMetadata }) => ({
                    type: 'text',
                    text: content,
                    cache_control: getCacheControl(providerMetadata),
                  }));
                  break;
                }
                case 'user': {
                  const anthropicContent = [];
                  for (const message of block.messages) {
                    const { role, content } = message;
                    switch (role) {
                      case 'user': {
                        for (let j = 0; j < content.length; j++) {
                          const part = content[j];
                          const isLastPart = j === content.length - 1;
                          const cacheControl =
                            (_a = getCacheControl(part.providerMetadata)) != null
                              ? _a
                              : isLastPart
                                ? getCacheControl(message.providerMetadata)
                                : void 0;
                          switch (part.type) {
                            case 'text': {
                              anthropicContent.push({
                                type: 'text',
                                text: part.text,
                                cache_control: cacheControl,
                              });
                              break;
                            }
                            case 'image': {
                              anthropicContent.push({
                                type: 'image',
                                source:
                                  part.image instanceof URL
                                    ? {
                                        type: 'url',
                                        url: part.image.toString(),
                                      }
                                    : {
                                        type: 'base64',
                                        media_type: (_b = part.mimeType) != null ? _b : 'image/jpeg',
                                        data: (0,
                                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                          'convertUint8ArrayToBase64'
                                        ])(part.image),
                                      },
                                cache_control: cacheControl,
                              });
                              break;
                            }
                            case 'file': {
                              if (part.data instanceof URL) {
                                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'UnsupportedFunctionalityError'
                                ]({
                                  functionality: 'Image URLs in user messages',
                                });
                              }
                              if (part.mimeType !== 'application/pdf') {
                                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'UnsupportedFunctionalityError'
                                ]({
                                  functionality: 'Non-PDF files in user messages',
                                });
                              }
                              betas.add('pdfs-2024-09-25');
                              anthropicContent.push({
                                type: 'document',
                                source: {
                                  type: 'base64',
                                  media_type: 'application/pdf',
                                  data: part.data,
                                },
                                cache_control: cacheControl,
                              });
                              break;
                            }
                          }
                        }
                        break;
                      }
                      case 'tool': {
                        for (let i2 = 0; i2 < content.length; i2++) {
                          const part = content[i2];
                          const isLastPart = i2 === content.length - 1;
                          const cacheControl =
                            (_c = getCacheControl(part.providerMetadata)) != null
                              ? _c
                              : isLastPart
                                ? getCacheControl(message.providerMetadata)
                                : void 0;
                          const toolResultContent =
                            part.content != null
                              ? part.content.map((part2) => {
                                  var _a2;
                                  switch (part2.type) {
                                    case 'text':
                                      return {
                                        type: 'text',
                                        text: part2.text,
                                        cache_control: void 0,
                                      };
                                    case 'image':
                                      return {
                                        type: 'image',
                                        source: {
                                          type: 'base64',
                                          media_type: (_a2 = part2.mimeType) != null ? _a2 : 'image/jpeg',
                                          data: part2.data,
                                        },
                                        cache_control: void 0,
                                      };
                                  }
                                })
                              : JSON.stringify(part.result);
                          anthropicContent.push({
                            type: 'tool_result',
                            tool_use_id: part.toolCallId,
                            content: toolResultContent,
                            is_error: part.isError,
                            cache_control: cacheControl,
                          });
                        }
                        break;
                      }
                      default: {
                        const _exhaustiveCheck = role;
                        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                      }
                    }
                  }
                  messages.push({
                    role: 'user',
                    content: anthropicContent,
                  });
                  break;
                }
                case 'assistant': {
                  const anthropicContent = [];
                  for (let j = 0; j < block.messages.length; j++) {
                    const message = block.messages[j];
                    const isLastMessage = j === block.messages.length - 1;
                    const { content } = message;
                    for (let k = 0; k < content.length; k++) {
                      const part = content[k];
                      const isLastContentPart = k === content.length - 1;
                      const cacheControl =
                        (_d = getCacheControl(part.providerMetadata)) != null
                          ? _d
                          : isLastContentPart
                            ? getCacheControl(message.providerMetadata)
                            : void 0;
                      switch (part.type) {
                        case 'text': {
                          anthropicContent.push({
                            type: 'text',
                            // trim the last text part if it's the last message in the block
                            text:
                              // because Anthropic does not allow trailing whitespace
                              // in pre-filled assistant responses
                              isLastBlock && isLastMessage && isLastContentPart ? part.text.trim() : part.text,
                            cache_control: cacheControl,
                          });
                          break;
                        }
                        case 'reasoning': {
                          if (sendReasoning) {
                            anthropicContent.push({
                              type: 'thinking',
                              thinking: part.text,
                              signature: part.signature,
                              cache_control: cacheControl,
                            });
                          } else {
                            warnings.push({
                              type: 'other',
                              message: 'sending reasoning content is disabled for this model',
                            });
                          }
                          break;
                        }
                        case 'redacted-reasoning': {
                          anthropicContent.push({
                            type: 'redacted_thinking',
                            data: part.data,
                            cache_control: cacheControl,
                          });
                          break;
                        }
                        case 'tool-call': {
                          anthropicContent.push({
                            type: 'tool_use',
                            id: part.toolCallId,
                            name: part.toolName,
                            input: part.args,
                            cache_control: cacheControl,
                          });
                          break;
                        }
                        default: {
                          const _exhaustiveCheck = part;
                          throw new Error(`Unsupported part: ${_exhaustiveCheck}`);
                        }
                      }
                    }
                  }
                  messages.push({
                    role: 'assistant',
                    content: anthropicContent,
                  });
                  break;
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            return {
              prompt: {
                system,
                messages,
              },
              betas,
            };
          }
          function groupIntoBlocks(prompt) {
            const blocks = [];
            let currentBlock = void 0;
            for (const message of prompt) {
              const { role } = message;
              switch (role) {
                case 'system': {
                  if ((currentBlock == null ? void 0 : currentBlock.type) !== 'system') {
                    currentBlock = {
                      type: 'system',
                      messages: [],
                    };
                    blocks.push(currentBlock);
                  }
                  currentBlock.messages.push(message);
                  break;
                }
                case 'assistant': {
                  if ((currentBlock == null ? void 0 : currentBlock.type) !== 'assistant') {
                    currentBlock = {
                      type: 'assistant',
                      messages: [],
                    };
                    blocks.push(currentBlock);
                  }
                  currentBlock.messages.push(message);
                  break;
                }
                case 'user': {
                  if ((currentBlock == null ? void 0 : currentBlock.type) !== 'user') {
                    currentBlock = {
                      type: 'user',
                      messages: [],
                    };
                    blocks.push(currentBlock);
                  }
                  currentBlock.messages.push(message);
                  break;
                }
                case 'tool': {
                  if ((currentBlock == null ? void 0 : currentBlock.type) !== 'user') {
                    currentBlock = {
                      type: 'user',
                      messages: [],
                    };
                    blocks.push(currentBlock);
                  }
                  currentBlock.messages.push(message);
                  break;
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            return blocks;
          }
          // src/map-anthropic-stop-reason.ts
          function mapAnthropicStopReason(finishReason) {
            switch (finishReason) {
              case 'end_turn':
              case 'stop_sequence':
                return 'stop';
              case 'tool_use':
                return 'tool-calls';
              case 'max_tokens':
                return 'length';
              default:
                return 'unknown';
            }
          }
          // src/anthropic-messages-language-model.ts
          var AnthropicMessagesLanguageModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.defaultObjectGenerationMode = 'tool';
              this.supportsImageUrls = true;
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            async getArgs({
              mode,
              prompt,
              maxTokens = 4096, // 4096: max model output tokens TODO update default in v5
              temperature,
              topP,
              topK,
              frequencyPenalty,
              presencePenalty,
              stopSequences,
              responseFormat,
              seed,
              providerMetadata: providerOptions,
            }) {
              var _a, _b, _c, _d;
              const type = mode.type;
              const warnings = [];
              if (frequencyPenalty != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'frequencyPenalty',
                });
              }
              if (presencePenalty != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'presencePenalty',
                });
              }
              if (seed != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'seed',
                });
              }
              if (responseFormat != null && responseFormat.type !== 'text') {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'responseFormat',
                  details: 'JSON response format is not supported.',
                });
              }
              const { prompt: messagesPrompt, betas: messagesBetas } = convertToAnthropicMessagesPrompt({
                prompt,
                sendReasoning: (_a = this.settings.sendReasoning) != null ? _a : true,
                warnings,
              });
              const thinkingOptions = thinkingOptionsSchema.safeParse(
                (_b = providerOptions == null ? void 0 : providerOptions.anthropic) == null ? void 0 : _b.thinking,
              );
              if (!thinkingOptions.success) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'InvalidArgumentError'
                ]({
                  argument: 'providerOptions.anthropic.thinking',
                  message: 'invalid thinking options',
                  cause: thinkingOptions.error,
                });
              }
              const isThinking = ((_c = thinkingOptions.data) == null ? void 0 : _c.type) === 'enabled';
              const thinkingBudget = (_d = thinkingOptions.data) == null ? void 0 : _d.budgetTokens;
              const baseArgs = {
                // model id:
                model: this.modelId,
                // standardized settings:
                max_tokens: maxTokens,
                temperature,
                top_k: topK,
                top_p: topP,
                stop_sequences: stopSequences,
                // provider specific settings:
                ...(isThinking && {
                  thinking: {
                    type: 'enabled',
                    budget_tokens: thinkingBudget,
                  },
                }),
                // prompt:
                system: messagesPrompt.system,
                messages: messagesPrompt.messages,
              };
              if (isThinking) {
                if (thinkingBudget == null) {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'thinking requires a budget',
                  });
                }
                if (baseArgs.temperature != null) {
                  baseArgs.temperature = void 0;
                  warnings.push({
                    type: 'unsupported-setting',
                    setting: 'temperature',
                    details: 'temperature is not supported when thinking is enabled',
                  });
                }
                if (topK != null) {
                  baseArgs.top_k = void 0;
                  warnings.push({
                    type: 'unsupported-setting',
                    setting: 'topK',
                    details: 'topK is not supported when thinking is enabled',
                  });
                }
                if (topP != null) {
                  baseArgs.top_p = void 0;
                  warnings.push({
                    type: 'unsupported-setting',
                    setting: 'topP',
                    details: 'topP is not supported when thinking is enabled',
                  });
                }
                baseArgs.max_tokens = maxTokens + thinkingBudget;
              }
              switch (type) {
                case 'regular': {
                  const { tools, tool_choice, toolWarnings, betas: toolsBetas } = prepareTools(mode);
                  return {
                    args: {
                      ...baseArgs,
                      tools,
                      tool_choice,
                    },
                    warnings: [...warnings, ...toolWarnings],
                    betas: /* @__PURE__ */ new Set([...messagesBetas, ...toolsBetas]),
                  };
                }
                case 'object-json': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'json-mode object generation',
                  });
                }
                case 'object-tool': {
                  const { name, description, parameters } = mode.tool;
                  return {
                    args: {
                      ...baseArgs,
                      tools: [
                        {
                          name,
                          description,
                          input_schema: parameters,
                        },
                      ],
                      tool_choice: {
                        type: 'tool',
                        name,
                      },
                    },
                    warnings,
                    betas: messagesBetas,
                  };
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            async getHeaders({ betas, headers }) {
              return (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'combineHeaders'
              ])(
                await (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'resolve'
                ])(this.config.headers),
                betas.size > 0
                  ? {
                      'anthropic-beta': Array.from(betas).join(','),
                    }
                  : {},
                headers,
              );
            }
            buildRequestUrl(isStreaming) {
              var _a, _b, _c;
              return (_c =
                (_b = (_a = this.config).buildRequestUrl) == null
                  ? void 0
                  : _b.call(_a, this.config.baseURL, isStreaming)) != null
                ? _c
                : `${this.config.baseURL}/messages`;
            }
            transformRequestBody(args) {
              var _a, _b, _c;
              return (_c = (_b = (_a = this.config).transformRequestBody) == null ? void 0 : _b.call(_a, args)) != null
                ? _c
                : args;
            }
            async doGenerate(options) {
              var _a, _b, _c, _d;
              const { args, warnings, betas } = await this.getArgs(options);
              const {
                responseHeaders,
                value: response,
                rawValue: rawResponse,
              } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.buildRequestUrl(false),
                headers: await this.getHeaders({
                  betas,
                  headers: options.headers,
                }),
                body: this.transformRequestBody(args),
                failedResponseHandler: anthropicFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(anthropicMessagesResponseSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages: rawPrompt, ...rawSettings } = args;
              let text = '';
              for (const content of response.content) {
                if (content.type === 'text') {
                  text += content.text;
                }
              }
              let toolCalls = void 0;
              if (response.content.some((content) => content.type === 'tool_use')) {
                toolCalls = [];
                for (const content of response.content) {
                  if (content.type === 'tool_use') {
                    toolCalls.push({
                      toolCallType: 'function',
                      toolCallId: content.id,
                      toolName: content.name,
                      args: JSON.stringify(content.input),
                    });
                  }
                }
              }
              const reasoning = response.content
                .filter((content) => content.type === 'redacted_thinking' || content.type === 'thinking')
                .map((content) =>
                  content.type === 'thinking'
                    ? {
                        type: 'text',
                        text: content.thinking,
                        signature: content.signature,
                      }
                    : {
                        type: 'redacted',
                        data: content.data,
                      },
                );
              return {
                text,
                reasoning: reasoning.length > 0 ? reasoning : void 0,
                toolCalls,
                finishReason: mapAnthropicStopReason(response.stop_reason),
                usage: {
                  promptTokens: response.usage.input_tokens,
                  completionTokens: response.usage.output_tokens,
                },
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                  body: rawResponse,
                },
                response: {
                  id: (_a = response.id) != null ? _a : void 0,
                  modelId: (_b = response.model) != null ? _b : void 0,
                },
                warnings,
                providerMetadata: {
                  anthropic: {
                    cacheCreationInputTokens: (_c = response.usage.cache_creation_input_tokens) != null ? _c : null,
                    cacheReadInputTokens: (_d = response.usage.cache_read_input_tokens) != null ? _d : null,
                  },
                },
                request: {
                  body: JSON.stringify(args),
                },
              };
            }
            async doStream(options) {
              const { args, warnings, betas } = await this.getArgs(options);
              const body = {
                ...args,
                stream: true,
              };
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.buildRequestUrl(true),
                headers: await this.getHeaders({
                  betas,
                  headers: options.headers,
                }),
                body: this.transformRequestBody(body),
                failedResponseHandler: anthropicFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createEventSourceResponseHandler'
                ])(anthropicMessagesChunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages: rawPrompt, ...rawSettings } = args;
              let finishReason = 'unknown';
              const usage = {
                promptTokens: Number.NaN,
                completionTokens: Number.NaN,
              };
              const toolCallContentBlocks = {};
              let providerMetadata = void 0;
              let blockType = void 0;
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      var _a, _b, _c, _d;
                      if (!chunk.success) {
                        controller.enqueue({
                          type: 'error',
                          error: chunk.error,
                        });
                        return;
                      }
                      const value = chunk.value;
                      switch (value.type) {
                        case 'ping': {
                          return;
                        }
                        case 'content_block_start': {
                          const contentBlockType = value.content_block.type;
                          blockType = contentBlockType;
                          switch (contentBlockType) {
                            case 'text':
                            case 'thinking': {
                              return;
                            }
                            case 'redacted_thinking': {
                              controller.enqueue({
                                type: 'redacted-reasoning',
                                data: value.content_block.data,
                              });
                              return;
                            }
                            case 'tool_use': {
                              toolCallContentBlocks[value.index] = {
                                toolCallId: value.content_block.id,
                                toolName: value.content_block.name,
                                jsonText: '',
                              };
                              return;
                            }
                            default: {
                              const _exhaustiveCheck = contentBlockType;
                              throw new Error(`Unsupported content block type: ${_exhaustiveCheck}`);
                            }
                          }
                        }
                        case 'content_block_stop': {
                          if (toolCallContentBlocks[value.index] != null) {
                            const contentBlock = toolCallContentBlocks[value.index];
                            controller.enqueue({
                              type: 'tool-call',
                              toolCallType: 'function',
                              toolCallId: contentBlock.toolCallId,
                              toolName: contentBlock.toolName,
                              args: contentBlock.jsonText,
                            });
                            delete toolCallContentBlocks[value.index];
                          }
                          blockType = void 0;
                          return;
                        }
                        case 'content_block_delta': {
                          const deltaType = value.delta.type;
                          switch (deltaType) {
                            case 'text_delta': {
                              controller.enqueue({
                                type: 'text-delta',
                                textDelta: value.delta.text,
                              });
                              return;
                            }
                            case 'thinking_delta': {
                              controller.enqueue({
                                type: 'reasoning',
                                textDelta: value.delta.thinking,
                              });
                              return;
                            }
                            case 'signature_delta': {
                              if (blockType === 'thinking') {
                                controller.enqueue({
                                  type: 'reasoning-signature',
                                  signature: value.delta.signature,
                                });
                              }
                              return;
                            }
                            case 'input_json_delta': {
                              const contentBlock = toolCallContentBlocks[value.index];
                              controller.enqueue({
                                type: 'tool-call-delta',
                                toolCallType: 'function',
                                toolCallId: contentBlock.toolCallId,
                                toolName: contentBlock.toolName,
                                argsTextDelta: value.delta.partial_json,
                              });
                              contentBlock.jsonText += value.delta.partial_json;
                              return;
                            }
                            default: {
                              const _exhaustiveCheck = deltaType;
                              throw new Error(`Unsupported delta type: ${_exhaustiveCheck}`);
                            }
                          }
                        }
                        case 'message_start': {
                          usage.promptTokens = value.message.usage.input_tokens;
                          usage.completionTokens = value.message.usage.output_tokens;
                          providerMetadata = {
                            anthropic: {
                              cacheCreationInputTokens:
                                (_a = value.message.usage.cache_creation_input_tokens) != null ? _a : null,
                              cacheReadInputTokens:
                                (_b = value.message.usage.cache_read_input_tokens) != null ? _b : null,
                            },
                          };
                          controller.enqueue({
                            type: 'response-metadata',
                            id: (_c = value.message.id) != null ? _c : void 0,
                            modelId: (_d = value.message.model) != null ? _d : void 0,
                          });
                          return;
                        }
                        case 'message_delta': {
                          usage.completionTokens = value.usage.output_tokens;
                          finishReason = mapAnthropicStopReason(value.delta.stop_reason);
                          return;
                        }
                        case 'message_stop': {
                          controller.enqueue({
                            type: 'finish',
                            finishReason,
                            usage,
                            providerMetadata,
                          });
                          return;
                        }
                        case 'error': {
                          controller.enqueue({
                            type: 'error',
                            error: value.error,
                          });
                          return;
                        }
                        default: {
                          const _exhaustiveCheck = value;
                          throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);
                        }
                      }
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings,
                request: {
                  body: JSON.stringify(body),
                },
              };
            }
          };
          var anthropicMessagesResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].literal('message'),
              id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .nullish(),
              model:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              content:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].discriminatedUnion('type', [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('text'),
                      text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('thinking'),
                      thinking:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].string(),
                      signature:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('redacted_thinking'),
                      data: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('tool_use'),
                      id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                      name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                      input:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].unknown(),
                    }),
                  ]),
                ),
              stop_reason:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  input_tokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].number(),
                  output_tokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].number(),
                  cache_creation_input_tokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .nullish(),
                  cache_read_input_tokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .nullish(),
                }),
            });
          var anthropicMessagesChunkSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].discriminatedUnion('type', [
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('message_start'),
                message:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .string()
                      .nullish(),
                    model:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .string()
                        .nullish(),
                    usage:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        input_tokens:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].number(),
                        output_tokens:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].number(),
                        cache_creation_input_tokens:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .number()
                            .nullish(),
                        cache_read_input_tokens:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .number()
                            .nullish(),
                      }),
                  }),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('content_block_start'),
                index:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].number(),
                content_block:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].discriminatedUnion('type', [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('text'),
                      text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('thinking'),
                      thinking:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('tool_use'),
                      id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                      name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('redacted_thinking'),
                      data: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    }),
                  ]),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('content_block_delta'),
                index:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].number(),
                delta:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].discriminatedUnion('type', [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('input_json_delta'),
                      partial_json:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('text_delta'),
                      text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('thinking_delta'),
                      thinking:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('signature_delta'),
                      signature:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].string(),
                    }),
                  ]),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('content_block_stop'),
                index:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].number(),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('error'),
                error:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                    message:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                  }),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('message_delta'),
                delta:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    stop_reason:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .string()
                        .nullish(),
                  }),
                usage:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    output_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  }),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('message_stop'),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('ping'),
              }),
            ]);
          var thinkingOptionsSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ]
              .object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].union([
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].literal('enabled'),
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].literal('disabled'),
                ]),
                budgetTokens:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .number()
                    .optional(),
              })
              .optional();
          var Bash20241022Parameters =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              command:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
              restart:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .boolean()
                  .optional(),
            });
          function bashTool_20241022(options = {}) {
            return {
              type: 'provider-defined',
              id: 'anthropic.bash_20241022',
              args: {},
              parameters: Bash20241022Parameters,
              execute: options.execute,
              experimental_toToolResultContent: options.experimental_toToolResultContent,
            };
          }
          var Bash20250124Parameters =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              command:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
              restart:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .boolean()
                  .optional(),
            });
          function bashTool_20250124(options = {}) {
            return {
              type: 'provider-defined',
              id: 'anthropic.bash_20250124',
              args: {},
              parameters: Bash20250124Parameters,
              execute: options.execute,
              experimental_toToolResultContent: options.experimental_toToolResultContent,
            };
          }
          var TextEditor20241022Parameters =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              command:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].enum(['view', 'create', 'str_replace', 'insert', 'undo_edit']),
              path: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].string(),
              file_text:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .optional(),
              insert_line:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .int()
                  .optional(),
              new_str:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .optional(),
              old_str:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .optional(),
              view_range:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .int(),
                  )
                  .optional(),
            });
          function textEditorTool_20241022(options = {}) {
            return {
              type: 'provider-defined',
              id: 'anthropic.text_editor_20241022',
              args: {},
              parameters: TextEditor20241022Parameters,
              execute: options.execute,
              experimental_toToolResultContent: options.experimental_toToolResultContent,
            };
          }
          var TextEditor20250124Parameters =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              command:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].enum(['view', 'create', 'str_replace', 'insert', 'undo_edit']),
              path: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].string(),
              file_text:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .optional(),
              insert_line:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .int()
                  .optional(),
              new_str:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .optional(),
              old_str:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .optional(),
              view_range:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .int(),
                  )
                  .optional(),
            });
          function textEditorTool_20250124(options = {}) {
            return {
              type: 'provider-defined',
              id: 'anthropic.text_editor_20250124',
              args: {},
              parameters: TextEditor20250124Parameters,
              execute: options.execute,
              experimental_toToolResultContent: options.experimental_toToolResultContent,
            };
          }
          var Computer20241022Parameters =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              action:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].enum([
                  'key',
                  'type',
                  'mouse_move',
                  'left_click',
                  'left_click_drag',
                  'right_click',
                  'middle_click',
                  'double_click',
                  'screenshot',
                  'cursor_position',
                ]),
              coordinate:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .int(),
                  )
                  .optional(),
              text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .optional(),
            });
          function computerTool_20241022(options) {
            return {
              type: 'provider-defined',
              id: 'anthropic.computer_20241022',
              args: {
                displayWidthPx: options.displayWidthPx,
                displayHeightPx: options.displayHeightPx,
                displayNumber: options.displayNumber,
              },
              parameters: Computer20241022Parameters,
              execute: options.execute,
              experimental_toToolResultContent: options.experimental_toToolResultContent,
            };
          }
          var Computer20250124Parameters =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              action:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].enum([
                  'key',
                  'hold_key',
                  'type',
                  'cursor_position',
                  'mouse_move',
                  'left_mouse_down',
                  'left_mouse_up',
                  'left_click',
                  'left_click_drag',
                  'right_click',
                  'middle_click',
                  'double_click',
                  'triple_click',
                  'scroll',
                  'wait',
                  'screenshot',
                ]),
              coordinate:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .tuple([
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .int(),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .int(),
                  ])
                  .optional(),
              duration:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .optional(),
              scroll_amount:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .optional(),
              scroll_direction:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .enum(['up', 'down', 'left', 'right'])
                  .optional(),
              start_coordinate:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .tuple([
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .int(),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .int(),
                  ])
                  .optional(),
              text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .optional(),
            });
          function computerTool_20250124(options) {
            return {
              type: 'provider-defined',
              id: 'anthropic.computer_20250124',
              args: {
                displayWidthPx: options.displayWidthPx,
                displayHeightPx: options.displayHeightPx,
                displayNumber: options.displayNumber,
              },
              parameters: Computer20250124Parameters,
              execute: options.execute,
              experimental_toToolResultContent: options.experimental_toToolResultContent,
            };
          }
          var anthropicTools = {
            bash_20241022: bashTool_20241022,
            bash_20250124: bashTool_20250124,
            textEditor_20241022: textEditorTool_20241022,
            textEditor_20250124: textEditorTool_20250124,
            computer_20241022: computerTool_20241022,
            computer_20250124: computerTool_20250124,
          };
          // src/anthropic-provider.ts
          function createAnthropic(options = {}) {
            var _a;
            const baseURL =
              (_a = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'withoutTrailingSlash'
              ])(options.baseURL)) != null
                ? _a
                : 'https://api.anthropic.com/v1';
            const getHeaders = () => ({
              'anthropic-version': '2023-06-01',
              'x-api-key': (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'loadApiKey'
              ])({
                apiKey: options.apiKey,
                environmentVariableName: 'ANTHROPIC_API_KEY',
                description: 'Anthropic',
              }),
              ...options.headers,
            });
            const createChatModel = (modelId, settings = {}) =>
              new AnthropicMessagesLanguageModel(modelId, settings, {
                provider: 'anthropic.messages',
                baseURL,
                headers: getHeaders,
                fetch: options.fetch,
              });
            const provider = function (modelId, settings) {
              if (new.target) {
                throw new Error('The Anthropic model function cannot be called with the new keyword.');
              }
              return createChatModel(modelId, settings);
            };
            provider.languageModel = createChatModel;
            provider.chat = createChatModel;
            provider.messages = createChatModel;
            provider.textEmbeddingModel = (modelId) => {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'NoSuchModelError'
              ]({
                modelId,
                modelType: 'textEmbeddingModel',
              });
            };
            provider.tools = anthropicTools;
            return provider;
          }
          var anthropic = createAnthropic();
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+cohere@1.1.15_zod@3.24.2/node_modules/@ai-sdk/cohere/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/cohere-provider.ts
          __turbopack_context__.s({
            cohere: () => cohere,
            createCohere: () => createCohere,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.13_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)',
            );
          // src/cohere-chat-language-model.ts
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs [app-client] (ecmascript)',
            );
          var cohereErrorDataSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              message:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
            });
          var cohereFailedResponseHandler = (0,
          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
            'createJsonErrorResponseHandler'
          ])({
            errorSchema: cohereErrorDataSchema,
            errorToMessage: (data) => data.message,
          });
          function convertToCohereChatPrompt(prompt) {
            const messages = [];
            for (const { role, content } of prompt) {
              switch (role) {
                case 'system': {
                  messages.push({
                    role: 'system',
                    content,
                  });
                  break;
                }
                case 'user': {
                  messages.push({
                    role: 'user',
                    content: content
                      .map((part) => {
                        switch (part.type) {
                          case 'text': {
                            return part.text;
                          }
                          case 'image': {
                            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'UnsupportedFunctionalityError'
                            ]({
                              functionality: 'image-part',
                            });
                          }
                        }
                      })
                      .join(''),
                  });
                  break;
                }
                case 'assistant': {
                  let text = '';
                  const toolCalls = [];
                  for (const part of content) {
                    switch (part.type) {
                      case 'text': {
                        text += part.text;
                        break;
                      }
                      case 'redacted-reasoning':
                      case 'reasoning': {
                        break;
                      }
                      case 'tool-call': {
                        toolCalls.push({
                          id: part.toolCallId,
                          type: 'function',
                          function: {
                            name: part.toolName,
                            arguments: JSON.stringify(part.args),
                          },
                        });
                        break;
                      }
                      default: {
                        const _exhaustiveCheck = part;
                        throw new Error(`Unsupported part: ${_exhaustiveCheck}`);
                      }
                    }
                  }
                  messages.push({
                    role: 'assistant',
                    // note: this is a workaround for a Cohere API bug
                    // that requires content to be provided
                    // even if there are tool calls
                    content: text !== '' ? text : 'call tool',
                    tool_calls: toolCalls.length > 0 ? toolCalls : void 0,
                    tool_plan: void 0,
                  });
                  break;
                }
                case 'tool': {
                  messages.push(
                    ...content.map((toolResult) => ({
                      role: 'tool',
                      content: JSON.stringify(toolResult.result),
                      tool_call_id: toolResult.toolCallId,
                    })),
                  );
                  break;
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            return messages;
          }
          // src/map-cohere-finish-reason.ts
          function mapCohereFinishReason(finishReason) {
            switch (finishReason) {
              case 'COMPLETE':
              case 'STOP_SEQUENCE':
                return 'stop';
              case 'MAX_TOKENS':
                return 'length';
              case 'ERROR':
              case 'ERROR_LIMIT':
                return 'error';
              case 'ERROR_TOXIC':
                return 'content-filter';
              case 'USER_CANCEL':
                return 'other';
              default:
                return 'unknown';
            }
          }
          function prepareTools(mode) {
            var _a;
            const tools = ((_a = mode.tools) == null ? void 0 : _a.length) ? mode.tools : void 0;
            const toolWarnings = [];
            if (tools == null) {
              return {
                tools: void 0,
                tool_choice: void 0,
                toolWarnings,
              };
            }
            const cohereTools = [];
            for (const tool of tools) {
              if (tool.type === 'provider-defined') {
                toolWarnings.push({
                  type: 'unsupported-tool',
                  tool,
                });
              } else {
                cohereTools.push({
                  type: 'function',
                  function: {
                    name: tool.name,
                    description: tool.description,
                    parameters: tool.parameters,
                  },
                });
              }
            }
            const toolChoice = mode.toolChoice;
            if (toolChoice == null) {
              return {
                tools: cohereTools,
                tool_choice: void 0,
                toolWarnings,
              };
            }
            const type = toolChoice.type;
            switch (type) {
              case 'auto':
                return {
                  tools: cohereTools,
                  tool_choice: type,
                  toolWarnings,
                };
              case 'none':
                return {
                  tools: void 0,
                  tool_choice: 'any',
                  toolWarnings,
                };
              case 'required':
              case 'tool':
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'UnsupportedFunctionalityError'
                ]({
                  functionality: `Unsupported tool choice type: ${type}`,
                });
              default: {
                const _exhaustiveCheck = type;
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'UnsupportedFunctionalityError'
                ]({
                  functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,
                });
              }
            }
          }
          // src/cohere-chat-language-model.ts
          var CohereChatLanguageModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.defaultObjectGenerationMode = void 0;
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            getArgs({
              mode,
              prompt,
              maxTokens,
              temperature,
              topP,
              topK,
              frequencyPenalty,
              presencePenalty,
              stopSequences,
              responseFormat,
              seed,
            }) {
              const type = mode.type;
              const chatPrompt = convertToCohereChatPrompt(prompt);
              const baseArgs = {
                // model id:
                model: this.modelId,
                // model specific settings:
                // none
                // standardized settings:
                frequency_penalty: frequencyPenalty,
                presence_penalty: presencePenalty,
                max_tokens: maxTokens,
                temperature,
                p: topP,
                k: topK,
                seed,
                stop_sequences: stopSequences,
                // response format:
                response_format:
                  (responseFormat == null ? void 0 : responseFormat.type) === 'json'
                    ? {
                        type: 'json_object',
                        schema: responseFormat.schema,
                      }
                    : void 0,
                // messages:
                messages: chatPrompt,
              };
              switch (type) {
                case 'regular': {
                  const { tools, tool_choice, toolWarnings } = prepareTools(mode);
                  return {
                    ...baseArgs,
                    tools,
                    warnings: toolWarnings,
                  };
                }
                case 'object-json': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'object-json mode',
                  });
                }
                case 'object-tool': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'object-tool mode',
                  });
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: `Unsupported mode: ${_exhaustiveCheck}`,
                  });
                }
              }
            }
            concatenateMessageText(messages) {
              return messages
                .filter((message) => 'content' in message)
                .map((message) => message.content)
                .join('');
            }
            /*
  Remove `additionalProperties` and `$schema` from the `parameters` object of each tool.
  Though these are part of JSON schema, Cohere chokes if we include them in the request.
  */ // TODO(shaper): Look at defining a type to simplify the params here and a couple of other places.
            removeJsonSchemaExtras(tools) {
              return tools.map((tool) => {
                if (
                  tool.type === 'function' &&
                  tool.function.parameters &&
                  typeof tool.function.parameters === 'object'
                ) {
                  const { additionalProperties, $schema, ...restParameters } = tool.function.parameters;
                  return {
                    ...tool,
                    function: {
                      ...tool.function,
                      parameters: restParameters,
                    },
                  };
                }
                return tool;
              });
            }
            async doGenerate(options) {
              var _a, _b, _c, _d;
              const { warnings, ...args } = this.getArgs(options);
              args.tools = args.tools && this.removeJsonSchemaExtras(args.tools);
              const {
                responseHeaders,
                value: response,
                rawValue: rawResponse,
              } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/chat`,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: args,
                failedResponseHandler: cohereFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(cohereChatResponseSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages, ...rawSettings } = args;
              const text =
                (_c = (_b = (_a = response.message.content) == null ? void 0 : _a[0]) == null ? void 0 : _b.text) !=
                null
                  ? _c
                  : '';
              return {
                text,
                toolCalls: response.message.tool_calls
                  ? response.message.tool_calls.map((toolCall) => ({
                      toolCallId: toolCall.id,
                      toolName: toolCall.function.name,
                      // Cohere sometimes returns `null` for tool call arguments for tools
                      // defined as having no arguments.
                      args: toolCall.function.arguments.replace(/^null$/, '{}'),
                      toolCallType: 'function',
                    }))
                  : [],
                finishReason: mapCohereFinishReason(response.finish_reason),
                usage: {
                  promptTokens: response.usage.tokens.input_tokens,
                  completionTokens: response.usage.tokens.output_tokens,
                },
                rawCall: {
                  rawPrompt: {
                    messages,
                  },
                  rawSettings,
                },
                response: {
                  id: (_d = response.generation_id) != null ? _d : void 0,
                },
                rawResponse: {
                  headers: responseHeaders,
                  body: rawResponse,
                },
                warnings,
                request: {
                  body: JSON.stringify(args),
                },
              };
            }
            async doStream(options) {
              const { warnings, ...args } = this.getArgs(options);
              args.tools = args.tools && this.removeJsonSchemaExtras(args.tools);
              const body = {
                ...args,
                stream: true,
              };
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/chat`,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body,
                failedResponseHandler: cohereFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createEventSourceResponseHandler'
                ])(cohereChatChunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages, ...rawSettings } = args;
              let finishReason = 'unknown';
              let usage = {
                promptTokens: Number.NaN,
                completionTokens: Number.NaN,
              };
              let pendingToolCallDelta = {
                toolCallId: '',
                toolName: '',
                argsTextDelta: '',
              };
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      var _a, _b;
                      if (!chunk.success) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: chunk.error,
                        });
                        return;
                      }
                      const value = chunk.value;
                      const type = value.type;
                      switch (type) {
                        case 'content-delta': {
                          controller.enqueue({
                            type: 'text-delta',
                            textDelta: value.delta.message.content.text,
                          });
                          return;
                        }
                        case 'tool-call-start': {
                          pendingToolCallDelta = {
                            toolCallId: value.delta.message.tool_calls.id,
                            toolName: value.delta.message.tool_calls.function.name,
                            argsTextDelta: value.delta.message.tool_calls.function.arguments,
                          };
                          controller.enqueue({
                            type: 'tool-call-delta',
                            toolCallId: pendingToolCallDelta.toolCallId,
                            toolName: pendingToolCallDelta.toolName,
                            toolCallType: 'function',
                            argsTextDelta: pendingToolCallDelta.argsTextDelta,
                          });
                          return;
                        }
                        case 'tool-call-delta': {
                          pendingToolCallDelta.argsTextDelta += value.delta.message.tool_calls.function.arguments;
                          controller.enqueue({
                            type: 'tool-call-delta',
                            toolCallId: pendingToolCallDelta.toolCallId,
                            toolName: pendingToolCallDelta.toolName,
                            toolCallType: 'function',
                            argsTextDelta: value.delta.message.tool_calls.function.arguments,
                          });
                          return;
                        }
                        case 'tool-call-end': {
                          controller.enqueue({
                            type: 'tool-call',
                            toolCallId: pendingToolCallDelta.toolCallId,
                            toolName: pendingToolCallDelta.toolName,
                            toolCallType: 'function',
                            args: JSON.stringify(
                              JSON.parse(
                                ((_a = pendingToolCallDelta.argsTextDelta) == null ? void 0 : _a.trim()) || '{}',
                              ),
                            ),
                          });
                          pendingToolCallDelta = {
                            toolCallId: '',
                            toolName: '',
                            argsTextDelta: '',
                          };
                          return;
                        }
                        case 'message-start': {
                          controller.enqueue({
                            type: 'response-metadata',
                            id: (_b = value.id) != null ? _b : void 0,
                          });
                          return;
                        }
                        case 'message-end': {
                          finishReason = mapCohereFinishReason(value.delta.finish_reason);
                          const tokens = value.delta.usage.tokens;
                          usage = {
                            promptTokens: tokens.input_tokens,
                            completionTokens: tokens.output_tokens,
                          };
                        }
                        default: {
                          return;
                        }
                      }
                    },
                    flush(controller) {
                      controller.enqueue({
                        type: 'finish',
                        finishReason,
                        usage,
                      });
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt: {
                    messages,
                  },
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings,
                request: {
                  body: JSON.stringify(body),
                },
              };
            }
          };
          var cohereChatResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              generation_id:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              message:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].string(),
                  content:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .array(
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].object({
                          type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].string(),
                          text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].string(),
                        }),
                      )
                      .nullish(),
                  tool_plan:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .string()
                      .nullish(),
                  tool_calls:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .array(
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].object({
                          id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].string(),
                          type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].literal('function'),
                          function:
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].object({
                              name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].string(),
                              arguments:
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].string(),
                            }),
                        }),
                      )
                      .nullish(),
                }),
              finish_reason:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  billed_units:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      input_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                      output_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                    }),
                  tokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      input_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                      output_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                    }),
                }),
            });
          var cohereChatChunkSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].discriminatedUnion('type', [
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('citation-start'),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('citation-end'),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('content-start'),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('content-delta'),
                delta:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    message:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        content:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].string(),
                          }),
                      }),
                  }),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('content-end'),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('message-start'),
                id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('message-end'),
                delta:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    finish_reason:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    usage:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        tokens:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            input_tokens:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].number(),
                            output_tokens:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].number(),
                          }),
                      }),
                  }),
              }),
              // https://docs.cohere.com/v2/docs/streaming#tool-use-stream-events-for-tool-calling
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('tool-plan-delta'),
                delta:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    message:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        tool_plan:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].string(),
                      }),
                  }),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('tool-call-start'),
                delta:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    message:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        tool_calls:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].string(),
                            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].literal('function'),
                            function:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].string(),
                                arguments:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].string(),
                              }),
                          }),
                      }),
                  }),
              }),
              // A single tool call's `arguments` stream in chunks and must be accumulated
              // in a string and so the full tool object info can only be parsed once we see
              // `tool-call-end`.
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('tool-call-delta'),
                delta:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    message:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        tool_calls:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            function:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                arguments:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].string(),
                              }),
                          }),
                      }),
                  }),
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('tool-call-end'),
              }),
            ]);
          var CohereEmbeddingModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.maxEmbeddingsPerCall = 96;
              this.supportsParallelCalls = true;
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            async doEmbed({ values, headers, abortSignal }) {
              var _a;
              if (values.length > this.maxEmbeddingsPerCall) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'TooManyEmbeddingValuesForCallError'
                ]({
                  provider: this.provider,
                  modelId: this.modelId,
                  maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,
                  values,
                });
              }
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/embed`,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), headers),
                body: {
                  model: this.modelId,
                  // The AI SDK only supports 'float' embeddings which are also the only ones
                  // the Cohere API docs state are supported for all models.
                  // https://docs.cohere.com/v2/reference/embed#request.body.embedding_types
                  embedding_types: ['float'],
                  texts: values,
                  input_type: (_a = this.settings.inputType) != null ? _a : 'search_query',
                  truncate: this.settings.truncate,
                },
                failedResponseHandler: cohereFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(cohereTextEmbeddingResponseSchema),
                abortSignal,
                fetch: this.config.fetch,
              });
              return {
                embeddings: response.embeddings.float,
                usage: {
                  tokens: response.meta.billed_units.input_tokens,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
              };
            }
          };
          var cohereTextEmbeddingResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              embeddings:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  float:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].array(
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].array(
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                      ),
                    ),
                }),
              meta: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                billed_units:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    input_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  }),
              }),
            });
          // src/cohere-provider.ts
          function createCohere(options = {}) {
            var _a;
            const baseURL =
              (_a = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'withoutTrailingSlash'
              ])(options.baseURL)) != null
                ? _a
                : 'https://api.cohere.com/v2';
            const getHeaders = () => ({
              Authorization: `Bearer ${(0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'loadApiKey'
              ])({
                apiKey: options.apiKey,
                environmentVariableName: 'COHERE_API_KEY',
                description: 'Cohere',
              })}`,
              ...options.headers,
            });
            const createChatModel = (modelId, settings = {}) =>
              new CohereChatLanguageModel(modelId, settings, {
                provider: 'cohere.chat',
                baseURL,
                headers: getHeaders,
                fetch: options.fetch,
              });
            const createTextEmbeddingModel = (modelId, settings = {}) =>
              new CohereEmbeddingModel(modelId, settings, {
                provider: 'cohere.textEmbedding',
                baseURL,
                headers: getHeaders,
                fetch: options.fetch,
              });
            const provider = function (modelId, settings) {
              if (new.target) {
                throw new Error('The Cohere model function cannot be called with the new keyword.');
              }
              return createChatModel(modelId, settings);
            };
            provider.languageModel = createChatModel;
            provider.embedding = createTextEmbeddingModel;
            provider.textEmbeddingModel = createTextEmbeddingModel;
            return provider;
          }
          var cohere = createCohere();
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+openai-compatible@0.1.15_zod@3.24.2/node_modules/@ai-sdk/openai-compatible/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/openai-compatible-chat-language-model.ts
          __turbopack_context__.s({
            OpenAICompatibleChatLanguageModel: () => OpenAICompatibleChatLanguageModel,
            OpenAICompatibleCompletionLanguageModel: () => OpenAICompatibleCompletionLanguageModel,
            OpenAICompatibleEmbeddingModel: () => OpenAICompatibleEmbeddingModel,
            createOpenAICompatible: () => createOpenAICompatible,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.13_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs [app-client] (ecmascript)',
            );
          function getOpenAIMetadata(message) {
            var _a, _b;
            return (_b =
              (_a = message == null ? void 0 : message.providerMetadata) == null ? void 0 : _a.openaiCompatible) != null
              ? _b
              : {};
          }
          function convertToOpenAICompatibleChatMessages(prompt) {
            const messages = [];
            for (const { role, content, ...message } of prompt) {
              const metadata = getOpenAIMetadata({
                ...message,
              });
              switch (role) {
                case 'system': {
                  messages.push({
                    role: 'system',
                    content,
                    ...metadata,
                  });
                  break;
                }
                case 'user': {
                  if (content.length === 1 && content[0].type === 'text') {
                    messages.push({
                      role: 'user',
                      content: content[0].text,
                      ...getOpenAIMetadata(content[0]),
                    });
                    break;
                  }
                  messages.push({
                    role: 'user',
                    content: content.map((part) => {
                      var _a;
                      const partMetadata = getOpenAIMetadata(part);
                      switch (part.type) {
                        case 'text': {
                          return {
                            type: 'text',
                            text: part.text,
                            ...partMetadata,
                          };
                        }
                        case 'image': {
                          return {
                            type: 'image_url',
                            image_url: {
                              url:
                                part.image instanceof URL
                                  ? part.image.toString()
                                  : `data:${(_a = part.mimeType) != null ? _a : 'image/jpeg'};base64,${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__['convertUint8ArrayToBase64'])(part.image)}`,
                            },
                            ...partMetadata,
                          };
                        }
                        case 'file': {
                          throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'UnsupportedFunctionalityError'
                          ]({
                            functionality: 'File content parts in user messages',
                          });
                        }
                      }
                    }),
                    ...metadata,
                  });
                  break;
                }
                case 'assistant': {
                  let text = '';
                  const toolCalls = [];
                  for (const part of content) {
                    const partMetadata = getOpenAIMetadata(part);
                    switch (part.type) {
                      case 'text': {
                        text += part.text;
                        break;
                      }
                      case 'redacted-reasoning':
                      case 'reasoning': {
                        break;
                      }
                      case 'tool-call': {
                        toolCalls.push({
                          id: part.toolCallId,
                          type: 'function',
                          function: {
                            name: part.toolName,
                            arguments: JSON.stringify(part.args),
                          },
                          ...partMetadata,
                        });
                        break;
                      }
                      default: {
                        const _exhaustiveCheck = part;
                        throw new Error(`Unsupported part: ${_exhaustiveCheck}`);
                      }
                    }
                  }
                  messages.push({
                    role: 'assistant',
                    content: text,
                    tool_calls: toolCalls.length > 0 ? toolCalls : void 0,
                    ...metadata,
                  });
                  break;
                }
                case 'tool': {
                  for (const toolResponse of content) {
                    const toolResponseMetadata = getOpenAIMetadata(toolResponse);
                    messages.push({
                      role: 'tool',
                      tool_call_id: toolResponse.toolCallId,
                      content: JSON.stringify(toolResponse.result),
                      ...toolResponseMetadata,
                    });
                  }
                  break;
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            return messages;
          }
          // src/get-response-metadata.ts
          function getResponseMetadata({ id, model, created }) {
            return {
              id: id != null ? id : void 0,
              modelId: model != null ? model : void 0,
              timestamp: created != null ? new Date(created * 1e3) : void 0,
            };
          }
          // src/map-openai-compatible-finish-reason.ts
          function mapOpenAICompatibleFinishReason(finishReason) {
            switch (finishReason) {
              case 'stop':
                return 'stop';
              case 'length':
                return 'length';
              case 'content_filter':
                return 'content-filter';
              case 'function_call':
              case 'tool_calls':
                return 'tool-calls';
              default:
                return 'unknown';
            }
          }
          var openaiCompatibleErrorDataSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              error:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  message:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                  // The additional information below is handled loosely to support
                  // OpenAI-compatible providers that have slightly different error
                  // responses:
                  type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .string()
                    .nullish(),
                  param:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .any()
                      .nullish(),
                  code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .union([
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    ])
                    .nullish(),
                }),
            });
          var defaultOpenAICompatibleErrorStructure = {
            errorSchema: openaiCompatibleErrorDataSchema,
            errorToMessage: (data) => data.error.message,
          };
          function prepareTools({ mode, structuredOutputs }) {
            var _a;
            const tools = ((_a = mode.tools) == null ? void 0 : _a.length) ? mode.tools : void 0;
            const toolWarnings = [];
            if (tools == null) {
              return {
                tools: void 0,
                tool_choice: void 0,
                toolWarnings,
              };
            }
            const toolChoice = mode.toolChoice;
            const openaiCompatTools = [];
            for (const tool of tools) {
              if (tool.type === 'provider-defined') {
                toolWarnings.push({
                  type: 'unsupported-tool',
                  tool,
                });
              } else {
                openaiCompatTools.push({
                  type: 'function',
                  function: {
                    name: tool.name,
                    description: tool.description,
                    parameters: tool.parameters,
                  },
                });
              }
            }
            if (toolChoice == null) {
              return {
                tools: openaiCompatTools,
                tool_choice: void 0,
                toolWarnings,
              };
            }
            const type = toolChoice.type;
            switch (type) {
              case 'auto':
              case 'none':
              case 'required':
                return {
                  tools: openaiCompatTools,
                  tool_choice: type,
                  toolWarnings,
                };
              case 'tool':
                return {
                  tools: openaiCompatTools,
                  tool_choice: {
                    type: 'function',
                    function: {
                      name: toolChoice.toolName,
                    },
                  },
                  toolWarnings,
                };
              default: {
                const _exhaustiveCheck = type;
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'UnsupportedFunctionalityError'
                ]({
                  functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,
                });
              }
            }
          }
          // src/openai-compatible-chat-language-model.ts
          var OpenAICompatibleChatLanguageModel = class {
            // type inferred via constructor
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              var _a, _b;
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
              const errorStructure = (_a = config.errorStructure) != null ? _a : defaultOpenAICompatibleErrorStructure;
              this.chunkSchema = createOpenAICompatibleChatChunkSchema(errorStructure.errorSchema);
              this.failedResponseHandler = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'createJsonErrorResponseHandler'
              ])(errorStructure);
              this.supportsStructuredOutputs = (_b = config.supportsStructuredOutputs) != null ? _b : false;
            }
            get defaultObjectGenerationMode() {
              return this.config.defaultObjectGenerationMode;
            }
            get provider() {
              return this.config.provider;
            }
            get providerOptionsName() {
              return this.config.provider.split('.')[0].trim();
            }
            getArgs({
              mode,
              prompt,
              maxTokens,
              temperature,
              topP,
              topK,
              frequencyPenalty,
              presencePenalty,
              providerMetadata,
              stopSequences,
              responseFormat,
              seed,
            }) {
              var _a, _b;
              const type = mode.type;
              const warnings = [];
              if (topK != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'topK',
                });
              }
              if (
                (responseFormat == null ? void 0 : responseFormat.type) === 'json' &&
                responseFormat.schema != null &&
                !this.supportsStructuredOutputs
              ) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'responseFormat',
                  details: 'JSON response format schema is only supported with structuredOutputs',
                });
              }
              const baseArgs = {
                // model id:
                model: this.modelId,
                // model specific settings:
                user: this.settings.user,
                // standardized settings:
                max_tokens: maxTokens,
                temperature,
                top_p: topP,
                frequency_penalty: frequencyPenalty,
                presence_penalty: presencePenalty,
                response_format:
                  (responseFormat == null ? void 0 : responseFormat.type) === 'json'
                    ? this.supportsStructuredOutputs === true && responseFormat.schema != null
                      ? {
                          type: 'json_schema',
                          json_schema: {
                            schema: responseFormat.schema,
                            name: (_a = responseFormat.name) != null ? _a : 'response',
                            description: responseFormat.description,
                          },
                        }
                      : {
                          type: 'json_object',
                        }
                    : void 0,
                stop: stopSequences,
                seed,
                ...(providerMetadata == null ? void 0 : providerMetadata[this.providerOptionsName]),
                // messages:
                messages: convertToOpenAICompatibleChatMessages(prompt),
              };
              switch (type) {
                case 'regular': {
                  const { tools, tool_choice, toolWarnings } = prepareTools({
                    mode,
                    structuredOutputs: this.supportsStructuredOutputs,
                  });
                  return {
                    args: {
                      ...baseArgs,
                      tools,
                      tool_choice,
                    },
                    warnings: [...warnings, ...toolWarnings],
                  };
                }
                case 'object-json': {
                  return {
                    args: {
                      ...baseArgs,
                      response_format:
                        this.supportsStructuredOutputs === true && mode.schema != null
                          ? {
                              type: 'json_schema',
                              json_schema: {
                                schema: mode.schema,
                                name: (_b = mode.name) != null ? _b : 'response',
                                description: mode.description,
                              },
                            }
                          : {
                              type: 'json_object',
                            },
                    },
                    warnings,
                  };
                }
                case 'object-tool': {
                  return {
                    args: {
                      ...baseArgs,
                      tool_choice: {
                        type: 'function',
                        function: {
                          name: mode.tool.name,
                        },
                      },
                      tools: [
                        {
                          type: 'function',
                          function: {
                            name: mode.tool.name,
                            description: mode.tool.description,
                            parameters: mode.tool.parameters,
                          },
                        },
                      ],
                    },
                    warnings,
                  };
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            async doGenerate(options) {
              var _a, _b, _c, _d, _e, _f, _g, _h, _i;
              const { args, warnings } = this.getArgs({
                ...options,
              });
              const body = JSON.stringify(args);
              const {
                responseHeaders,
                value: responseBody,
                rawValue: rawResponse,
              } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/chat/completions',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: args,
                failedResponseHandler: this.failedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(OpenAICompatibleChatResponseSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages: rawPrompt, ...rawSettings } = args;
              const choice = responseBody.choices[0];
              const providerMetadata =
                (_b = (_a = this.config.metadataExtractor) == null ? void 0 : _a.extractMetadata) == null
                  ? void 0
                  : _b.call(_a, {
                      parsedBody: rawResponse,
                    });
              return {
                text: (_c = choice.message.content) != null ? _c : void 0,
                reasoning: (_d = choice.message.reasoning_content) != null ? _d : void 0,
                toolCalls:
                  (_e = choice.message.tool_calls) == null
                    ? void 0
                    : _e.map((toolCall) => {
                        var _a2;
                        return {
                          toolCallType: 'function',
                          toolCallId:
                            (_a2 = toolCall.id) != null
                              ? _a2
                              : (0,
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'generateId'
                                ])(),
                          toolName: toolCall.function.name,
                          args: toolCall.function.arguments,
                        };
                      }),
                finishReason: mapOpenAICompatibleFinishReason(choice.finish_reason),
                usage: {
                  promptTokens: (_g = (_f = responseBody.usage) == null ? void 0 : _f.prompt_tokens) != null ? _g : NaN,
                  completionTokens:
                    (_i = (_h = responseBody.usage) == null ? void 0 : _h.completion_tokens) != null ? _i : NaN,
                },
                ...(providerMetadata && {
                  providerMetadata,
                }),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                  body: rawResponse,
                },
                response: getResponseMetadata(responseBody),
                warnings,
                request: {
                  body,
                },
              };
            }
            async doStream(options) {
              var _a;
              if (this.settings.simulateStreaming) {
                const result = await this.doGenerate(options);
                const simulatedStream = new ReadableStream({
                  start(controller) {
                    controller.enqueue({
                      type: 'response-metadata',
                      ...result.response,
                    });
                    if (result.reasoning) {
                      if (Array.isArray(result.reasoning)) {
                        for (const part of result.reasoning) {
                          if (part.type === 'text') {
                            controller.enqueue({
                              type: 'reasoning',
                              textDelta: part.text,
                            });
                          }
                        }
                      } else {
                        controller.enqueue({
                          type: 'reasoning',
                          textDelta: result.reasoning,
                        });
                      }
                    }
                    if (result.text) {
                      controller.enqueue({
                        type: 'text-delta',
                        textDelta: result.text,
                      });
                    }
                    if (result.toolCalls) {
                      for (const toolCall of result.toolCalls) {
                        controller.enqueue({
                          type: 'tool-call',
                          ...toolCall,
                        });
                      }
                    }
                    controller.enqueue({
                      type: 'finish',
                      finishReason: result.finishReason,
                      usage: result.usage,
                      logprobs: result.logprobs,
                      providerMetadata: result.providerMetadata,
                    });
                    controller.close();
                  },
                });
                return {
                  stream: simulatedStream,
                  rawCall: result.rawCall,
                  rawResponse: result.rawResponse,
                  warnings: result.warnings,
                };
              }
              const { args, warnings } = this.getArgs({
                ...options,
              });
              const body = JSON.stringify({
                ...args,
                stream: true,
              });
              const metadataExtractor =
                (_a = this.config.metadataExtractor) == null ? void 0 : _a.createStreamExtractor();
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/chat/completions',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: {
                  ...args,
                  stream: true,
                },
                failedResponseHandler: this.failedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createEventSourceResponseHandler'
                ])(this.chunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages: rawPrompt, ...rawSettings } = args;
              const toolCalls = [];
              let finishReason = 'unknown';
              let usage = {
                promptTokens: void 0,
                completionTokens: void 0,
              };
              let isFirstChunk = true;
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    // TODO we lost type safety on Chunk, most likely due to the error schema. MUST FIX
                    transform(chunk, controller) {
                      var _a2, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;
                      if (!chunk.success) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: chunk.error,
                        });
                        return;
                      }
                      const value = chunk.value;
                      metadataExtractor == null ? void 0 : metadataExtractor.processChunk(chunk.rawValue);
                      if ('error' in value) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: value.error.message,
                        });
                        return;
                      }
                      if (isFirstChunk) {
                        isFirstChunk = false;
                        controller.enqueue({
                          type: 'response-metadata',
                          ...getResponseMetadata(value),
                        });
                      }
                      if (value.usage != null) {
                        usage = {
                          promptTokens: (_a2 = value.usage.prompt_tokens) != null ? _a2 : void 0,
                          completionTokens: (_b = value.usage.completion_tokens) != null ? _b : void 0,
                        };
                      }
                      const choice = value.choices[0];
                      if ((choice == null ? void 0 : choice.finish_reason) != null) {
                        finishReason = mapOpenAICompatibleFinishReason(choice.finish_reason);
                      }
                      if ((choice == null ? void 0 : choice.delta) == null) {
                        return;
                      }
                      const delta = choice.delta;
                      if (delta.reasoning_content != null) {
                        controller.enqueue({
                          type: 'reasoning',
                          textDelta: delta.reasoning_content,
                        });
                      }
                      if (delta.content != null) {
                        controller.enqueue({
                          type: 'text-delta',
                          textDelta: delta.content,
                        });
                      }
                      if (delta.tool_calls != null) {
                        for (const toolCallDelta of delta.tool_calls) {
                          const index = toolCallDelta.index;
                          if (toolCalls[index] == null) {
                            if (toolCallDelta.type !== 'function') {
                              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'InvalidResponseDataError'
                              ]({
                                data: toolCallDelta,
                                message: `Expected 'function' type.`,
                              });
                            }
                            if (toolCallDelta.id == null) {
                              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'InvalidResponseDataError'
                              ]({
                                data: toolCallDelta,
                                message: `Expected 'id' to be a string.`,
                              });
                            }
                            if (((_c = toolCallDelta.function) == null ? void 0 : _c.name) == null) {
                              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'InvalidResponseDataError'
                              ]({
                                data: toolCallDelta,
                                message: `Expected 'function.name' to be a string.`,
                              });
                            }
                            toolCalls[index] = {
                              id: toolCallDelta.id,
                              type: 'function',
                              function: {
                                name: toolCallDelta.function.name,
                                arguments: (_d = toolCallDelta.function.arguments) != null ? _d : '',
                              },
                              hasFinished: false,
                            };
                            const toolCall2 = toolCalls[index];
                            if (
                              ((_e = toolCall2.function) == null ? void 0 : _e.name) != null &&
                              ((_f = toolCall2.function) == null ? void 0 : _f.arguments) != null
                            ) {
                              if (toolCall2.function.arguments.length > 0) {
                                controller.enqueue({
                                  type: 'tool-call-delta',
                                  toolCallType: 'function',
                                  toolCallId: toolCall2.id,
                                  toolName: toolCall2.function.name,
                                  argsTextDelta: toolCall2.function.arguments,
                                });
                              }
                              if (
                                (0,
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'isParsableJson'
                                ])(toolCall2.function.arguments)
                              ) {
                                controller.enqueue({
                                  type: 'tool-call',
                                  toolCallType: 'function',
                                  toolCallId:
                                    (_g = toolCall2.id) != null
                                      ? _g
                                      : (0,
                                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                          'generateId'
                                        ])(),
                                  toolName: toolCall2.function.name,
                                  args: toolCall2.function.arguments,
                                });
                                toolCall2.hasFinished = true;
                              }
                            }
                            continue;
                          }
                          const toolCall = toolCalls[index];
                          if (toolCall.hasFinished) {
                            continue;
                          }
                          if (((_h = toolCallDelta.function) == null ? void 0 : _h.arguments) != null) {
                            toolCall.function.arguments +=
                              (_j = (_i = toolCallDelta.function) == null ? void 0 : _i.arguments) != null ? _j : '';
                          }
                          controller.enqueue({
                            type: 'tool-call-delta',
                            toolCallType: 'function',
                            toolCallId: toolCall.id,
                            toolName: toolCall.function.name,
                            argsTextDelta: (_k = toolCallDelta.function.arguments) != null ? _k : '',
                          });
                          if (
                            ((_l = toolCall.function) == null ? void 0 : _l.name) != null &&
                            ((_m = toolCall.function) == null ? void 0 : _m.arguments) != null &&
                            (0,
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'isParsableJson'
                            ])(toolCall.function.arguments)
                          ) {
                            controller.enqueue({
                              type: 'tool-call',
                              toolCallType: 'function',
                              toolCallId:
                                (_n = toolCall.id) != null
                                  ? _n
                                  : (0,
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'generateId'
                                    ])(),
                              toolName: toolCall.function.name,
                              args: toolCall.function.arguments,
                            });
                            toolCall.hasFinished = true;
                          }
                        }
                      }
                    },
                    flush(controller) {
                      var _a2, _b;
                      const metadata = metadataExtractor == null ? void 0 : metadataExtractor.buildMetadata();
                      controller.enqueue({
                        type: 'finish',
                        finishReason,
                        usage: {
                          promptTokens: (_a2 = usage.promptTokens) != null ? _a2 : NaN,
                          completionTokens: (_b = usage.completionTokens) != null ? _b : NaN,
                        },
                        ...(metadata && {
                          providerMetadata: metadata,
                        }),
                      });
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings,
                request: {
                  body,
                },
              };
            }
          };
          var OpenAICompatibleChatResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .nullish(),
              created:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .nullish(),
              model:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              choices:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    message:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .literal('assistant')
                          .nullish(),
                        content:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .string()
                            .nullish(),
                        reasoning_content:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .string()
                            .nullish(),
                        tool_calls:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .array(
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ]
                                  .string()
                                  .nullish(),
                                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].literal('function'),
                                function:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].object({
                                    name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ].string(),
                                    arguments:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].string(),
                                  }),
                              }),
                            )
                            .nullish(),
                      }),
                    finish_reason:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .string()
                        .nullish(),
                  }),
                ),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    prompt_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .number()
                        .nullish(),
                    completion_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .number()
                        .nullish(),
                  })
                  .nullish(),
            });
          var createOpenAICompatibleChatChunkSchema = (errorSchema) =>
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].union([
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
                created:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .number()
                    .nullish(),
                model:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .string()
                    .nullish(),
                choices:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      delta:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .object({
                            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ]
                              .enum(['assistant'])
                              .nullish(),
                            content:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .string()
                                .nullish(),
                            reasoning_content:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .string()
                                .nullish(),
                            tool_calls:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .array(
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].object({
                                    index:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].number(),
                                    id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ]
                                      .string()
                                      .nullish(),
                                    type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ]
                                      .literal('function')
                                      .optional(),
                                    function:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].object({
                                        name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                          'z'
                                        ]
                                          .string()
                                          .nullish(),
                                        arguments:
                                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                            'z'
                                          ]
                                            .string()
                                            .nullish(),
                                      }),
                                  }),
                                )
                                .nullish(),
                          })
                          .nullish(),
                      finish_reason:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullish(),
                    }),
                  ),
                usage:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .object({
                      prompt_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .number()
                          .nullish(),
                      completion_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .number()
                          .nullish(),
                    })
                    .nullish(),
              }),
              errorSchema,
            ]);
          function convertToOpenAICompatibleCompletionPrompt({
            prompt,
            inputFormat,
            user = 'user',
            assistant = 'assistant',
          }) {
            if (
              inputFormat === 'prompt' &&
              prompt.length === 1 &&
              prompt[0].role === 'user' &&
              prompt[0].content.length === 1 &&
              prompt[0].content[0].type === 'text'
            ) {
              return {
                prompt: prompt[0].content[0].text,
              };
            }
            let text = '';
            if (prompt[0].role === 'system') {
              text += `${prompt[0].content}

`;
              prompt = prompt.slice(1);
            }
            for (const { role, content } of prompt) {
              switch (role) {
                case 'system': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'InvalidPromptError'
                  ]({
                    message: 'Unexpected system message in prompt: ${content}',
                    prompt,
                  });
                }
                case 'user': {
                  const userMessage = content
                    .map((part) => {
                      switch (part.type) {
                        case 'text': {
                          return part.text;
                        }
                        case 'image': {
                          throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'UnsupportedFunctionalityError'
                          ]({
                            functionality: 'images',
                          });
                        }
                      }
                    })
                    .join('');
                  text += `${user}:
${userMessage}

`;
                  break;
                }
                case 'assistant': {
                  const assistantMessage = content
                    .map((part) => {
                      switch (part.type) {
                        case 'text': {
                          return part.text;
                        }
                        case 'tool-call': {
                          throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'UnsupportedFunctionalityError'
                          ]({
                            functionality: 'tool-call messages',
                          });
                        }
                      }
                    })
                    .join('');
                  text += `${assistant}:
${assistantMessage}

`;
                  break;
                }
                case 'tool': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'tool messages',
                  });
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            text += `${assistant}:
`;
            return {
              prompt: text,
              stopSequences: [
                `
${user}:`,
              ],
            };
          }
          // src/openai-compatible-completion-language-model.ts
          var OpenAICompatibleCompletionLanguageModel = class {
            // type inferred via constructor
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.defaultObjectGenerationMode = void 0;
              var _a;
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
              const errorStructure = (_a = config.errorStructure) != null ? _a : defaultOpenAICompatibleErrorStructure;
              this.chunkSchema = createOpenAICompatibleCompletionChunkSchema(errorStructure.errorSchema);
              this.failedResponseHandler = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'createJsonErrorResponseHandler'
              ])(errorStructure);
            }
            get provider() {
              return this.config.provider;
            }
            get providerOptionsName() {
              return this.config.provider.split('.')[0].trim();
            }
            getArgs({
              mode,
              inputFormat,
              prompt,
              maxTokens,
              temperature,
              topP,
              topK,
              frequencyPenalty,
              presencePenalty,
              stopSequences: userStopSequences,
              responseFormat,
              seed,
              providerMetadata,
            }) {
              var _a;
              const type = mode.type;
              const warnings = [];
              if (topK != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'topK',
                });
              }
              if (responseFormat != null && responseFormat.type !== 'text') {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'responseFormat',
                  details: 'JSON response format is not supported.',
                });
              }
              const { prompt: completionPrompt, stopSequences } = convertToOpenAICompatibleCompletionPrompt({
                prompt,
                inputFormat,
              });
              const stop = [
                ...(stopSequences != null ? stopSequences : []),
                ...(userStopSequences != null ? userStopSequences : []),
              ];
              const baseArgs = {
                // model id:
                model: this.modelId,
                // model specific settings:
                echo: this.settings.echo,
                logit_bias: this.settings.logitBias,
                suffix: this.settings.suffix,
                user: this.settings.user,
                // standardized settings:
                max_tokens: maxTokens,
                temperature,
                top_p: topP,
                frequency_penalty: frequencyPenalty,
                presence_penalty: presencePenalty,
                seed,
                ...(providerMetadata == null ? void 0 : providerMetadata[this.providerOptionsName]),
                // prompt:
                prompt: completionPrompt,
                // stop sequences:
                stop: stop.length > 0 ? stop : void 0,
              };
              switch (type) {
                case 'regular': {
                  if ((_a = mode.tools) == null ? void 0 : _a.length) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'UnsupportedFunctionalityError'
                    ]({
                      functionality: 'tools',
                    });
                  }
                  if (mode.toolChoice) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'UnsupportedFunctionalityError'
                    ]({
                      functionality: 'toolChoice',
                    });
                  }
                  return {
                    args: baseArgs,
                    warnings,
                  };
                }
                case 'object-json': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'object-json mode',
                  });
                }
                case 'object-tool': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'object-tool mode',
                  });
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            async doGenerate(options) {
              var _a, _b, _c, _d;
              const { args, warnings } = this.getArgs(options);
              const {
                responseHeaders,
                value: response,
                rawValue: rawResponse,
              } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/completions',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: args,
                failedResponseHandler: this.failedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(openaiCompatibleCompletionResponseSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { prompt: rawPrompt, ...rawSettings } = args;
              const choice = response.choices[0];
              return {
                text: choice.text,
                usage: {
                  promptTokens: (_b = (_a = response.usage) == null ? void 0 : _a.prompt_tokens) != null ? _b : NaN,
                  completionTokens:
                    (_d = (_c = response.usage) == null ? void 0 : _c.completion_tokens) != null ? _d : NaN,
                },
                finishReason: mapOpenAICompatibleFinishReason(choice.finish_reason),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                  body: rawResponse,
                },
                response: getResponseMetadata(response),
                warnings,
                request: {
                  body: JSON.stringify(args),
                },
              };
            }
            async doStream(options) {
              const { args, warnings } = this.getArgs(options);
              const body = {
                ...args,
                stream: true,
              };
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/completions',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body,
                failedResponseHandler: this.failedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createEventSourceResponseHandler'
                ])(this.chunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { prompt: rawPrompt, ...rawSettings } = args;
              let finishReason = 'unknown';
              let usage = {
                promptTokens: Number.NaN,
                completionTokens: Number.NaN,
              };
              let isFirstChunk = true;
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      if (!chunk.success) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: chunk.error,
                        });
                        return;
                      }
                      const value = chunk.value;
                      if ('error' in value) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: value.error,
                        });
                        return;
                      }
                      if (isFirstChunk) {
                        isFirstChunk = false;
                        controller.enqueue({
                          type: 'response-metadata',
                          ...getResponseMetadata(value),
                        });
                      }
                      if (value.usage != null) {
                        usage = {
                          promptTokens: value.usage.prompt_tokens,
                          completionTokens: value.usage.completion_tokens,
                        };
                      }
                      const choice = value.choices[0];
                      if ((choice == null ? void 0 : choice.finish_reason) != null) {
                        finishReason = mapOpenAICompatibleFinishReason(choice.finish_reason);
                      }
                      if ((choice == null ? void 0 : choice.text) != null) {
                        controller.enqueue({
                          type: 'text-delta',
                          textDelta: choice.text,
                        });
                      }
                    },
                    flush(controller) {
                      controller.enqueue({
                        type: 'finish',
                        finishReason,
                        usage,
                      });
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings,
                request: {
                  body: JSON.stringify(body),
                },
              };
            }
          };
          var openaiCompatibleCompletionResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .nullish(),
              created:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .nullish(),
              model:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              choices:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                    finish_reason:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                  }),
                ),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    prompt_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    completion_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  })
                  .nullish(),
            });
          var createOpenAICompatibleCompletionChunkSchema = (errorSchema) =>
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].union([
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
                created:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .number()
                    .nullish(),
                model:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .string()
                    .nullish(),
                choices:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                      finish_reason:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullish(),
                      index:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                    }),
                  ),
                usage:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .object({
                      prompt_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                      completion_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                    })
                    .nullish(),
              }),
              errorSchema,
            ]);
          var OpenAICompatibleEmbeddingModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            get maxEmbeddingsPerCall() {
              var _a;
              return (_a = this.config.maxEmbeddingsPerCall) != null ? _a : 2048;
            }
            get supportsParallelCalls() {
              var _a;
              return (_a = this.config.supportsParallelCalls) != null ? _a : true;
            }
            async doEmbed({ values, headers, abortSignal }) {
              var _a;
              if (values.length > this.maxEmbeddingsPerCall) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'TooManyEmbeddingValuesForCallError'
                ]({
                  provider: this.provider,
                  modelId: this.modelId,
                  maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,
                  values,
                });
              }
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/embeddings',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), headers),
                body: {
                  model: this.modelId,
                  input: values,
                  encoding_format: 'float',
                  dimensions: this.settings.dimensions,
                  user: this.settings.user,
                },
                failedResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonErrorResponseHandler'
                ])((_a = this.config.errorStructure) != null ? _a : defaultOpenAICompatibleErrorStructure),
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(openaiTextEmbeddingResponseSchema),
                abortSignal,
                fetch: this.config.fetch,
              });
              return {
                embeddings: response.data.map((item) => item.embedding),
                usage: response.usage
                  ? {
                      tokens: response.usage.prompt_tokens,
                    }
                  : void 0,
                rawResponse: {
                  headers: responseHeaders,
                },
              };
            }
          };
          var openaiTextEmbeddingResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              data: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].array(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  embedding:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].array(
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    ),
                }),
              ),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    prompt_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  })
                  .nullish(),
            });
          function createOpenAICompatible(options) {
            const baseURL = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'withoutTrailingSlash'
            ])(options.baseURL);
            const providerName = options.name;
            const getHeaders = () => ({
              ...(options.apiKey && {
                Authorization: `Bearer ${options.apiKey}`,
              }),
              ...options.headers,
            });
            const getCommonModelConfig = (modelType) => ({
              provider: `${providerName}.${modelType}`,
              url: ({ path }) => {
                const url = new URL(`${baseURL}${path}`);
                if (options.queryParams) {
                  url.search = new URLSearchParams(options.queryParams).toString();
                }
                return url.toString();
              },
              headers: getHeaders,
              fetch: options.fetch,
            });
            const createLanguageModel = (modelId, settings = {}) => createChatModel(modelId, settings);
            const createChatModel = (modelId, settings = {}) =>
              new OpenAICompatibleChatLanguageModel(modelId, settings, {
                ...getCommonModelConfig('chat'),
                defaultObjectGenerationMode: 'tool',
              });
            const createCompletionModel = (modelId, settings = {}) =>
              new OpenAICompatibleCompletionLanguageModel(modelId, settings, getCommonModelConfig('completion'));
            const createEmbeddingModel = (modelId, settings = {}) =>
              new OpenAICompatibleEmbeddingModel(modelId, settings, getCommonModelConfig('embedding'));
            const provider = (modelId, settings) => createLanguageModel(modelId, settings);
            provider.languageModel = createLanguageModel;
            provider.chatModel = createChatModel;
            provider.completionModel = createCompletionModel;
            provider.textEmbeddingModel = createEmbeddingModel;
            return provider;
          }
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+deepseek@0.1.15_zod@3.24.2/node_modules/@ai-sdk/deepseek/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/deepseek-provider.ts
          __turbopack_context__.s({
            createDeepSeek: () => createDeepSeek,
            deepseek: () => deepseek,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$openai$2d$compatible$40$0$2e$1$2e$15_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$openai$2d$compatible$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+openai-compatible@0.1.15_zod@3.24.2/node_modules/@ai-sdk/openai-compatible/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.13_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs [app-client] (ecmascript)',
            );
          var buildDeepseekMetadata = (usage) => {
            var _a, _b;
            return usage == null
              ? void 0
              : {
                  deepseek: {
                    promptCacheHitTokens: (_a = usage.prompt_cache_hit_tokens) != null ? _a : NaN,
                    promptCacheMissTokens: (_b = usage.prompt_cache_miss_tokens) != null ? _b : NaN,
                  },
                };
          };
          var deepSeekMetadataExtractor = {
            extractMetadata: ({ parsedBody }) => {
              const parsed = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'safeValidateTypes'
              ])({
                value: parsedBody,
                schema: deepSeekResponseSchema,
              });
              return !parsed.success || parsed.value.usage == null ? void 0 : buildDeepseekMetadata(parsed.value.usage);
            },
            createStreamExtractor: () => {
              let usage;
              return {
                processChunk: (chunk) => {
                  var _a, _b;
                  const parsed = (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'safeValidateTypes'
                  ])({
                    value: chunk,
                    schema: deepSeekStreamChunkSchema,
                  });
                  if (
                    parsed.success &&
                    ((_b = (_a = parsed.value.choices) == null ? void 0 : _a[0]) == null
                      ? void 0
                      : _b.finish_reason) === 'stop' &&
                    parsed.value.usage
                  ) {
                    usage = parsed.value.usage;
                  }
                },
                buildMetadata: () => buildDeepseekMetadata(usage),
              };
            },
          };
          var deepSeekUsageSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              prompt_cache_hit_tokens:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .nullish(),
              prompt_cache_miss_tokens:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .nullish(),
            });
          var deepSeekResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              usage: deepSeekUsageSchema.nullish(),
            });
          var deepSeekStreamChunkSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              choices:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      finish_reason:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullish(),
                    }),
                  )
                  .nullish(),
              usage: deepSeekUsageSchema.nullish(),
            });
          // src/deepseek-provider.ts
          function createDeepSeek(options = {}) {
            var _a;
            const baseURL = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'withoutTrailingSlash'
            ])((_a = options.baseURL) != null ? _a : 'https://api.deepseek.com/v1');
            const getHeaders = () => ({
              Authorization: `Bearer ${(0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'loadApiKey'
              ])({
                apiKey: options.apiKey,
                environmentVariableName: 'DEEPSEEK_API_KEY',
                description: 'DeepSeek API key',
              })}`,
              ...options.headers,
            });
            const createLanguageModel = (modelId, settings = {}) => {
              return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$openai$2d$compatible$40$0$2e$1$2e$15_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$openai$2d$compatible$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'OpenAICompatibleChatLanguageModel'
              ](modelId, settings, {
                provider: `deepseek.chat`,
                url: ({ path }) => `${baseURL}${path}`,
                headers: getHeaders,
                fetch: options.fetch,
                defaultObjectGenerationMode: 'json',
                metadataExtractor: deepSeekMetadataExtractor,
              });
            };
            const provider = (modelId, settings) => createLanguageModel(modelId, settings);
            provider.languageModel = createLanguageModel;
            provider.chat = createLanguageModel;
            provider.textEmbeddingModel = (modelId) => {
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'NoSuchModelError'
              ]({
                modelId,
                modelType: 'textEmbeddingModel',
              });
            };
            return provider;
          }
          var deepseek = createDeepSeek();
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+google@1.1.25_zod@3.24.2/node_modules/@ai-sdk/google/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/google-provider.ts
          __turbopack_context__.s({
            createGoogleGenerativeAI: () => createGoogleGenerativeAI,
            google: () => google,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.13_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs [app-client] (ecmascript)',
            );
          // src/convert-to-google-generative-ai-messages.ts
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          // src/convert-json-schema-to-openapi-schema.ts
          function convertJSONSchemaToOpenAPISchema(jsonSchema) {
            if (isEmptyObjectSchema(jsonSchema)) {
              return void 0;
            }
            if (typeof jsonSchema === 'boolean') {
              return {
                type: 'boolean',
                properties: {},
              };
            }
            const {
              type,
              description,
              required,
              properties,
              items,
              allOf,
              anyOf,
              oneOf,
              format,
              const: constValue,
              minLength,
              enum: enumValues,
            } = jsonSchema;
            const result = {};
            if (description) result.description = description;
            if (required) result.required = required;
            if (format) result.format = format;
            if (constValue !== void 0) {
              result.enum = [constValue];
            }
            if (type) {
              if (Array.isArray(type)) {
                if (type.includes('null')) {
                  result.type = type.filter((t) => t !== 'null')[0];
                  result.nullable = true;
                } else {
                  result.type = type;
                }
              } else if (type === 'null') {
                result.type = 'null';
              } else {
                result.type = type;
              }
            }
            if (enumValues !== void 0) {
              result.enum = enumValues;
            }
            if (properties != null) {
              result.properties = Object.entries(properties).reduce((acc, [key, value]) => {
                acc[key] = convertJSONSchemaToOpenAPISchema(value);
                return acc;
              }, {});
            }
            if (items) {
              result.items = Array.isArray(items)
                ? items.map(convertJSONSchemaToOpenAPISchema)
                : convertJSONSchemaToOpenAPISchema(items);
            }
            if (allOf) {
              result.allOf = allOf.map(convertJSONSchemaToOpenAPISchema);
            }
            if (anyOf) {
              if (
                anyOf.some((schema) => typeof schema === 'object' && (schema == null ? void 0 : schema.type) === 'null')
              ) {
                const nonNullSchemas = anyOf.filter(
                  (schema) => !(typeof schema === 'object' && (schema == null ? void 0 : schema.type) === 'null'),
                );
                if (nonNullSchemas.length === 1) {
                  const converted = convertJSONSchemaToOpenAPISchema(nonNullSchemas[0]);
                  if (typeof converted === 'object') {
                    result.nullable = true;
                    Object.assign(result, converted);
                  }
                } else {
                  result.anyOf = nonNullSchemas.map(convertJSONSchemaToOpenAPISchema);
                  result.nullable = true;
                }
              } else {
                result.anyOf = anyOf.map(convertJSONSchemaToOpenAPISchema);
              }
            }
            if (oneOf) {
              result.oneOf = oneOf.map(convertJSONSchemaToOpenAPISchema);
            }
            if (minLength !== void 0) {
              result.minLength = minLength;
            }
            return result;
          }
          function isEmptyObjectSchema(jsonSchema) {
            return (
              jsonSchema != null &&
              typeof jsonSchema === 'object' &&
              jsonSchema.type === 'object' &&
              (jsonSchema.properties == null || Object.keys(jsonSchema.properties).length === 0)
            );
          }
          function convertToGoogleGenerativeAIMessages(prompt) {
            var _a, _b;
            const systemInstructionParts = [];
            const contents = [];
            let systemMessagesAllowed = true;
            for (const { role, content } of prompt) {
              switch (role) {
                case 'system': {
                  if (!systemMessagesAllowed) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'UnsupportedFunctionalityError'
                    ]({
                      functionality: 'system messages are only supported at the beginning of the conversation',
                    });
                  }
                  systemInstructionParts.push({
                    text: content,
                  });
                  break;
                }
                case 'user': {
                  systemMessagesAllowed = false;
                  const parts = [];
                  for (const part of content) {
                    switch (part.type) {
                      case 'text': {
                        parts.push({
                          text: part.text,
                        });
                        break;
                      }
                      case 'image': {
                        parts.push(
                          part.image instanceof URL
                            ? {
                                fileData: {
                                  mimeType: (_a = part.mimeType) != null ? _a : 'image/jpeg',
                                  fileUri: part.image.toString(),
                                },
                              }
                            : {
                                inlineData: {
                                  mimeType: (_b = part.mimeType) != null ? _b : 'image/jpeg',
                                  data: (0,
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'convertUint8ArrayToBase64'
                                  ])(part.image),
                                },
                              },
                        );
                        break;
                      }
                      case 'file': {
                        parts.push(
                          part.data instanceof URL
                            ? {
                                fileData: {
                                  mimeType: part.mimeType,
                                  fileUri: part.data.toString(),
                                },
                              }
                            : {
                                inlineData: {
                                  mimeType: part.mimeType,
                                  data: part.data,
                                },
                              },
                        );
                        break;
                      }
                      default: {
                        const _exhaustiveCheck = part;
                        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'UnsupportedFunctionalityError'
                        ]({
                          functionality: `prompt part: ${_exhaustiveCheck}`,
                        });
                      }
                    }
                  }
                  contents.push({
                    role: 'user',
                    parts,
                  });
                  break;
                }
                case 'assistant': {
                  systemMessagesAllowed = false;
                  contents.push({
                    role: 'model',
                    parts: content
                      .map((part) => {
                        switch (part.type) {
                          case 'text': {
                            return part.text.length === 0
                              ? void 0
                              : {
                                  text: part.text,
                                };
                          }
                          case 'tool-call': {
                            return {
                              functionCall: {
                                name: part.toolName,
                                args: part.args,
                              },
                            };
                          }
                        }
                      })
                      .filter((part) => part !== void 0),
                  });
                  break;
                }
                case 'tool': {
                  systemMessagesAllowed = false;
                  contents.push({
                    role: 'user',
                    parts: content.map((part) => ({
                      functionResponse: {
                        name: part.toolName,
                        response: {
                          name: part.toolName,
                          content: part.result,
                        },
                      },
                    })),
                  });
                  break;
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            return {
              systemInstruction:
                systemInstructionParts.length > 0
                  ? {
                      parts: systemInstructionParts,
                    }
                  : void 0,
              contents,
            };
          }
          // src/get-model-path.ts
          function getModelPath(modelId) {
            return modelId.includes('/') ? modelId : `models/${modelId}`;
          }
          var googleErrorDataSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              error:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .number()
                    .nullable(),
                  message:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                  status:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                }),
            });
          var googleFailedResponseHandler = (0,
          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
            'createJsonErrorResponseHandler'
          ])({
            errorSchema: googleErrorDataSchema,
            errorToMessage: (data) => data.error.message,
          });
          function prepareTools(mode, useSearchGrounding, dynamicRetrievalConfig, modelId) {
            var _a, _b;
            const tools = ((_a = mode.tools) == null ? void 0 : _a.length) ? mode.tools : void 0;
            const toolWarnings = [];
            const isGemini2 = modelId.includes('gemini-2');
            const supportsDynamicRetrieval = modelId.includes('gemini-1.5-flash') && !modelId.includes('-8b');
            if (useSearchGrounding) {
              return {
                tools: isGemini2
                  ? {
                      googleSearch: {},
                    }
                  : {
                      googleSearchRetrieval:
                        !supportsDynamicRetrieval || !dynamicRetrievalConfig
                          ? {}
                          : {
                              dynamicRetrievalConfig,
                            },
                    },
                toolConfig: void 0,
                toolWarnings,
              };
            }
            if (tools == null) {
              return {
                tools: void 0,
                toolConfig: void 0,
                toolWarnings,
              };
            }
            const functionDeclarations = [];
            for (const tool of tools) {
              if (tool.type === 'provider-defined') {
                toolWarnings.push({
                  type: 'unsupported-tool',
                  tool,
                });
              } else {
                functionDeclarations.push({
                  name: tool.name,
                  description: (_b = tool.description) != null ? _b : '',
                  parameters: convertJSONSchemaToOpenAPISchema(tool.parameters),
                });
              }
            }
            const toolChoice = mode.toolChoice;
            if (toolChoice == null) {
              return {
                tools: {
                  functionDeclarations,
                },
                toolConfig: void 0,
                toolWarnings,
              };
            }
            const type = toolChoice.type;
            switch (type) {
              case 'auto':
                return {
                  tools: {
                    functionDeclarations,
                  },
                  toolConfig: {
                    functionCallingConfig: {
                      mode: 'AUTO',
                    },
                  },
                  toolWarnings,
                };
              case 'none':
                return {
                  tools: {
                    functionDeclarations,
                  },
                  toolConfig: {
                    functionCallingConfig: {
                      mode: 'NONE',
                    },
                  },
                  toolWarnings,
                };
              case 'required':
                return {
                  tools: {
                    functionDeclarations,
                  },
                  toolConfig: {
                    functionCallingConfig: {
                      mode: 'ANY',
                    },
                  },
                  toolWarnings,
                };
              case 'tool':
                return {
                  tools: {
                    functionDeclarations,
                  },
                  toolConfig: {
                    functionCallingConfig: {
                      mode: 'ANY',
                      allowedFunctionNames: [toolChoice.toolName],
                    },
                  },
                  toolWarnings,
                };
              default: {
                const _exhaustiveCheck = type;
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'UnsupportedFunctionalityError'
                ]({
                  functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,
                });
              }
            }
          }
          // src/map-google-generative-ai-finish-reason.ts
          function mapGoogleGenerativeAIFinishReason({ finishReason, hasToolCalls }) {
            switch (finishReason) {
              case 'STOP':
                return hasToolCalls ? 'tool-calls' : 'stop';
              case 'MAX_TOKENS':
                return 'length';
              case 'RECITATION':
              case 'SAFETY':
              case 'BLOCKLIST':
              case 'PROHIBITED_CONTENT':
              case 'SPII':
                return 'content-filter';
              case 'FINISH_REASON_UNSPECIFIED':
              case 'OTHER':
                return 'other';
              case 'MALFORMED_FUNCTION_CALL':
                return 'error';
              default:
                return 'unknown';
            }
          }
          // src/google-generative-ai-language-model.ts
          var GoogleGenerativeAILanguageModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.defaultObjectGenerationMode = 'json';
              this.supportsImageUrls = false;
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get supportsStructuredOutputs() {
              var _a;
              return (_a = this.settings.structuredOutputs) != null ? _a : true;
            }
            get provider() {
              return this.config.provider;
            }
            async getArgs({
              mode,
              prompt,
              maxTokens,
              temperature,
              topP,
              topK,
              frequencyPenalty,
              presencePenalty,
              stopSequences,
              responseFormat,
              seed,
            }) {
              var _a, _b;
              const type = mode.type;
              const warnings = [];
              const generationConfig = {
                // standardized settings:
                maxOutputTokens: maxTokens,
                temperature,
                topK,
                topP,
                frequencyPenalty,
                presencePenalty,
                stopSequences,
                seed,
                // response format:
                responseMimeType:
                  (responseFormat == null ? void 0 : responseFormat.type) === 'json' ? 'application/json' : void 0,
                responseSchema:
                  (responseFormat == null ? void 0 : responseFormat.type) === 'json' &&
                  responseFormat.schema != null && // Google GenAI does not support all OpenAPI Schema features,
                  // so this is needed as an escape hatch:
                  this.supportsStructuredOutputs
                    ? convertJSONSchemaToOpenAPISchema(responseFormat.schema)
                    : void 0,
                ...(this.settings.audioTimestamp && {
                  audioTimestamp: this.settings.audioTimestamp,
                }),
              };
              const { contents, systemInstruction } = convertToGoogleGenerativeAIMessages(prompt);
              switch (type) {
                case 'regular': {
                  const { tools, toolConfig, toolWarnings } = prepareTools(
                    mode,
                    (_a = this.settings.useSearchGrounding) != null ? _a : false,
                    this.settings.dynamicRetrievalConfig,
                    this.modelId,
                  );
                  return {
                    args: {
                      generationConfig,
                      contents,
                      systemInstruction,
                      safetySettings: this.settings.safetySettings,
                      tools,
                      toolConfig,
                      cachedContent: this.settings.cachedContent,
                    },
                    warnings: [...warnings, ...toolWarnings],
                  };
                }
                case 'object-json': {
                  return {
                    args: {
                      generationConfig: {
                        ...generationConfig,
                        responseMimeType: 'application/json',
                        responseSchema:
                          mode.schema != null && // Google GenAI does not support all OpenAPI Schema features,
                          // so this is needed as an escape hatch:
                          this.supportsStructuredOutputs
                            ? convertJSONSchemaToOpenAPISchema(mode.schema)
                            : void 0,
                      },
                      contents,
                      systemInstruction,
                      safetySettings: this.settings.safetySettings,
                      cachedContent: this.settings.cachedContent,
                    },
                    warnings,
                  };
                }
                case 'object-tool': {
                  return {
                    args: {
                      generationConfig,
                      contents,
                      tools: {
                        functionDeclarations: [
                          {
                            name: mode.tool.name,
                            description: (_b = mode.tool.description) != null ? _b : '',
                            parameters: convertJSONSchemaToOpenAPISchema(mode.tool.parameters),
                          },
                        ],
                      },
                      toolConfig: {
                        functionCallingConfig: {
                          mode: 'ANY',
                        },
                      },
                      safetySettings: this.settings.safetySettings,
                      cachedContent: this.settings.cachedContent,
                    },
                    warnings,
                  };
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            supportsUrl(url) {
              return this.config.isSupportedUrl(url);
            }
            async doGenerate(options) {
              var _a, _b, _c, _d;
              const { args, warnings } = await this.getArgs(options);
              const body = JSON.stringify(args);
              const mergedHeaders = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'combineHeaders'
              ])(
                await (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'resolve'
                ])(this.config.headers),
                options.headers,
              );
              const {
                responseHeaders,
                value: response,
                rawValue: rawResponse,
              } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/${getModelPath(this.modelId)}:generateContent`,
                headers: mergedHeaders,
                body: args,
                failedResponseHandler: googleFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(responseSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { contents: rawPrompt, ...rawSettings } = args;
              const candidate = response.candidates[0];
              const parts =
                candidate.content == null || typeof candidate.content !== 'object' || !('parts' in candidate.content)
                  ? []
                  : candidate.content.parts;
              const toolCalls = getToolCallsFromParts({
                parts,
                generateId: this.config.generateId,
              });
              const usageMetadata = response.usageMetadata;
              return {
                text: getTextFromParts(parts),
                toolCalls,
                finishReason: mapGoogleGenerativeAIFinishReason({
                  finishReason: candidate.finishReason,
                  hasToolCalls: toolCalls != null && toolCalls.length > 0,
                }),
                usage: {
                  promptTokens:
                    (_a = usageMetadata == null ? void 0 : usageMetadata.promptTokenCount) != null ? _a : NaN,
                  completionTokens:
                    (_b = usageMetadata == null ? void 0 : usageMetadata.candidatesTokenCount) != null ? _b : NaN,
                },
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                  body: rawResponse,
                },
                warnings,
                providerMetadata: {
                  google: {
                    groundingMetadata: (_c = candidate.groundingMetadata) != null ? _c : null,
                    safetyRatings: (_d = candidate.safetyRatings) != null ? _d : null,
                  },
                },
                sources: extractSources({
                  groundingMetadata: candidate.groundingMetadata,
                  generateId: this.config.generateId,
                }),
                request: {
                  body,
                },
              };
            }
            async doStream(options) {
              const { args, warnings } = await this.getArgs(options);
              const body = JSON.stringify(args);
              const headers = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'combineHeaders'
              ])(
                await (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'resolve'
                ])(this.config.headers),
                options.headers,
              );
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/${getModelPath(this.modelId)}:streamGenerateContent?alt=sse`,
                headers,
                body: args,
                failedResponseHandler: googleFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createEventSourceResponseHandler'
                ])(chunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { contents: rawPrompt, ...rawSettings } = args;
              let finishReason = 'unknown';
              let usage = {
                promptTokens: Number.NaN,
                completionTokens: Number.NaN,
              };
              let providerMetadata = void 0;
              const generateId2 = this.config.generateId;
              let hasToolCalls = false;
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      var _a, _b, _c, _d, _e, _f;
                      if (!chunk.success) {
                        controller.enqueue({
                          type: 'error',
                          error: chunk.error,
                        });
                        return;
                      }
                      const value = chunk.value;
                      const usageMetadata = value.usageMetadata;
                      if (usageMetadata != null) {
                        usage = {
                          promptTokens: (_a = usageMetadata.promptTokenCount) != null ? _a : NaN,
                          completionTokens: (_b = usageMetadata.candidatesTokenCount) != null ? _b : NaN,
                        };
                      }
                      const candidate = (_c = value.candidates) == null ? void 0 : _c[0];
                      if (candidate == null) {
                        return;
                      }
                      const content = candidate.content;
                      if (content != null) {
                        const deltaText = getTextFromParts(content.parts);
                        if (deltaText != null) {
                          controller.enqueue({
                            type: 'text-delta',
                            textDelta: deltaText,
                          });
                        }
                        const toolCallDeltas = getToolCallsFromParts({
                          parts: content.parts,
                          generateId: generateId2,
                        });
                        if (toolCallDeltas != null) {
                          for (const toolCall of toolCallDeltas) {
                            controller.enqueue({
                              type: 'tool-call-delta',
                              toolCallType: 'function',
                              toolCallId: toolCall.toolCallId,
                              toolName: toolCall.toolName,
                              argsTextDelta: toolCall.args,
                            });
                            controller.enqueue({
                              type: 'tool-call',
                              toolCallType: 'function',
                              toolCallId: toolCall.toolCallId,
                              toolName: toolCall.toolName,
                              args: toolCall.args,
                            });
                            hasToolCalls = true;
                          }
                        }
                      }
                      if (candidate.finishReason != null) {
                        finishReason = mapGoogleGenerativeAIFinishReason({
                          finishReason: candidate.finishReason,
                          hasToolCalls,
                        });
                        const sources =
                          (_d = extractSources({
                            groundingMetadata: candidate.groundingMetadata,
                            generateId: generateId2,
                          })) != null
                            ? _d
                            : [];
                        for (const source of sources) {
                          controller.enqueue({
                            type: 'source',
                            source,
                          });
                        }
                        providerMetadata = {
                          google: {
                            groundingMetadata: (_e = candidate.groundingMetadata) != null ? _e : null,
                            safetyRatings: (_f = candidate.safetyRatings) != null ? _f : null,
                          },
                        };
                      }
                    },
                    flush(controller) {
                      controller.enqueue({
                        type: 'finish',
                        finishReason,
                        usage,
                        providerMetadata,
                      });
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings,
                request: {
                  body,
                },
              };
            }
          };
          function getToolCallsFromParts({ parts, generateId: generateId2 }) {
            const functionCallParts = parts == null ? void 0 : parts.filter((part) => 'functionCall' in part);
            return functionCallParts == null || functionCallParts.length === 0
              ? void 0
              : functionCallParts.map((part) => ({
                  toolCallType: 'function',
                  toolCallId: generateId2(),
                  toolName: part.functionCall.name,
                  args: JSON.stringify(part.functionCall.args),
                }));
          }
          function getTextFromParts(parts) {
            const textParts = parts == null ? void 0 : parts.filter((part) => 'text' in part);
            return textParts == null || textParts.length === 0 ? void 0 : textParts.map((part) => part.text).join('');
          }
          var contentSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].string(),
              parts:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].union([
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].string(),
                      }),
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        functionCall:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].string(),
                            args: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].unknown(),
                          }),
                      }),
                    ]),
                  )
                  .nullish(),
            });
          var groundingChunkSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              web: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .object({
                  uri: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].string(),
                  title:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                })
                .nullish(),
              retrievedContext:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    uri: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                    title:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                  })
                  .nullish(),
            });
          var groundingMetadataSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              webSearchQueries:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                  )
                  .nullish(),
              retrievalQueries:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                  )
                  .nullish(),
              searchEntryPoint:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    renderedContent:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                  })
                  .nullish(),
              groundingChunks:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(groundingChunkSchema)
                  .nullish(),
              groundingSupports:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      segment:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].object({
                          startIndex:
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ]
                              .number()
                              .nullish(),
                          endIndex:
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ]
                              .number()
                              .nullish(),
                          text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .string()
                            .nullish(),
                        }),
                      segment_text:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullish(),
                      groundingChunkIndices:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .array(
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].number(),
                          )
                          .nullish(),
                      supportChunkIndices:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .array(
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].number(),
                          )
                          .nullish(),
                      confidenceScores:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .array(
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].number(),
                          )
                          .nullish(),
                      confidenceScore:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .array(
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].number(),
                          )
                          .nullish(),
                    }),
                  )
                  .nullish(),
              retrievalMetadata:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .union([
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      webDynamicRetrievalScore:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({}),
                  ])
                  .nullish(),
            });
          var safetyRatingSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              category:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
              probability:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
              probabilityScore:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .nullish(),
              severity:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              severityScore:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .nullish(),
              blocked:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .boolean()
                  .nullish(),
            });
          var responseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              candidates:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    content: contentSchema
                      .nullish()
                      .or(
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .object({})
                          .strict(),
                      ),
                    finishReason:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .string()
                        .nullish(),
                    safetyRatings:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .array(safetyRatingSchema)
                        .nullish(),
                    groundingMetadata: groundingMetadataSchema.nullish(),
                  }),
                ),
              usageMetadata:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    promptTokenCount:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .number()
                        .nullish(),
                    candidatesTokenCount:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .number()
                        .nullish(),
                    totalTokenCount:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .number()
                        .nullish(),
                  })
                  .nullish(),
            });
          var chunkSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              candidates:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      content: contentSchema.nullish(),
                      finishReason:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullish(),
                      safetyRatings:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .array(safetyRatingSchema)
                          .nullish(),
                      groundingMetadata: groundingMetadataSchema.nullish(),
                    }),
                  )
                  .nullish(),
              usageMetadata:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    promptTokenCount:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .number()
                        .nullish(),
                    candidatesTokenCount:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .number()
                        .nullish(),
                    totalTokenCount:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .number()
                        .nullish(),
                  })
                  .nullish(),
            });
          function extractSources({ groundingMetadata, generateId: generateId2 }) {
            var _a;
            return (_a = groundingMetadata == null ? void 0 : groundingMetadata.groundingChunks) == null
              ? void 0
              : _a
                  .filter((chunk) => chunk.web != null)
                  .map((chunk) => ({
                    sourceType: 'url',
                    id: generateId2(),
                    url: chunk.web.uri,
                    title: chunk.web.title,
                  }));
          }
          var GoogleGenerativeAIEmbeddingModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            get maxEmbeddingsPerCall() {
              return 2048;
            }
            get supportsParallelCalls() {
              return true;
            }
            async doEmbed({ values, headers, abortSignal }) {
              if (values.length > this.maxEmbeddingsPerCall) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'TooManyEmbeddingValuesForCallError'
                ]({
                  provider: this.provider,
                  modelId: this.modelId,
                  maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,
                  values,
                });
              }
              const mergedHeaders = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'combineHeaders'
              ])(
                await (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'resolve'
                ])(this.config.headers),
                headers,
              );
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/models/${this.modelId}:batchEmbedContents`,
                headers: mergedHeaders,
                body: {
                  requests: values.map((value) => ({
                    model: `models/${this.modelId}`,
                    content: {
                      role: 'user',
                      parts: [
                        {
                          text: value,
                        },
                      ],
                    },
                    outputDimensionality: this.settings.outputDimensionality,
                  })),
                },
                failedResponseHandler: googleFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(googleGenerativeAITextEmbeddingResponseSchema),
                abortSignal,
                fetch: this.config.fetch,
              });
              return {
                embeddings: response.embeddings.map((item) => item.values),
                usage: void 0,
                rawResponse: {
                  headers: responseHeaders,
                },
              };
            }
          };
          var googleGenerativeAITextEmbeddingResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              embeddings:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    values:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].array(
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                      ),
                  }),
                ),
            });
          // src/google-supported-file-url.ts
          function isSupportedFileUrl(url) {
            return url.toString().startsWith('https://generativelanguage.googleapis.com/v1beta/files/');
          }
          // src/google-provider.ts
          function createGoogleGenerativeAI(options = {}) {
            var _a;
            const baseURL =
              (_a = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'withoutTrailingSlash'
              ])(options.baseURL)) != null
                ? _a
                : 'https://generativelanguage.googleapis.com/v1beta';
            const getHeaders = () => ({
              'x-goog-api-key': (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'loadApiKey'
              ])({
                apiKey: options.apiKey,
                environmentVariableName: 'GOOGLE_GENERATIVE_AI_API_KEY',
                description: 'Google Generative AI',
              }),
              ...options.headers,
            });
            const createChatModel = (modelId, settings = {}) => {
              var _a2;
              return new GoogleGenerativeAILanguageModel(modelId, settings, {
                provider: 'google.generative-ai',
                baseURL,
                headers: getHeaders,
                generateId:
                  (_a2 = options.generateId) != null
                    ? _a2
                    : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'generateId'
                      ],
                isSupportedUrl: isSupportedFileUrl,
                fetch: options.fetch,
              });
            };
            const createEmbeddingModel = (modelId, settings = {}) =>
              new GoogleGenerativeAIEmbeddingModel(modelId, settings, {
                provider: 'google.generative-ai',
                baseURL,
                headers: getHeaders,
                fetch: options.fetch,
              });
            const provider = function (modelId, settings) {
              if (new.target) {
                throw new Error('The Google Generative AI model function cannot be called with the new keyword.');
              }
              return createChatModel(modelId, settings);
            };
            provider.languageModel = createChatModel;
            provider.chat = createChatModel;
            provider.generativeAI = createChatModel;
            provider.embedding = createEmbeddingModel;
            provider.textEmbedding = createEmbeddingModel;
            provider.textEmbeddingModel = createEmbeddingModel;
            return provider;
          }
          var google = createGoogleGenerativeAI();
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+mistral@1.1.17_zod@3.24.2/node_modules/@ai-sdk/mistral/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/mistral-provider.ts
          __turbopack_context__.s({
            createMistral: () => createMistral,
            mistral: () => mistral,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.13_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs [app-client] (ecmascript)',
            );
          // src/convert-to-mistral-chat-messages.ts
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          function convertToMistralChatMessages(prompt) {
            const messages = [];
            for (let i = 0; i < prompt.length; i++) {
              const { role, content } = prompt[i];
              const isLastMessage = i === prompt.length - 1;
              switch (role) {
                case 'system': {
                  messages.push({
                    role: 'system',
                    content,
                  });
                  break;
                }
                case 'user': {
                  messages.push({
                    role: 'user',
                    content: content.map((part) => {
                      var _a;
                      switch (part.type) {
                        case 'text': {
                          return {
                            type: 'text',
                            text: part.text,
                          };
                        }
                        case 'image': {
                          return {
                            type: 'image_url',
                            image_url:
                              part.image instanceof URL
                                ? part.image.toString()
                                : `data:${(_a = part.mimeType) != null ? _a : 'image/jpeg'};base64,${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__['convertUint8ArrayToBase64'])(part.image)}`,
                          };
                        }
                        case 'file': {
                          if (!(part.data instanceof URL)) {
                            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'UnsupportedFunctionalityError'
                            ]({
                              functionality: 'File content parts in user messages',
                            });
                          }
                          switch (part.mimeType) {
                            case 'application/pdf': {
                              return {
                                type: 'document_url',
                                document_url: part.data.toString(),
                              };
                            }
                            default: {
                              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'UnsupportedFunctionalityError'
                              ]({
                                functionality: 'Only PDF files are supported in user messages',
                              });
                            }
                          }
                        }
                      }
                    }),
                  });
                  break;
                }
                case 'assistant': {
                  let text = '';
                  const toolCalls = [];
                  for (const part of content) {
                    switch (part.type) {
                      case 'text': {
                        text += part.text;
                        break;
                      }
                      case 'redacted-reasoning':
                      case 'reasoning': {
                        break;
                      }
                      case 'tool-call': {
                        toolCalls.push({
                          id: part.toolCallId,
                          type: 'function',
                          function: {
                            name: part.toolName,
                            arguments: JSON.stringify(part.args),
                          },
                        });
                        break;
                      }
                      default: {
                        const _exhaustiveCheck = part;
                        throw new Error(`Unsupported part: ${_exhaustiveCheck}`);
                      }
                    }
                  }
                  messages.push({
                    role: 'assistant',
                    content: text,
                    prefix: isLastMessage ? true : void 0,
                    tool_calls: toolCalls.length > 0 ? toolCalls : void 0,
                  });
                  break;
                }
                case 'tool': {
                  for (const toolResponse of content) {
                    messages.push({
                      role: 'tool',
                      name: toolResponse.toolName,
                      content: JSON.stringify(toolResponse.result),
                      tool_call_id: toolResponse.toolCallId,
                    });
                  }
                  break;
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            return messages;
          }
          // src/map-mistral-finish-reason.ts
          function mapMistralFinishReason(finishReason) {
            switch (finishReason) {
              case 'stop':
                return 'stop';
              case 'length':
              case 'model_length':
                return 'length';
              case 'tool_calls':
                return 'tool-calls';
              default:
                return 'unknown';
            }
          }
          var mistralErrorDataSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              object:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('error'),
              message:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
              type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].string(),
              param:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullable(),
              code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .nullable(),
            });
          var mistralFailedResponseHandler = (0,
          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
            'createJsonErrorResponseHandler'
          ])({
            errorSchema: mistralErrorDataSchema,
            errorToMessage: (data) => data.message,
          });
          // src/get-response-metadata.ts
          function getResponseMetadata({ id, model, created }) {
            return {
              id: id != null ? id : void 0,
              modelId: model != null ? model : void 0,
              timestamp: created != null ? new Date(created * 1e3) : void 0,
            };
          }
          function prepareTools(mode) {
            var _a;
            const tools = ((_a = mode.tools) == null ? void 0 : _a.length) ? mode.tools : void 0;
            const toolWarnings = [];
            if (tools == null) {
              return {
                tools: void 0,
                tool_choice: void 0,
                toolWarnings,
              };
            }
            const mistralTools = [];
            for (const tool of tools) {
              if (tool.type === 'provider-defined') {
                toolWarnings.push({
                  type: 'unsupported-tool',
                  tool,
                });
              } else {
                mistralTools.push({
                  type: 'function',
                  function: {
                    name: tool.name,
                    description: tool.description,
                    parameters: tool.parameters,
                  },
                });
              }
            }
            const toolChoice = mode.toolChoice;
            if (toolChoice == null) {
              return {
                tools: mistralTools,
                tool_choice: void 0,
                toolWarnings,
              };
            }
            const type = toolChoice.type;
            switch (type) {
              case 'auto':
              case 'none':
                return {
                  tools: mistralTools,
                  tool_choice: type,
                  toolWarnings,
                };
              case 'required':
                return {
                  tools: mistralTools,
                  tool_choice: 'any',
                  toolWarnings,
                };
              case 'tool':
                return {
                  tools: mistralTools.filter((tool) => tool.function.name === toolChoice.toolName),
                  tool_choice: 'any',
                  toolWarnings,
                };
              default: {
                const _exhaustiveCheck = type;
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'UnsupportedFunctionalityError'
                ]({
                  functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,
                });
              }
            }
          }
          // src/mistral-chat-language-model.ts
          var MistralChatLanguageModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.defaultObjectGenerationMode = 'json';
              this.supportsImageUrls = false;
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            supportsUrl(url) {
              return url.protocol === 'https:';
            }
            getArgs({
              mode,
              prompt,
              maxTokens,
              temperature,
              topP,
              topK,
              frequencyPenalty,
              presencePenalty,
              stopSequences,
              responseFormat,
              seed,
              providerMetadata,
            }) {
              var _a, _b;
              const type = mode.type;
              const warnings = [];
              if (topK != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'topK',
                });
              }
              if (frequencyPenalty != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'frequencyPenalty',
                });
              }
              if (presencePenalty != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'presencePenalty',
                });
              }
              if (stopSequences != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'stopSequences',
                });
              }
              if (responseFormat != null && responseFormat.type === 'json' && responseFormat.schema != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'responseFormat',
                  details: 'JSON response format schema is not supported',
                });
              }
              const baseArgs = {
                // model id:
                model: this.modelId,
                // model specific settings:
                safe_prompt: this.settings.safePrompt,
                // standardized settings:
                max_tokens: maxTokens,
                temperature,
                top_p: topP,
                random_seed: seed,
                // response format:
                response_format:
                  (responseFormat == null ? void 0 : responseFormat.type) === 'json'
                    ? {
                        type: 'json_object',
                      }
                    : void 0,
                // mistral-specific provider options:
                document_image_limit:
                  (_a = providerMetadata == null ? void 0 : providerMetadata.mistral) == null
                    ? void 0
                    : _a.documentImageLimit,
                document_page_limit:
                  (_b = providerMetadata == null ? void 0 : providerMetadata.mistral) == null
                    ? void 0
                    : _b.documentPageLimit,
                // messages:
                messages: convertToMistralChatMessages(prompt),
              };
              switch (type) {
                case 'regular': {
                  const { tools, tool_choice, toolWarnings } = prepareTools(mode);
                  return {
                    args: {
                      ...baseArgs,
                      tools,
                      tool_choice,
                    },
                    warnings: [...warnings, ...toolWarnings],
                  };
                }
                case 'object-json': {
                  return {
                    args: {
                      ...baseArgs,
                      response_format: {
                        type: 'json_object',
                      },
                    },
                    warnings,
                  };
                }
                case 'object-tool': {
                  return {
                    args: {
                      ...baseArgs,
                      tool_choice: 'any',
                      tools: [
                        {
                          type: 'function',
                          function: mode.tool,
                        },
                      ],
                    },
                    warnings,
                  };
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            async doGenerate(options) {
              var _a;
              const { args, warnings } = this.getArgs(options);
              const {
                responseHeaders,
                value: response,
                rawValue: rawResponse,
              } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/chat/completions`,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: args,
                failedResponseHandler: mistralFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(mistralChatResponseSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages: rawPrompt, ...rawSettings } = args;
              const choice = response.choices[0];
              let text = extractTextContent(choice.message.content);
              const lastMessage = rawPrompt[rawPrompt.length - 1];
              if (lastMessage.role === 'assistant' && (text == null ? void 0 : text.startsWith(lastMessage.content))) {
                text = text.slice(lastMessage.content.length);
              }
              return {
                text,
                toolCalls:
                  (_a = choice.message.tool_calls) == null
                    ? void 0
                    : _a.map((toolCall) => ({
                        toolCallType: 'function',
                        toolCallId: toolCall.id,
                        toolName: toolCall.function.name,
                        args: toolCall.function.arguments,
                      })),
                finishReason: mapMistralFinishReason(choice.finish_reason),
                usage: {
                  promptTokens: response.usage.prompt_tokens,
                  completionTokens: response.usage.completion_tokens,
                },
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                  body: rawResponse,
                },
                request: {
                  body: JSON.stringify(args),
                },
                response: getResponseMetadata(response),
                warnings,
              };
            }
            async doStream(options) {
              const { args, warnings } = this.getArgs(options);
              const body = {
                ...args,
                stream: true,
              };
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/chat/completions`,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body,
                failedResponseHandler: mistralFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createEventSourceResponseHandler'
                ])(mistralChatChunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages: rawPrompt, ...rawSettings } = args;
              let finishReason = 'unknown';
              let usage = {
                promptTokens: Number.NaN,
                completionTokens: Number.NaN,
              };
              let chunkNumber = 0;
              let trimLeadingSpace = false;
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      if (!chunk.success) {
                        controller.enqueue({
                          type: 'error',
                          error: chunk.error,
                        });
                        return;
                      }
                      chunkNumber++;
                      const value = chunk.value;
                      if (chunkNumber === 1) {
                        controller.enqueue({
                          type: 'response-metadata',
                          ...getResponseMetadata(value),
                        });
                      }
                      if (value.usage != null) {
                        usage = {
                          promptTokens: value.usage.prompt_tokens,
                          completionTokens: value.usage.completion_tokens,
                        };
                      }
                      const choice = value.choices[0];
                      if ((choice == null ? void 0 : choice.finish_reason) != null) {
                        finishReason = mapMistralFinishReason(choice.finish_reason);
                      }
                      if ((choice == null ? void 0 : choice.delta) == null) {
                        return;
                      }
                      const delta = choice.delta;
                      const textContent = extractTextContent(delta.content);
                      if (chunkNumber <= 2) {
                        const lastMessage = rawPrompt[rawPrompt.length - 1];
                        if (lastMessage.role === 'assistant' && textContent === lastMessage.content.trimEnd()) {
                          if (textContent.length < lastMessage.content.length) {
                            trimLeadingSpace = true;
                          }
                          return;
                        }
                      }
                      if (textContent != null) {
                        controller.enqueue({
                          type: 'text-delta',
                          textDelta: trimLeadingSpace ? textContent.trimStart() : textContent,
                        });
                        trimLeadingSpace = false;
                      }
                      if (delta.tool_calls != null) {
                        for (const toolCall of delta.tool_calls) {
                          controller.enqueue({
                            type: 'tool-call-delta',
                            toolCallType: 'function',
                            toolCallId: toolCall.id,
                            toolName: toolCall.function.name,
                            argsTextDelta: toolCall.function.arguments,
                          });
                          controller.enqueue({
                            type: 'tool-call',
                            toolCallType: 'function',
                            toolCallId: toolCall.id,
                            toolName: toolCall.function.name,
                            args: toolCall.function.arguments,
                          });
                        }
                      }
                    },
                    flush(controller) {
                      controller.enqueue({
                        type: 'finish',
                        finishReason,
                        usage,
                      });
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                request: {
                  body: JSON.stringify(body),
                },
                warnings,
              };
            }
          };
          function extractTextContent(content) {
            if (typeof content === 'string') {
              return content;
            }
            if (content == null) {
              return void 0;
            }
            const textContent = [];
            for (const chunk of content) {
              const { type } = chunk;
              switch (type) {
                case 'text':
                  textContent.push(chunk.text);
                  break;
                case 'image_url':
                case 'reference':
                  break;
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            return textContent.length ? textContent.join('') : void 0;
          }
          var mistralContentSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ]
              .union([
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].discriminatedUnion('type', [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('text'),
                      text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('image_url'),
                      image_url:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].union([
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].string(),
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            url: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].string(),
                            detail:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .string()
                                .nullable(),
                          }),
                        ]),
                    }),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('reference'),
                      reference_ids:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].array(
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].number(),
                        ),
                    }),
                  ]),
                ),
              ])
              .nullish();
          var mistralChatResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .nullish(),
              created:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .nullish(),
              model:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              choices:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    message:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].literal('assistant'),
                        content: mistralContentSchema,
                        tool_calls:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .array(
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].string(),
                                function:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].object({
                                    name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ].string(),
                                    arguments:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].string(),
                                  }),
                              }),
                            )
                            .nullish(),
                      }),
                    index:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    finish_reason:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .string()
                        .nullish(),
                  }),
                ),
              object:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].literal('chat.completion'),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  prompt_tokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].number(),
                  completion_tokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].number(),
                }),
            });
          var mistralChatChunkSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .nullish(),
              created:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .number()
                  .nullish(),
              model:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              choices:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].object({
                    delta:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].object({
                        role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .enum(['assistant'])
                          .optional(),
                        content: mistralContentSchema,
                        tool_calls:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .array(
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].string(),
                                function:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].object({
                                    name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ].string(),
                                    arguments:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].string(),
                                  }),
                              }),
                            )
                            .nullish(),
                      }),
                    finish_reason:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .string()
                        .nullish(),
                    index:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  }),
                ),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    prompt_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    completion_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  })
                  .nullish(),
            });
          var MistralEmbeddingModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            get maxEmbeddingsPerCall() {
              var _a;
              return (_a = this.settings.maxEmbeddingsPerCall) != null ? _a : 32;
            }
            get supportsParallelCalls() {
              var _a;
              return (_a = this.settings.supportsParallelCalls) != null ? _a : false;
            }
            async doEmbed({ values, abortSignal, headers }) {
              if (values.length > this.maxEmbeddingsPerCall) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'TooManyEmbeddingValuesForCallError'
                ]({
                  provider: this.provider,
                  modelId: this.modelId,
                  maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,
                  values,
                });
              }
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: `${this.config.baseURL}/embeddings`,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), headers),
                body: {
                  model: this.modelId,
                  input: values,
                  encoding_format: 'float',
                },
                failedResponseHandler: mistralFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(MistralTextEmbeddingResponseSchema),
                abortSignal,
                fetch: this.config.fetch,
              });
              return {
                embeddings: response.data.map((item) => item.embedding),
                usage: response.usage
                  ? {
                      tokens: response.usage.prompt_tokens,
                    }
                  : void 0,
                rawResponse: {
                  headers: responseHeaders,
                },
              };
            }
          };
          var MistralTextEmbeddingResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              data: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].array(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  embedding:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].array(
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    ),
                }),
              ),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    prompt_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  })
                  .nullish(),
            });
          // src/mistral-provider.ts
          function createMistral(options = {}) {
            var _a;
            const baseURL =
              (_a = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'withoutTrailingSlash'
              ])(options.baseURL)) != null
                ? _a
                : 'https://api.mistral.ai/v1';
            const getHeaders = () => ({
              Authorization: `Bearer ${(0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'loadApiKey'
              ])({
                apiKey: options.apiKey,
                environmentVariableName: 'MISTRAL_API_KEY',
                description: 'Mistral',
              })}`,
              ...options.headers,
            });
            const createChatModel = (modelId, settings = {}) =>
              new MistralChatLanguageModel(modelId, settings, {
                provider: 'mistral.chat',
                baseURL,
                headers: getHeaders,
                fetch: options.fetch,
              });
            const createEmbeddingModel = (modelId, settings = {}) =>
              new MistralEmbeddingModel(modelId, settings, {
                provider: 'mistral.embedding',
                baseURL,
                headers: getHeaders,
                fetch: options.fetch,
              });
            const provider = function (modelId, settings) {
              if (new.target) {
                throw new Error('The Mistral model function cannot be called with the new keyword.');
              }
              return createChatModel(modelId, settings);
            };
            provider.languageModel = createChatModel;
            provider.chat = createChatModel;
            provider.embedding = createEmbeddingModel;
            provider.textEmbedding = createEmbeddingModel;
            provider.textEmbeddingModel = createEmbeddingModel;
            return provider;
          }
          var mistral = createMistral();
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@openrouter+ai-sdk-provider@0.4.3_zod@3.24.2/node_modules/@openrouter/ai-sdk-provider/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            OpenRouter: () => OpenRouter,
            createOpenRouter: () => createOpenRouter,
            openrouter: () => openrouter,
          });
          // src/openrouter-facade.ts
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.10_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)',
            );
          // src/openrouter-chat-language-model.ts
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.9/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs [app-client] (ecmascript)',
            );
          var __defProp = Object.defineProperty;
          var __defProps = Object.defineProperties;
          var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
          var __getOwnPropSymbols = Object.getOwnPropertySymbols;
          var __hasOwnProp = Object.prototype.hasOwnProperty;
          var __propIsEnum = Object.prototype.propertyIsEnumerable;
          var __defNormalProp = (obj, key, value) =>
            key in obj
              ? __defProp(obj, key, {
                  enumerable: true,
                  configurable: true,
                  writable: true,
                  value,
                })
              : (obj[key] = value);
          var __spreadValues = (a, b) => {
            for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
            if (__getOwnPropSymbols)
              for (var prop of __getOwnPropSymbols(b)) {
                if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
              }
            return a;
          };
          var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
          var __objRest = (source, exclude) => {
            var target = {};
            for (var prop in source)
              if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
            if (source != null && __getOwnPropSymbols)
              for (var prop of __getOwnPropSymbols(source)) {
                if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];
              }
            return target;
          };
          function convertToOpenRouterChatMessages(prompt) {
            var _a, _b, _c;
            const messages = [];
            function getCacheControl(providerMetadata) {
              var _a2;
              const anthropic = providerMetadata == null ? void 0 : providerMetadata.anthropic;
              const cacheControlValue =
                (_a2 = anthropic == null ? void 0 : anthropic.cacheControl) != null
                  ? _a2
                  : anthropic == null
                    ? void 0
                    : anthropic.cache_control;
              return cacheControlValue;
            }
            for (const { role, content, providerMetadata } of prompt) {
              switch (role) {
                case 'system': {
                  messages.push({
                    role: 'system',
                    content,
                    cache_control: getCacheControl(providerMetadata),
                  });
                  break;
                }
                case 'user': {
                  if (content.length === 1 && ((_a = content[0]) == null ? void 0 : _a.type) === 'text') {
                    messages.push({
                      role: 'user',
                      content: content[0].text,
                      cache_control:
                        (_b = getCacheControl(providerMetadata)) != null
                          ? _b
                          : getCacheControl(content[0].providerMetadata),
                    });
                    break;
                  }
                  const messageCacheControl = getCacheControl(providerMetadata);
                  const contentParts = content.map((part) => {
                    var _a2, _b2, _c2;
                    switch (part.type) {
                      case 'text':
                        return {
                          type: 'text',
                          text: part.text,
                          // For text parts, only use part-specific cache control
                          cache_control: getCacheControl(part.providerMetadata),
                        };
                      case 'image':
                        return {
                          type: 'image_url',
                          image_url: {
                            url:
                              part.image instanceof URL
                                ? part.image.toString()
                                : `data:${(_a2 = part.mimeType) != null ? _a2 : 'image/jpeg'};base64,${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__['convertUint8ArrayToBase64'])(part.image)}`,
                          },
                          // For image parts, use part-specific or message-level cache control
                          cache_control:
                            (_b2 = getCacheControl(part.providerMetadata)) != null ? _b2 : messageCacheControl,
                        };
                      case 'file':
                        return {
                          type: 'text',
                          text: part.data instanceof URL ? part.data.toString() : part.data,
                          cache_control:
                            (_c2 = getCacheControl(part.providerMetadata)) != null ? _c2 : messageCacheControl,
                        };
                      default: {
                        const _exhaustiveCheck = part;
                        throw new Error(`Unsupported content part type: ${_exhaustiveCheck}`);
                      }
                    }
                  });
                  messages.push({
                    role: 'user',
                    content: contentParts,
                  });
                  break;
                }
                case 'assistant': {
                  let text = '';
                  const toolCalls = [];
                  for (const part of content) {
                    switch (part.type) {
                      case 'text': {
                        text += part.text;
                        break;
                      }
                      case 'tool-call': {
                        toolCalls.push({
                          id: part.toolCallId,
                          type: 'function',
                          function: {
                            name: part.toolName,
                            arguments: JSON.stringify(part.args),
                          },
                        });
                        break;
                      }
                      // TODO: Handle reasoning and redacted-reasoning
                      case 'reasoning':
                      case 'redacted-reasoning':
                        break;
                      default: {
                        const _exhaustiveCheck = part;
                        throw new Error(`Unsupported part: ${_exhaustiveCheck}`);
                      }
                    }
                  }
                  messages.push({
                    role: 'assistant',
                    content: text,
                    tool_calls: toolCalls.length > 0 ? toolCalls : void 0,
                    cache_control: getCacheControl(providerMetadata),
                  });
                  break;
                }
                case 'tool': {
                  for (const toolResponse of content) {
                    messages.push({
                      role: 'tool',
                      tool_call_id: toolResponse.toolCallId,
                      content: JSON.stringify(toolResponse.result),
                      cache_control:
                        (_c = getCacheControl(providerMetadata)) != null
                          ? _c
                          : getCacheControl(toolResponse.providerMetadata),
                    });
                  }
                  break;
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            return messages;
          }
          // src/map-openrouter-chat-logprobs.ts
          function mapOpenRouterChatLogProbsOutput(logprobs) {
            var _a, _b;
            return (_b =
              (_a = logprobs == null ? void 0 : logprobs.content) == null
                ? void 0
                : _a.map(({ token, logprob, top_logprobs }) => ({
                    token,
                    logprob,
                    topLogprobs: top_logprobs
                      ? top_logprobs.map(({ token: token2, logprob: logprob2 }) => ({
                          token: token2,
                          logprob: logprob2,
                        }))
                      : [],
                  }))) != null
              ? _b
              : void 0;
          }
          // src/map-openrouter-finish-reason.ts
          function mapOpenRouterFinishReason(finishReason) {
            switch (finishReason) {
              case 'stop':
                return 'stop';
              case 'length':
                return 'length';
              case 'content_filter':
                return 'content-filter';
              case 'function_call':
              case 'tool_calls':
                return 'tool-calls';
              default:
                return 'unknown';
            }
          }
          var OpenRouterErrorResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              error:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  message:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].string(),
                  type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].string(),
                  param:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .any()
                      .nullable(),
                  code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .string()
                    .nullable(),
                }),
            });
          var openrouterFailedResponseHandler = (0,
          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
            'createJsonErrorResponseHandler'
          ])({
            errorSchema: OpenRouterErrorResponseSchema,
            errorToMessage: (data) => data.error.message,
          });
          // src/openrouter-chat-language-model.ts
          function isFunctionTool(tool) {
            return 'parameters' in tool;
          }
          var OpenRouterChatLanguageModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.defaultObjectGenerationMode = 'tool';
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            getArgs({
              mode,
              prompt,
              maxTokens,
              temperature,
              topP,
              frequencyPenalty,
              presencePenalty,
              seed,
              stopSequences,
              responseFormat,
              topK,
              providerMetadata,
            }) {
              var _a;
              const type = mode.type;
              const extraCallingBody =
                (_a = providerMetadata == null ? void 0 : providerMetadata['openrouter']) != null ? _a : {};
              const baseArgs = __spreadValues(
                __spreadValues(
                  __spreadValues(
                    {
                      // model id:
                      model: this.modelId,
                      models: this.settings.models,
                      // model specific settings:
                      logit_bias: this.settings.logitBias,
                      logprobs:
                        this.settings.logprobs === true || typeof this.settings.logprobs === 'number' ? true : void 0,
                      top_logprobs:
                        typeof this.settings.logprobs === 'number'
                          ? this.settings.logprobs
                          : typeof this.settings.logprobs === 'boolean'
                            ? this.settings.logprobs
                              ? 0
                              : void 0
                            : void 0,
                      user: this.settings.user,
                      parallel_tool_calls: this.settings.parallelToolCalls,
                      // standardized settings:
                      max_tokens: maxTokens,
                      temperature,
                      top_p: topP,
                      frequency_penalty: frequencyPenalty,
                      presence_penalty: presencePenalty,
                      seed,
                      stop: stopSequences,
                      response_format: responseFormat,
                      top_k: topK,
                      // messages:
                      messages: convertToOpenRouterChatMessages(prompt),
                      // OpenRouter specific settings:
                      include_reasoning: this.settings.includeReasoning,
                      reasoning: this.settings.reasoning,
                    },
                    this.config.extraBody,
                  ),
                  this.settings.extraBody,
                ),
                extraCallingBody,
              );
              switch (type) {
                case 'regular': {
                  return __spreadValues(__spreadValues({}, baseArgs), prepareToolsAndToolChoice(mode));
                }
                case 'object-json': {
                  return __spreadProps(__spreadValues({}, baseArgs), {
                    response_format: {
                      type: 'json_object',
                    },
                  });
                }
                case 'object-tool': {
                  return __spreadProps(__spreadValues({}, baseArgs), {
                    tool_choice: {
                      type: 'function',
                      function: {
                        name: mode.tool.name,
                      },
                    },
                    tools: [
                      {
                        type: 'function',
                        function: {
                          name: mode.tool.name,
                          description: mode.tool.description,
                          parameters: mode.tool.parameters,
                        },
                      },
                    ],
                  });
                }
                // Handle all non-text types with a single default case
                default: {
                  const _exhaustiveCheck = type;
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: `${_exhaustiveCheck} mode`,
                  });
                }
              }
            }
            async doGenerate(options) {
              var _b, _c, _d, _e, _f, _g, _h;
              const args = this.getArgs(options);
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/chat/completions',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: args,
                failedResponseHandler: openrouterFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(OpenRouterNonStreamChatCompletionResponseSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const _a = args,
                { messages: rawPrompt } = _a,
                rawSettings = __objRest(_a, ['messages']);
              const choice = response.choices[0];
              if (!choice) {
                throw new Error('No choice in response');
              }
              return {
                response: {
                  id: response.id,
                  modelId: response.model,
                },
                text: (_b = choice.message.content) != null ? _b : void 0,
                reasoning: (_c = choice.message.reasoning) != null ? _c : void 0,
                toolCalls:
                  (_d = choice.message.tool_calls) == null
                    ? void 0
                    : _d.map((toolCall) => {
                        var _a2;
                        return {
                          toolCallType: 'function',
                          toolCallId:
                            (_a2 = toolCall.id) != null
                              ? _a2
                              : (0,
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'generateId'
                                ])(),
                          toolName: toolCall.function.name,
                          args: toolCall.function.arguments,
                        };
                      }),
                finishReason: mapOpenRouterFinishReason(choice.finish_reason),
                usage: {
                  promptTokens: (_f = (_e = response.usage) == null ? void 0 : _e.prompt_tokens) != null ? _f : 0,
                  completionTokens:
                    (_h = (_g = response.usage) == null ? void 0 : _g.completion_tokens) != null ? _h : 0,
                },
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings: [],
                logprobs: mapOpenRouterChatLogProbsOutput(choice.logprobs),
              };
            }
            async doStream(options) {
              const args = this.getArgs(options);
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/chat/completions',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: __spreadProps(__spreadValues({}, args), {
                  stream: true,
                  // only include stream_options when in strict compatibility mode:
                  stream_options:
                    this.config.compatibility === 'strict'
                      ? {
                          include_usage: true,
                        }
                      : void 0,
                }),
                failedResponseHandler: openrouterFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createEventSourceResponseHandler'
                ])(OpenRouterStreamChatCompletionChunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const _a = args,
                { messages: rawPrompt } = _a,
                rawSettings = __objRest(_a, ['messages']);
              const toolCalls = [];
              let finishReason = 'other';
              let usage = {
                promptTokens: Number.NaN,
                completionTokens: Number.NaN,
              };
              let logprobs;
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      var _a2, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l;
                      if (!chunk.success) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: chunk.error,
                        });
                        return;
                      }
                      const value = chunk.value;
                      if ('error' in value) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: value.error,
                        });
                        return;
                      }
                      if (value.id) {
                        controller.enqueue({
                          type: 'response-metadata',
                          id: value.id,
                        });
                      }
                      if (value.model) {
                        controller.enqueue({
                          type: 'response-metadata',
                          modelId: value.model,
                        });
                      }
                      if (value.usage != null) {
                        usage = {
                          promptTokens: value.usage.prompt_tokens,
                          completionTokens: value.usage.completion_tokens,
                        };
                      }
                      const choice = value.choices[0];
                      if ((choice == null ? void 0 : choice.finish_reason) != null) {
                        finishReason = mapOpenRouterFinishReason(choice.finish_reason);
                      }
                      if ((choice == null ? void 0 : choice.delta) == null) {
                        return;
                      }
                      const delta = choice.delta;
                      if (delta.content != null) {
                        controller.enqueue({
                          type: 'text-delta',
                          textDelta: delta.content,
                        });
                      }
                      if (delta.reasoning != null) {
                        controller.enqueue({
                          type: 'reasoning',
                          textDelta: delta.reasoning,
                        });
                      }
                      const mappedLogprobs = mapOpenRouterChatLogProbsOutput(choice == null ? void 0 : choice.logprobs);
                      if (mappedLogprobs == null ? void 0 : mappedLogprobs.length) {
                        if (logprobs === void 0) logprobs = [];
                        logprobs.push(...mappedLogprobs);
                      }
                      if (delta.tool_calls != null) {
                        for (const toolCallDelta of delta.tool_calls) {
                          const index = toolCallDelta.index;
                          if (toolCalls[index] == null) {
                            if (toolCallDelta.type !== 'function') {
                              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'InvalidResponseDataError'
                              ]({
                                data: toolCallDelta,
                                message: `Expected 'function' type.`,
                              });
                            }
                            if (toolCallDelta.id == null) {
                              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'InvalidResponseDataError'
                              ]({
                                data: toolCallDelta,
                                message: `Expected 'id' to be a string.`,
                              });
                            }
                            if (((_a2 = toolCallDelta.function) == null ? void 0 : _a2.name) == null) {
                              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'InvalidResponseDataError'
                              ]({
                                data: toolCallDelta,
                                message: `Expected 'function.name' to be a string.`,
                              });
                            }
                            toolCalls[index] = {
                              id: toolCallDelta.id,
                              type: 'function',
                              function: {
                                name: toolCallDelta.function.name,
                                arguments: (_b = toolCallDelta.function.arguments) != null ? _b : '',
                              },
                            };
                            const toolCall2 = toolCalls[index];
                            if (toolCall2 == null) {
                              throw new Error('Tool call is missing');
                            }
                            if (
                              ((_c = toolCall2.function) == null ? void 0 : _c.name) != null &&
                              ((_d = toolCall2.function) == null ? void 0 : _d.arguments) != null &&
                              (0,
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'isParsableJson'
                              ])(toolCall2.function.arguments)
                            ) {
                              controller.enqueue({
                                type: 'tool-call-delta',
                                toolCallType: 'function',
                                toolCallId: toolCall2.id,
                                toolName: toolCall2.function.name,
                                argsTextDelta: toolCall2.function.arguments,
                              });
                              controller.enqueue({
                                type: 'tool-call',
                                toolCallType: 'function',
                                toolCallId:
                                  (_e = toolCall2.id) != null
                                    ? _e
                                    : (0,
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'generateId'
                                      ])(),
                                toolName: toolCall2.function.name,
                                args: toolCall2.function.arguments,
                              });
                            }
                            continue;
                          }
                          const toolCall = toolCalls[index];
                          if (toolCall == null) {
                            throw new Error('Tool call is missing');
                          }
                          if (((_f = toolCallDelta.function) == null ? void 0 : _f.arguments) != null) {
                            toolCall.function.arguments +=
                              (_h = (_g = toolCallDelta.function) == null ? void 0 : _g.arguments) != null ? _h : '';
                          }
                          controller.enqueue({
                            type: 'tool-call-delta',
                            toolCallType: 'function',
                            toolCallId: toolCall.id,
                            toolName: toolCall.function.name,
                            argsTextDelta: (_i = toolCallDelta.function.arguments) != null ? _i : '',
                          });
                          if (
                            ((_j = toolCall.function) == null ? void 0 : _j.name) != null &&
                            ((_k = toolCall.function) == null ? void 0 : _k.arguments) != null &&
                            (0,
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'isParsableJson'
                            ])(toolCall.function.arguments)
                          ) {
                            controller.enqueue({
                              type: 'tool-call',
                              toolCallType: 'function',
                              toolCallId:
                                (_l = toolCall.id) != null
                                  ? _l
                                  : (0,
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'generateId'
                                    ])(),
                              toolName: toolCall.function.name,
                              args: toolCall.function.arguments,
                            });
                          }
                        }
                      }
                    },
                    flush(controller) {
                      controller.enqueue({
                        type: 'finish',
                        finishReason,
                        logprobs,
                        usage,
                      });
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings: [],
              };
            }
          };
          var OpenRouterChatCompletionBaseResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .optional(),
              model:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .optional(),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    prompt_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    completion_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    total_tokens:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  })
                  .nullish(),
            });
          var OpenRouterNonStreamChatCompletionResponseSchema = OpenRouterChatCompletionBaseResponseSchema.extend({
            choices:
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].array(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  message:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].literal('assistant'),
                      content:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullable()
                          .optional(),
                      reasoning:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullable()
                          .optional(),
                      tool_calls:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .array(
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].object({
                              id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .string()
                                .optional()
                                .nullable(),
                              type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].literal('function'),
                              function:
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].object({
                                  name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].string(),
                                  arguments:
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ].string(),
                                }),
                            }),
                          )
                          .optional(),
                    }),
                  index:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].number(),
                  logprobs:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .object({
                        content:
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ]
                            .array(
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                token:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].string(),
                                logprob:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].number(),
                                top_logprobs:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].array(
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ].object({
                                      token:
                                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                          'z'
                                        ].string(),
                                      logprob:
                                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                          'z'
                                        ].number(),
                                    }),
                                  ),
                              }),
                            )
                            .nullable(),
                      })
                      .nullable()
                      .optional(),
                  finish_reason:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .string()
                      .optional()
                      .nullable(),
                }),
              ),
          });
          var OpenRouterStreamChatCompletionChunkSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].union([
              OpenRouterChatCompletionBaseResponseSchema.extend({
                choices:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      delta:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .object({
                            role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ]
                              .enum(['assistant'])
                              .optional(),
                            content:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .string()
                                .nullish(),
                            reasoning:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .string()
                                .nullish()
                                .optional(),
                            tool_calls:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .array(
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].object({
                                    index:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].number(),
                                    id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ]
                                      .string()
                                      .nullish(),
                                    type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ]
                                      .literal('function')
                                      .optional(),
                                    function:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].object({
                                        name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                          'z'
                                        ]
                                          .string()
                                          .nullish(),
                                        arguments:
                                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                            'z'
                                          ]
                                            .string()
                                            .nullish(),
                                      }),
                                  }),
                                )
                                .nullish(),
                          })
                          .nullish(),
                      logprobs:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .object({
                            content:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .array(
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].object({
                                    token:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].string(),
                                    logprob:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].number(),
                                    top_logprobs:
                                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                        'z'
                                      ].array(
                                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                          'z'
                                        ].object({
                                          token:
                                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                              'z'
                                            ].string(),
                                          logprob:
                                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                              'z'
                                            ].number(),
                                        }),
                                      ),
                                  }),
                                )
                                .nullable(),
                          })
                          .nullish(),
                      finish_reason:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullable()
                          .optional(),
                      index:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                    }),
                  ),
              }),
              OpenRouterErrorResponseSchema,
            ]);
          function prepareToolsAndToolChoice(mode) {
            var _a;
            const tools = ((_a = mode.tools) == null ? void 0 : _a.length) ? mode.tools : void 0;
            if (tools == null) {
              return {
                tools: void 0,
                tool_choice: void 0,
              };
            }
            const mappedTools = tools.map((tool) => {
              if (isFunctionTool(tool)) {
                return {
                  type: 'function',
                  function: {
                    name: tool.name,
                    description: tool.description,
                    parameters: tool.parameters,
                  },
                };
              } else {
                return {
                  type: 'function',
                  function: {
                    name: tool.name,
                  },
                };
              }
            });
            const toolChoice = mode.toolChoice;
            if (toolChoice == null) {
              return {
                tools: mappedTools,
                tool_choice: void 0,
              };
            }
            const type = toolChoice.type;
            switch (type) {
              case 'auto':
              case 'none':
              case 'required':
                return {
                  tools: mappedTools,
                  tool_choice: type,
                };
              case 'tool':
                return {
                  tools: mappedTools,
                  tool_choice: {
                    type: 'function',
                    function: {
                      name: toolChoice.toolName,
                    },
                  },
                };
              default: {
                const _exhaustiveCheck = type;
                throw new Error(`Unsupported tool choice type: ${_exhaustiveCheck}`);
              }
            }
          }
          function convertToOpenRouterCompletionPrompt({
            prompt,
            inputFormat,
            user = 'user',
            assistant = 'assistant',
          }) {
            if (
              inputFormat === 'prompt' &&
              prompt.length === 1 &&
              prompt[0] &&
              prompt[0].role === 'user' &&
              prompt[0].content.length === 1 &&
              prompt[0].content[0] &&
              prompt[0].content[0].type === 'text'
            ) {
              return {
                prompt: prompt[0].content[0].text,
              };
            }
            let text = '';
            if (prompt[0] && prompt[0].role === 'system') {
              text += `${prompt[0].content}

`;
              prompt = prompt.slice(1);
            }
            for (const { role, content } of prompt) {
              switch (role) {
                case 'system': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'InvalidPromptError'
                  ]({
                    message: 'Unexpected system message in prompt: ${content}',
                    prompt,
                  });
                }
                case 'user': {
                  const userMessage = content
                    .map((part) => {
                      switch (part.type) {
                        case 'text': {
                          return part.text;
                        }
                        case 'image': {
                          throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'UnsupportedFunctionalityError'
                          ]({
                            functionality: 'images',
                          });
                        }
                        case 'file': {
                          throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'UnsupportedFunctionalityError'
                          ]({
                            functionality: 'file attachments',
                          });
                        }
                        default: {
                          const _exhaustiveCheck = part;
                          throw new Error(`Unsupported content type: ${_exhaustiveCheck}`);
                        }
                      }
                    })
                    .join('');
                  text += `${user}:
${userMessage}

`;
                  break;
                }
                case 'assistant': {
                  const assistantMessage = content
                    .map((part) => {
                      switch (part.type) {
                        case 'text': {
                          return part.text;
                        }
                        case 'tool-call': {
                          throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'UnsupportedFunctionalityError'
                          ]({
                            functionality: 'tool-call messages',
                          });
                        }
                        case 'reasoning': {
                          throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'UnsupportedFunctionalityError'
                          ]({
                            functionality: 'reasoning messages',
                          });
                        }
                        case 'redacted-reasoning': {
                          throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'UnsupportedFunctionalityError'
                          ]({
                            functionality: 'redacted reasoning messages',
                          });
                        }
                        default: {
                          const _exhaustiveCheck = part;
                          throw new Error(`Unsupported content type: ${_exhaustiveCheck}`);
                        }
                      }
                    })
                    .join('');
                  text += `${assistant}:
${assistantMessage}

`;
                  break;
                }
                case 'tool': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'tool messages',
                  });
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            text += `${assistant}:
`;
            return {
              prompt: text,
            };
          }
          // src/map-openrouter-completion-logprobs.ts
          function mapOpenRouterCompletionLogProbs(logprobs) {
            return logprobs == null
              ? void 0
              : logprobs.tokens.map((token, index) => {
                  var _a, _b;
                  return {
                    token,
                    logprob: (_a = logprobs.token_logprobs[index]) != null ? _a : 0,
                    topLogprobs: logprobs.top_logprobs
                      ? Object.entries((_b = logprobs.top_logprobs[index]) != null ? _b : {}).map(
                          ([token2, logprob]) => ({
                            token: token2,
                            logprob,
                          }),
                        )
                      : [],
                  };
                });
          }
          // src/openrouter-completion-language-model.ts
          var OpenRouterCompletionLanguageModel = class {
            constructor(modelId, settings, config) {
              this.specificationVersion = 'v1';
              this.defaultObjectGenerationMode = void 0;
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
            }
            get provider() {
              return this.config.provider;
            }
            getArgs({
              mode,
              inputFormat,
              prompt,
              maxTokens,
              temperature,
              topP,
              frequencyPenalty,
              presencePenalty,
              seed,
              responseFormat,
              topK,
              stopSequences,
              providerMetadata,
            }) {
              var _a, _b;
              const type = mode.type;
              const extraCallingBody =
                (_a = providerMetadata == null ? void 0 : providerMetadata['openrouter']) != null ? _a : {};
              const { prompt: completionPrompt } = convertToOpenRouterCompletionPrompt({
                prompt,
                inputFormat,
              });
              const baseArgs = __spreadValues(
                __spreadValues(
                  __spreadValues(
                    {
                      // model id:
                      model: this.modelId,
                      models: this.settings.models,
                      // model specific settings:
                      logit_bias: this.settings.logitBias,
                      logprobs:
                        typeof this.settings.logprobs === 'number'
                          ? this.settings.logprobs
                          : typeof this.settings.logprobs === 'boolean'
                            ? this.settings.logprobs
                              ? 0
                              : void 0
                            : void 0,
                      suffix: this.settings.suffix,
                      user: this.settings.user,
                      // standardized settings:
                      max_tokens: maxTokens,
                      temperature,
                      top_p: topP,
                      frequency_penalty: frequencyPenalty,
                      presence_penalty: presencePenalty,
                      seed,
                      stop: stopSequences,
                      response_format: responseFormat,
                      top_k: topK,
                      // prompt:
                      prompt: completionPrompt,
                      // OpenRouter specific settings:
                      include_reasoning: this.settings.includeReasoning,
                      reasoning: this.settings.reasoning,
                    },
                    this.config.extraBody,
                  ),
                  this.settings.extraBody,
                ),
                extraCallingBody,
              );
              switch (type) {
                case 'regular': {
                  if ((_b = mode.tools) == null ? void 0 : _b.length) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'UnsupportedFunctionalityError'
                    ]({
                      functionality: 'tools',
                    });
                  }
                  if (mode.toolChoice) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'UnsupportedFunctionalityError'
                    ]({
                      functionality: 'toolChoice',
                    });
                  }
                  return baseArgs;
                }
                case 'object-json': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'object-json mode',
                  });
                }
                case 'object-tool': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'object-tool mode',
                  });
                }
                // Handle all non-text types with a single default case
                default: {
                  const _exhaustiveCheck = type;
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$9$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: `${_exhaustiveCheck} mode`,
                  });
                }
              }
            }
            async doGenerate(options) {
              var _b, _c, _d, _e, _f;
              const args = this.getArgs(options);
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/completions',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: args,
                failedResponseHandler: openrouterFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(OpenRouterCompletionChunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const _a = args,
                { prompt: rawPrompt } = _a,
                rawSettings = __objRest(_a, ['prompt']);
              if ('error' in response) {
                throw new Error(`${response.error.message}`);
              }
              const choice = response.choices[0];
              if (!choice) {
                throw new Error('No choice in OpenRouter completion response');
              }
              return {
                response: {
                  id: response.id,
                  modelId: response.model,
                },
                text: (_b = choice.text) != null ? _b : '',
                reasoning: choice.reasoning || void 0,
                usage: {
                  promptTokens: (_d = (_c = response.usage) == null ? void 0 : _c.prompt_tokens) != null ? _d : 0,
                  completionTokens:
                    (_f = (_e = response.usage) == null ? void 0 : _e.completion_tokens) != null ? _f : 0,
                },
                finishReason: mapOpenRouterFinishReason(choice.finish_reason),
                logprobs: mapOpenRouterCompletionLogProbs(choice.logprobs),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings: [],
              };
            }
            async doStream(options) {
              const args = this.getArgs(options);
              const { responseHeaders, value: response } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.config.url({
                  path: '/completions',
                  modelId: this.modelId,
                }),
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(this.config.headers(), options.headers),
                body: __spreadProps(__spreadValues({}, this.getArgs(options)), {
                  stream: true,
                  // only include stream_options when in strict compatibility mode:
                  stream_options:
                    this.config.compatibility === 'strict'
                      ? {
                          include_usage: true,
                        }
                      : void 0,
                }),
                failedResponseHandler: openrouterFailedResponseHandler,
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createEventSourceResponseHandler'
                ])(OpenRouterCompletionChunkSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const _a = args,
                { prompt: rawPrompt } = _a,
                rawSettings = __objRest(_a, ['prompt']);
              let finishReason = 'other';
              let usage = {
                promptTokens: Number.NaN,
                completionTokens: Number.NaN,
              };
              let logprobs;
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      if (!chunk.success) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: chunk.error,
                        });
                        return;
                      }
                      const value = chunk.value;
                      if ('error' in value) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: value.error,
                        });
                        return;
                      }
                      if (value.usage != null) {
                        usage = {
                          promptTokens: value.usage.prompt_tokens,
                          completionTokens: value.usage.completion_tokens,
                        };
                      }
                      const choice = value.choices[0];
                      if ((choice == null ? void 0 : choice.finish_reason) != null) {
                        finishReason = mapOpenRouterFinishReason(choice.finish_reason);
                      }
                      if ((choice == null ? void 0 : choice.text) != null) {
                        controller.enqueue({
                          type: 'text-delta',
                          textDelta: choice.text,
                        });
                      }
                      const mappedLogprobs = mapOpenRouterCompletionLogProbs(choice == null ? void 0 : choice.logprobs);
                      if (mappedLogprobs == null ? void 0 : mappedLogprobs.length) {
                        if (logprobs === void 0) logprobs = [];
                        logprobs.push(...mappedLogprobs);
                      }
                    },
                    flush(controller) {
                      controller.enqueue({
                        type: 'finish',
                        finishReason,
                        logprobs,
                        usage,
                      });
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings: [],
              };
            }
          };
          var OpenRouterCompletionChunkSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].union([
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].object({
                id: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .optional(),
                model:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .string()
                    .optional(),
                choices:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].array(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                      reasoning:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullish()
                          .optional(),
                      finish_reason:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .string()
                          .nullish(),
                      index:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                      logprobs:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ]
                          .object({
                            tokens:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].array(
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].string(),
                              ),
                            token_logprobs:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].array(
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].number(),
                              ),
                            top_logprobs:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .array(
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].record(
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ].string(),
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'z'
                                    ].number(),
                                  ),
                                )
                                .nullable(),
                          })
                          .nullable()
                          .optional(),
                    }),
                  ),
                usage:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .object({
                      prompt_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                      completion_tokens:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].number(),
                    })
                    .optional()
                    .nullable(),
              }),
              OpenRouterErrorResponseSchema,
            ]);
          // src/openrouter-facade.ts
          var OpenRouter = class {
            /**
             * Creates a new OpenRouter provider instance.
             */ constructor(options = {}) {
              var _a, _b;
              this.baseURL =
                (_b = (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'withoutTrailingSlash'
                ])((_a = options.baseURL) != null ? _a : options.baseUrl)) != null
                  ? _b
                  : 'https://openrouter.ai/api/v1';
              this.apiKey = options.apiKey;
              this.headers = options.headers;
            }
            get baseConfig() {
              return {
                baseURL: this.baseURL,
                headers: () =>
                  __spreadValues(
                    {
                      Authorization: `Bearer ${(0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'loadApiKey'
                      ])({
                        apiKey: this.apiKey,
                        environmentVariableName: 'OPENROUTER_API_KEY',
                        description: 'OpenRouter',
                      })}`,
                    },
                    this.headers,
                  ),
              };
            }
            chat(modelId, settings = {}) {
              return new OpenRouterChatLanguageModel(
                modelId,
                settings,
                __spreadProps(
                  __spreadValues(
                    {
                      provider: 'openrouter.chat',
                    },
                    this.baseConfig,
                  ),
                  {
                    compatibility: 'strict',
                    url: ({ path }) => `${this.baseURL}${path}`,
                  },
                ),
              );
            }
            completion(modelId, settings = {}) {
              return new OpenRouterCompletionLanguageModel(
                modelId,
                settings,
                __spreadProps(
                  __spreadValues(
                    {
                      provider: 'openrouter.completion',
                    },
                    this.baseConfig,
                  ),
                  {
                    compatibility: 'strict',
                    url: ({ path }) => `${this.baseURL}${path}`,
                  },
                ),
              );
            }
          };
          function createOpenRouter(options = {}) {
            var _a, _b, _c;
            const baseURL =
              (_b = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'withoutTrailingSlash'
              ])((_a = options.baseURL) != null ? _a : options.baseUrl)) != null
                ? _b
                : 'https://openrouter.ai/api/v1';
            const compatibility = (_c = options.compatibility) != null ? _c : 'compatible';
            const getHeaders = () =>
              __spreadValues(
                {
                  Authorization: `Bearer ${(0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$10_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'loadApiKey'
                  ])({
                    apiKey: options.apiKey,
                    environmentVariableName: 'OPENROUTER_API_KEY',
                    description: 'OpenRouter',
                  })}`,
                },
                options.headers,
              );
            const createChatModel = (modelId, settings = {}) =>
              new OpenRouterChatLanguageModel(modelId, settings, {
                provider: 'openrouter.chat',
                url: ({ path }) => `${baseURL}${path}`,
                headers: getHeaders,
                compatibility,
                fetch: options.fetch,
                extraBody: options.extraBody,
              });
            const createCompletionModel = (modelId, settings = {}) =>
              new OpenRouterCompletionLanguageModel(modelId, settings, {
                provider: 'openrouter.completion',
                url: ({ path }) => `${baseURL}${path}`,
                headers: getHeaders,
                compatibility,
                fetch: options.fetch,
                extraBody: options.extraBody,
              });
            const createLanguageModel = (modelId, settings) => {
              if (new.target) {
                throw new Error('The OpenRouter model function cannot be called with the new keyword.');
              }
              if (modelId === 'openai/gpt-3.5-turbo-instruct') {
                return createCompletionModel(modelId, settings);
              }
              return createChatModel(modelId, settings);
            };
            const provider = function (modelId, settings) {
              return createLanguageModel(modelId, settings);
            };
            provider.languageModel = createLanguageModel;
            provider.chat = createChatModel;
            provider.completion = createCompletionModel;
            return provider;
          }
          var openrouter = createOpenRouter({
            compatibility: 'strict',
          });
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            fromUtf8: () => fromUtf8,
          });
          const fromUtf8 = (input) => new TextEncoder().encode(input);
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            toUint8Array: () => toUint8Array,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js [app-client] (ecmascript)',
            );
          const toUint8Array = (data) => {
            if (typeof data === 'string') {
              return (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'fromUtf8'
              ])(data);
            }
            if (ArrayBuffer.isView(data)) {
              return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
            }
            return new Uint8Array(data);
          };
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            toUtf8: () => toUtf8,
          });
          const toUtf8 = (input) => {
            if (typeof input === 'string') {
              return input;
            }
            if (
              typeof input !== 'object' ||
              typeof input.byteOffset !== 'number' ||
              typeof input.byteLength !== 'number'
            ) {
              throw new Error('@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.');
            }
            return new TextDecoder('utf-8').decode(input);
          };
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/index.js [app-client] (ecmascript) <locals>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/index.js [app-client] (ecmascript) <module evaluation>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$toUint8Array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$toUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/index.js [app-client] (ecmascript) <locals>',
            );
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            fromUtf8: () => fromUtf8,
          });
          const fromUtf8 = (input) => new TextEncoder().encode(input);
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            toUint8Array: () => toUint8Array,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js [app-client] (ecmascript)',
            );
          const toUint8Array = (data) => {
            if (typeof data === 'string') {
              return (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'fromUtf8'
              ])(data);
            }
            if (ArrayBuffer.isView(data)) {
              return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
            }
            return new Uint8Array(data);
          };
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            toUtf8: () => toUtf8,
          });
          const toUtf8 = (input) => {
            if (typeof input === 'string') {
              return input;
            }
            if (
              typeof input !== 'object' ||
              typeof input.byteOffset !== 'number' ||
              typeof input.byteLength !== 'number'
            ) {
              throw new Error('@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.');
            }
            return new TextDecoder('utf-8').decode(input);
          };
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/index.js [app-client] (ecmascript) <locals>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/index.js [app-client] (ecmascript) <module evaluation>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$toUint8Array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$toUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/index.js [app-client] (ecmascript) <locals>',
            );
        }
      },
    '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/convertToBuffer.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
          // SPDX-License-Identifier: Apache-2.0
          __turbopack_context__.s({
            convertToBuffer: () => convertToBuffer,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/index.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@2.3.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js [app-client] (ecmascript)',
            );
          // Quick polyfill
          var fromUtf8 =
            typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'Buffer'
            ] !== 'undefined' &&
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'Buffer'
            ].from
              ? function (input) {
                  return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'Buffer'
                  ].from(input, 'utf8');
                }
              : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$2$2e$3$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'fromUtf8'
                ];
          function convertToBuffer(data) {
            // Already a Uint8, do nothing
            if (data instanceof Uint8Array) return data;
            if (typeof data === 'string') {
              return fromUtf8(data);
            }
            if (ArrayBuffer.isView(data)) {
              return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
            }
            return new Uint8Array(data);
          } //# sourceMappingURL=convertToBuffer.js.map
        }
      },
    '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/isEmptyData.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
          // SPDX-License-Identifier: Apache-2.0
          __turbopack_context__.s({
            isEmptyData: () => isEmptyData,
          });
          function isEmptyData(data) {
            if (typeof data === 'string') {
              return data.length === 0;
            }
            return data.byteLength === 0;
          } //# sourceMappingURL=isEmptyData.js.map
        }
      },
    '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/numToUint8.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
          // SPDX-License-Identifier: Apache-2.0
          __turbopack_context__.s({
            numToUint8: () => numToUint8,
          });
          function numToUint8(num) {
            return new Uint8Array([
              (num & 0xff000000) >> 24,
              (num & 0x00ff0000) >> 16,
              (num & 0x0000ff00) >> 8,
              num & 0x000000ff,
            ]);
          } //# sourceMappingURL=numToUint8.js.map
        }
      },
    '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/uint32ArrayFrom.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
          // SPDX-License-Identifier: Apache-2.0
          // IE 11 does not support Array.from, so we do it manually
          __turbopack_context__.s({
            uint32ArrayFrom: () => uint32ArrayFrom,
          });
          function uint32ArrayFrom(a_lookUpTable) {
            if (!Uint32Array.from) {
              var return_array = new Uint32Array(a_lookUpTable.length);
              var a_index = 0;
              while (a_index < a_lookUpTable.length) {
                return_array[a_index] = a_lookUpTable[a_index];
                a_index += 1;
              }
              return return_array;
            }
            return Uint32Array.from(a_lookUpTable);
          } //# sourceMappingURL=uint32ArrayFrom.js.map
        }
      },
    '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/index.js [app-client] (ecmascript) <locals>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
          // SPDX-License-Identifier: Apache-2.0
          __turbopack_context__.s({});
          //# sourceMappingURL=index.js.map
        }
      },
    '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/index.js [app-client] (ecmascript) <module evaluation>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$convertToBuffer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/convertToBuffer.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$isEmptyData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/isEmptyData.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$numToUint8$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/numToUint8.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$uint32ArrayFrom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/uint32ArrayFrom.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/index.js [app-client] (ecmascript) <locals>',
            );
        }
      },
    '[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)': (
      __turbopack_context__,
    ) => {
      'use strict';

      var { g: global, __dirname } = __turbopack_context__;
      {
        /******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */ __turbopack_context__.s(
          {
            __addDisposableResource: () => __addDisposableResource,
            __assign: () => __assign,
            __asyncDelegator: () => __asyncDelegator,
            __asyncGenerator: () => __asyncGenerator,
            __asyncValues: () => __asyncValues,
            __await: () => __await,
            __awaiter: () => __awaiter,
            __classPrivateFieldGet: () => __classPrivateFieldGet,
            __classPrivateFieldIn: () => __classPrivateFieldIn,
            __classPrivateFieldSet: () => __classPrivateFieldSet,
            __createBinding: () => __createBinding,
            __decorate: () => __decorate,
            __disposeResources: () => __disposeResources,
            __esDecorate: () => __esDecorate,
            __exportStar: () => __exportStar,
            __extends: () => __extends,
            __generator: () => __generator,
            __importDefault: () => __importDefault,
            __importStar: () => __importStar,
            __makeTemplateObject: () => __makeTemplateObject,
            __metadata: () => __metadata,
            __param: () => __param,
            __propKey: () => __propKey,
            __read: () => __read,
            __rest: () => __rest,
            __rewriteRelativeImportExtension: () => __rewriteRelativeImportExtension,
            __runInitializers: () => __runInitializers,
            __setFunctionName: () => __setFunctionName,
            __spread: () => __spread,
            __spreadArray: () => __spreadArray,
            __spreadArrays: () => __spreadArrays,
            __values: () => __values,
            default: () => __TURBOPACK__default__export__,
          },
        );
        var extendStatics = function (d, b) {
          extendStatics =
            Object.setPrototypeOf ||
            ({
              __proto__: [],
            } instanceof Array &&
              function (d, b) {
                d.__proto__ = b;
              }) ||
            function (d, b) {
              for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
            };
          return extendStatics(d, b);
        };
        function __extends(d, b) {
          if (typeof b !== 'function' && b !== null)
            throw new TypeError('Class extends value ' + String(b) + ' is not a constructor or null');
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
        }
        var __assign = function () {
          __assign =
            Object.assign ||
            function __assign(t) {
              for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
              }
              return t;
            };
          return __assign.apply(this, arguments);
        };
        function __rest(s, e) {
          var t = {};
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
          if (s != null && typeof Object.getOwnPropertySymbols === 'function')
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
              if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
            }
          return t;
        }
        function __decorate(decorators, target, key, desc) {
          var c = arguments.length,
            r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
            d;
          if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
            r = Reflect.decorate(decorators, target, key, desc);
          else
            for (var i = decorators.length - 1; i >= 0; i--)
              if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
          return c > 3 && r && Object.defineProperty(target, key, r), r;
        }
        function __param(paramIndex, decorator) {
          return function (target, key) {
            decorator(target, key, paramIndex);
          };
        }
        function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
          function accept(f) {
            if (f !== void 0 && typeof f !== 'function') throw new TypeError('Function expected');
            return f;
          }
          var kind = contextIn.kind,
            key = kind === 'getter' ? 'get' : kind === 'setter' ? 'set' : 'value';
          var target = !descriptorIn && ctor ? (contextIn['static'] ? ctor : ctor.prototype) : null;
          var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
          var _,
            done = false;
          for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === 'access' ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) {
              if (done) throw new TypeError('Cannot add initializers after decoration has completed');
              extraInitializers.push(accept(f || null));
            };
            var result = (0, decorators[i])(
              kind === 'accessor'
                ? {
                    get: descriptor.get,
                    set: descriptor.set,
                  }
                : descriptor[key],
              context,
            );
            if (kind === 'accessor') {
              if (result === void 0) continue;
              if (result === null || typeof result !== 'object') throw new TypeError('Object expected');
              if ((_ = accept(result.get))) descriptor.get = _;
              if ((_ = accept(result.set))) descriptor.set = _;
              if ((_ = accept(result.init))) initializers.unshift(_);
            } else if ((_ = accept(result))) {
              if (kind === 'field') initializers.unshift(_);
              else descriptor[key] = _;
            }
          }
          if (target) Object.defineProperty(target, contextIn.name, descriptor);
          done = true;
        }
        function __runInitializers(thisArg, initializers, value) {
          var useValue = arguments.length > 2;
          for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
          }
          return useValue ? value : void 0;
        }
        function __propKey(x) {
          return typeof x === 'symbol' ? x : ''.concat(x);
        }
        function __setFunctionName(f, name, prefix) {
          if (typeof name === 'symbol') name = name.description ? '['.concat(name.description, ']') : '';
          return Object.defineProperty(f, 'name', {
            configurable: true,
            value: prefix ? ''.concat(prefix, ' ', name) : name,
          });
        }
        function __metadata(metadataKey, metadataValue) {
          if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function')
            return Reflect.metadata(metadataKey, metadataValue);
        }
        function __awaiter(thisArg, _arguments, P, generator) {
          function adopt(value) {
            return value instanceof P
              ? value
              : new P(function (resolve) {
                  resolve(value);
                });
          }
          return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) {
              try {
                step(generator.next(value));
              } catch (e) {
                reject(e);
              }
            }
            function rejected(value) {
              try {
                step(generator['throw'](value));
              } catch (e) {
                reject(e);
              }
            }
            function step(result) {
              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
            }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
          });
        }
        function __generator(thisArg, body) {
          var _ = {
              label: 0,
              sent: function () {
                if (t[0] & 1) throw t[1];
                return t[1];
              },
              trys: [],
              ops: [],
            },
            f,
            y,
            t,
            g = Object.create((typeof Iterator === 'function' ? Iterator : Object).prototype);
          return (
            (g.next = verb(0)),
            (g['throw'] = verb(1)),
            (g['return'] = verb(2)),
            typeof Symbol === 'function' &&
              (g[Symbol.iterator] = function () {
                return this;
              }),
            g
          );
          ('TURBOPACK unreachable');
          function verb(n) {
            return function (v) {
              return step([n, v]);
            };
          }
          function step(op) {
            if (f) throw new TypeError('Generator is already executing.');
            while ((g && ((g = 0), op[0] && (_ = 0)), _))
              try {
                if (
                  ((f = 1),
                  y &&
                    (t =
                      op[0] & 2 ? y['return'] : op[0] ? y['throw'] || ((t = y['return']) && t.call(y), 0) : y.next) &&
                    !(t = t.call(y, op[1])).done)
                )
                  return t;
                if (((y = 0), t)) op = [op[0] & 2, t.value];
                switch (op[0]) {
                  case 0:
                  case 1:
                    t = op;
                    break;
                  case 4:
                    _.label++;
                    return {
                      value: op[1],
                      done: false,
                    };
                  case 5:
                    _.label++;
                    y = op[1];
                    op = [0];
                    continue;
                  case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                  default:
                    if (!((t = _.trys), (t = t.length > 0 && t[t.length - 1])) && (op[0] === 6 || op[0] === 2)) {
                      _ = 0;
                      continue;
                    }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                      _.label = op[1];
                      break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                      _.label = t[1];
                      t = op;
                      break;
                    }
                    if (t && _.label < t[2]) {
                      _.label = t[2];
                      _.ops.push(op);
                      break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
                }
                op = body.call(thisArg, _);
              } catch (e) {
                op = [6, e];
                y = 0;
              } finally {
                f = t = 0;
              }
            if (op[0] & 5) throw op[1];
            return {
              value: op[0] ? op[1] : void 0,
              done: true,
            };
          }
        }
        var __createBinding = Object.create
          ? function (o, m, k, k2) {
              if (k2 === undefined) k2 = k;
              var desc = Object.getOwnPropertyDescriptor(m, k);
              if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {
                desc = {
                  enumerable: true,
                  get: function () {
                    return m[k];
                  },
                };
              }
              Object.defineProperty(o, k2, desc);
            }
          : function (o, m, k, k2) {
              if (k2 === undefined) k2 = k;
              o[k2] = m[k];
            };
        function __exportStar(m, o) {
          for (var p in m) if (p !== 'default' && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
        }
        function __values(o) {
          var s = typeof Symbol === 'function' && Symbol.iterator,
            m = s && o[s],
            i = 0;
          if (m) return m.call(o);
          if (o && typeof o.length === 'number')
            return {
              next: function () {
                if (o && i >= o.length) o = void 0;
                return {
                  value: o && o[i++],
                  done: !o,
                };
              },
            };
          throw new TypeError(s ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
        }
        function __read(o, n) {
          var m = typeof Symbol === 'function' && o[Symbol.iterator];
          if (!m) return o;
          var i = m.call(o),
            r,
            ar = [],
            e;
          try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
          } catch (error) {
            e = {
              error: error,
            };
          } finally {
            try {
              if (r && !r.done && (m = i['return'])) m.call(i);
            } finally {
              if (e) throw e.error;
            }
          }
          return ar;
        }
        function __spread() {
          for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
          return ar;
        }
        function __spreadArrays() {
          for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
          for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];
          return r;
        }
        function __spreadArray(to, from, pack) {
          if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
              if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
              }
            }
          return to.concat(ar || Array.prototype.slice.call(from));
        }
        function __await(v) {
          return this instanceof __await ? ((this.v = v), this) : new __await(v);
        }
        function __asyncGenerator(thisArg, _arguments, generator) {
          if (!Symbol.asyncIterator) throw new TypeError('Symbol.asyncIterator is not defined.');
          var g = generator.apply(thisArg, _arguments || []),
            i,
            q = [];
          return (
            (i = Object.create((typeof AsyncIterator === 'function' ? AsyncIterator : Object).prototype)),
            verb('next'),
            verb('throw'),
            verb('return', awaitReturn),
            (i[Symbol.asyncIterator] = function () {
              return this;
            }),
            i
          );
          ('TURBOPACK unreachable');
          function awaitReturn(f) {
            return function (v) {
              return Promise.resolve(v).then(f, reject);
            };
          }
          function verb(n, f) {
            if (g[n]) {
              i[n] = function (v) {
                return new Promise(function (a, b) {
                  q.push([n, v, a, b]) > 1 || resume(n, v);
                });
              };
              if (f) i[n] = f(i[n]);
            }
          }
          function resume(n, v) {
            try {
              step(g[n](v));
            } catch (e) {
              settle(q[0][3], e);
            }
          }
          function step(r) {
            r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
          }
          function fulfill(value) {
            resume('next', value);
          }
          function reject(value) {
            resume('throw', value);
          }
          function settle(f, v) {
            if ((f(v), q.shift(), q.length)) resume(q[0][0], q[0][1]);
          }
        }
        function __asyncDelegator(o) {
          var i, p;
          return (
            (i = {}),
            verb('next'),
            verb('throw', function (e) {
              throw e;
            }),
            verb('return'),
            (i[Symbol.iterator] = function () {
              return this;
            }),
            i
          );
          ('TURBOPACK unreachable');
          function verb(n, f) {
            i[n] = o[n]
              ? function (v) {
                  return (p = !p)
                    ? {
                        value: __await(o[n](v)),
                        done: false,
                      }
                    : f
                      ? f(v)
                      : v;
                }
              : f;
          }
        }
        function __asyncValues(o) {
          if (!Symbol.asyncIterator) throw new TypeError('Symbol.asyncIterator is not defined.');
          var m = o[Symbol.asyncIterator],
            i;
          return m
            ? m.call(o)
            : ((o = typeof __values === 'function' ? __values(o) : o[Symbol.iterator]()),
              (i = {}),
              verb('next'),
              verb('throw'),
              verb('return'),
              (i[Symbol.asyncIterator] = function () {
                return this;
              }),
              i);
          ('TURBOPACK unreachable');
          function verb(n) {
            i[n] =
              o[n] &&
              function (v) {
                return new Promise(function (resolve, reject) {
                  (v = o[n](v)), settle(resolve, reject, v.done, v.value);
                });
              };
          }
          function settle(resolve, reject, d, v) {
            Promise.resolve(v).then(function (v) {
              resolve({
                value: v,
                done: d,
              });
            }, reject);
          }
        }
        function __makeTemplateObject(cooked, raw) {
          if (Object.defineProperty) {
            Object.defineProperty(cooked, 'raw', {
              value: raw,
            });
          } else {
            cooked.raw = raw;
          }
          return cooked;
        }
        var __setModuleDefault = Object.create
          ? function (o, v) {
              Object.defineProperty(o, 'default', {
                enumerable: true,
                value: v,
              });
            }
          : function (o, v) {
              o['default'] = v;
            };
        var ownKeys = function (o) {
          ownKeys =
            Object.getOwnPropertyNames ||
            function (o) {
              var ar = [];
              for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
              return ar;
            };
          return ownKeys(o);
        };
        function __importStar(mod) {
          if (mod && mod.__esModule) return mod;
          var result = {};
          if (mod != null) {
            for (var k = ownKeys(mod), i = 0; i < k.length; i++)
              if (k[i] !== 'default') __createBinding(result, mod, k[i]);
          }
          __setModuleDefault(result, mod);
          return result;
        }
        function __importDefault(mod) {
          return mod && mod.__esModule
            ? mod
            : {
                default: mod,
              };
        }
        function __classPrivateFieldGet(receiver, state, kind, f) {
          if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a getter');
          if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError('Cannot read private member from an object whose class did not declare it');
          return kind === 'm' ? f : kind === 'a' ? f.call(receiver) : f ? f.value : state.get(receiver);
        }
        function __classPrivateFieldSet(receiver, state, value, kind, f) {
          if (kind === 'm') throw new TypeError('Private method is not writable');
          if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a setter');
          if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError('Cannot write private member to an object whose class did not declare it');
          return kind === 'a' ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;
        }
        function __classPrivateFieldIn(state, receiver) {
          if (receiver === null || (typeof receiver !== 'object' && typeof receiver !== 'function'))
            throw new TypeError("Cannot use 'in' operator on non-object");
          return typeof state === 'function' ? receiver === state : state.has(receiver);
        }
        function __addDisposableResource(env, value, async) {
          if (value !== null && value !== void 0) {
            if (typeof value !== 'object' && typeof value !== 'function') throw new TypeError('Object expected.');
            var dispose, inner;
            if (async) {
              if (!Symbol.asyncDispose) throw new TypeError('Symbol.asyncDispose is not defined.');
              dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
              if (!Symbol.dispose) throw new TypeError('Symbol.dispose is not defined.');
              dispose = value[Symbol.dispose];
              if (async) inner = dispose;
            }
            if (typeof dispose !== 'function') throw new TypeError('Object not disposable.');
            if (inner)
              dispose = function () {
                try {
                  inner.call(this);
                } catch (e) {
                  return Promise.reject(e);
                }
              };
            env.stack.push({
              value: value,
              dispose: dispose,
              async: async,
            });
          } else if (async) {
            env.stack.push({
              async: true,
            });
          }
          return value;
        }
        var _SuppressedError =
          typeof SuppressedError === 'function'
            ? SuppressedError
            : function (error, suppressed, message) {
                var e = new Error(message);
                return (e.name = 'SuppressedError'), (e.error = error), (e.suppressed = suppressed), e;
              };
        function __disposeResources(env) {
          function fail(e) {
            env.error = env.hasError
              ? new _SuppressedError(e, env.error, 'An error was suppressed during disposal.')
              : e;
            env.hasError = true;
          }
          var r,
            s = 0;
          function next() {
            while ((r = env.stack.pop())) {
              try {
                if (!r.async && s === 1) return (s = 0), env.stack.push(r), Promise.resolve().then(next);
                if (r.dispose) {
                  var result = r.dispose.call(r.value);
                  if (r.async)
                    return (
                      (s |= 2),
                      Promise.resolve(result).then(next, function (e) {
                        fail(e);
                        return next();
                      })
                    );
                } else s |= 1;
              } catch (e) {
                fail(e);
              }
            }
            if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();
            if (env.hasError) throw env.error;
          }
          return next();
        }
        function __rewriteRelativeImportExtension(path, preserveJsx) {
          if (typeof path === 'string' && /^\.\.?\//.test(path)) {
            return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {
              return tsx
                ? preserveJsx
                  ? '.jsx'
                  : '.js'
                : d && (!ext || !cm)
                  ? m
                  : d + ext + '.' + cm.toLowerCase() + 'js';
            });
          }
          return path;
        }
        const __TURBOPACK__default__export__ = {
          __extends,
          __assign,
          __rest,
          __decorate,
          __param,
          __esDecorate,
          __runInitializers,
          __propKey,
          __setFunctionName,
          __metadata,
          __awaiter,
          __generator,
          __createBinding,
          __exportStar,
          __values,
          __read,
          __spread,
          __spreadArrays,
          __spreadArray,
          __await,
          __asyncGenerator,
          __asyncDelegator,
          __asyncValues,
          __makeTemplateObject,
          __importStar,
          __importDefault,
          __classPrivateFieldGet,
          __classPrivateFieldSet,
          __classPrivateFieldIn,
          __addDisposableResource,
          __disposeResources,
          __rewriteRelativeImportExtension,
        };
      }
    },
    '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <locals>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            Crc32: () => Crc32,
            crc32: () => crc32,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$uint32ArrayFrom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/uint32ArrayFrom.js [app-client] (ecmascript)',
            );
          function crc32(data) {
            return new Crc32().update(data).digest();
          }
          var Crc32 = (function () {
            function Crc32() {
              this.checksum = 0xffffffff;
            }
            Crc32.prototype.update = function (data) {
              var e_1, _a;
              try {
                for (
                  var data_1 = (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      '__values'
                    ])(data),
                    data_1_1 = data_1.next();
                  !data_1_1.done;
                  data_1_1 = data_1.next()
                ) {
                  var byte = data_1_1.value;
                  this.checksum = (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];
                }
              } catch (e_1_1) {
                e_1 = {
                  error: e_1_1,
                };
              } finally {
                try {
                  if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
                } finally {
                  if (e_1) throw e_1.error;
                }
              }
              return this;
            };
            Crc32.prototype.digest = function () {
              return (this.checksum ^ 0xffffffff) >>> 0;
            };
            return Crc32;
          })();
          // prettier-ignore
          var a_lookUpTable = [
    0x00000000,
    0x77073096,
    0xEE0E612C,
    0x990951BA,
    0x076DC419,
    0x706AF48F,
    0xE963A535,
    0x9E6495A3,
    0x0EDB8832,
    0x79DCB8A4,
    0xE0D5E91E,
    0x97D2D988,
    0x09B64C2B,
    0x7EB17CBD,
    0xE7B82D07,
    0x90BF1D91,
    0x1DB71064,
    0x6AB020F2,
    0xF3B97148,
    0x84BE41DE,
    0x1ADAD47D,
    0x6DDDE4EB,
    0xF4D4B551,
    0x83D385C7,
    0x136C9856,
    0x646BA8C0,
    0xFD62F97A,
    0x8A65C9EC,
    0x14015C4F,
    0x63066CD9,
    0xFA0F3D63,
    0x8D080DF5,
    0x3B6E20C8,
    0x4C69105E,
    0xD56041E4,
    0xA2677172,
    0x3C03E4D1,
    0x4B04D447,
    0xD20D85FD,
    0xA50AB56B,
    0x35B5A8FA,
    0x42B2986C,
    0xDBBBC9D6,
    0xACBCF940,
    0x32D86CE3,
    0x45DF5C75,
    0xDCD60DCF,
    0xABD13D59,
    0x26D930AC,
    0x51DE003A,
    0xC8D75180,
    0xBFD06116,
    0x21B4F4B5,
    0x56B3C423,
    0xCFBA9599,
    0xB8BDA50F,
    0x2802B89E,
    0x5F058808,
    0xC60CD9B2,
    0xB10BE924,
    0x2F6F7C87,
    0x58684C11,
    0xC1611DAB,
    0xB6662D3D,
    0x76DC4190,
    0x01DB7106,
    0x98D220BC,
    0xEFD5102A,
    0x71B18589,
    0x06B6B51F,
    0x9FBFE4A5,
    0xE8B8D433,
    0x7807C9A2,
    0x0F00F934,
    0x9609A88E,
    0xE10E9818,
    0x7F6A0DBB,
    0x086D3D2D,
    0x91646C97,
    0xE6635C01,
    0x6B6B51F4,
    0x1C6C6162,
    0x856530D8,
    0xF262004E,
    0x6C0695ED,
    0x1B01A57B,
    0x8208F4C1,
    0xF50FC457,
    0x65B0D9C6,
    0x12B7E950,
    0x8BBEB8EA,
    0xFCB9887C,
    0x62DD1DDF,
    0x15DA2D49,
    0x8CD37CF3,
    0xFBD44C65,
    0x4DB26158,
    0x3AB551CE,
    0xA3BC0074,
    0xD4BB30E2,
    0x4ADFA541,
    0x3DD895D7,
    0xA4D1C46D,
    0xD3D6F4FB,
    0x4369E96A,
    0x346ED9FC,
    0xAD678846,
    0xDA60B8D0,
    0x44042D73,
    0x33031DE5,
    0xAA0A4C5F,
    0xDD0D7CC9,
    0x5005713C,
    0x270241AA,
    0xBE0B1010,
    0xC90C2086,
    0x5768B525,
    0x206F85B3,
    0xB966D409,
    0xCE61E49F,
    0x5EDEF90E,
    0x29D9C998,
    0xB0D09822,
    0xC7D7A8B4,
    0x59B33D17,
    0x2EB40D81,
    0xB7BD5C3B,
    0xC0BA6CAD,
    0xEDB88320,
    0x9ABFB3B6,
    0x03B6E20C,
    0x74B1D29A,
    0xEAD54739,
    0x9DD277AF,
    0x04DB2615,
    0x73DC1683,
    0xE3630B12,
    0x94643B84,
    0x0D6D6A3E,
    0x7A6A5AA8,
    0xE40ECF0B,
    0x9309FF9D,
    0x0A00AE27,
    0x7D079EB1,
    0xF00F9344,
    0x8708A3D2,
    0x1E01F268,
    0x6906C2FE,
    0xF762575D,
    0x806567CB,
    0x196C3671,
    0x6E6B06E7,
    0xFED41B76,
    0x89D32BE0,
    0x10DA7A5A,
    0x67DD4ACC,
    0xF9B9DF6F,
    0x8EBEEFF9,
    0x17B7BE43,
    0x60B08ED5,
    0xD6D6A3E8,
    0xA1D1937E,
    0x38D8C2C4,
    0x4FDFF252,
    0xD1BB67F1,
    0xA6BC5767,
    0x3FB506DD,
    0x48B2364B,
    0xD80D2BDA,
    0xAF0A1B4C,
    0x36034AF6,
    0x41047A60,
    0xDF60EFC3,
    0xA867DF55,
    0x316E8EEF,
    0x4669BE79,
    0xCB61B38C,
    0xBC66831A,
    0x256FD2A0,
    0x5268E236,
    0xCC0C7795,
    0xBB0B4703,
    0x220216B9,
    0x5505262F,
    0xC5BA3BBE,
    0xB2BD0B28,
    0x2BB45A92,
    0x5CB36A04,
    0xC2D7FFA7,
    0xB5D0CF31,
    0x2CD99E8B,
    0x5BDEAE1D,
    0x9B64C2B0,
    0xEC63F226,
    0x756AA39C,
    0x026D930A,
    0x9C0906A9,
    0xEB0E363F,
    0x72076785,
    0x05005713,
    0x95BF4A82,
    0xE2B87A14,
    0x7BB12BAE,
    0x0CB61B38,
    0x92D28E9B,
    0xE5D5BE0D,
    0x7CDCEFB7,
    0x0BDBDF21,
    0x86D3D2D4,
    0xF1D4E242,
    0x68DDB3F8,
    0x1FDA836E,
    0x81BE16CD,
    0xF6B9265B,
    0x6FB077E1,
    0x18B74777,
    0x88085AE6,
    0xFF0F6A70,
    0x66063BCA,
    0x11010B5C,
    0x8F659EFF,
    0xF862AE69,
    0x616BFFD3,
    0x166CCF45,
    0xA00AE278,
    0xD70DD2EE,
    0x4E048354,
    0x3903B3C2,
    0xA7672661,
    0xD06016F7,
    0x4969474D,
    0x3E6E77DB,
    0xAED16A4A,
    0xD9D65ADC,
    0x40DF0B66,
    0x37D83BF0,
    0xA9BCAE53,
    0xDEBB9EC5,
    0x47B2CF7F,
    0x30B5FFE9,
    0xBDBDF21C,
    0xCABAC28A,
    0x53B39330,
    0x24B4A3A6,
    0xBAD03605,
    0xCDD70693,
    0x54DE5729,
    0x23D967BF,
    0xB3667A2E,
    0xC4614AB8,
    0x5D681B02,
    0x2A6F2B94,
    0xB40BBE37,
    0xC30C8EA1,
    0x5A05DF1B,
    0x2D02EF8D
];
          var lookupTable = (0,
          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$uint32ArrayFrom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
            'uint32ArrayFrom'
          ])(a_lookUpTable);
          //# sourceMappingURL=index.js.map
        }
      },
    '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/aws_crc32.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
          // SPDX-License-Identifier: Apache-2.0
          __turbopack_context__.s({
            AwsCrc32: () => AwsCrc32,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/index.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$convertToBuffer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/convertToBuffer.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$isEmptyData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/isEmptyData.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$numToUint8$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/numToUint8.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <locals>',
            );
          var AwsCrc32 = (function () {
            function AwsCrc32() {
              this.crc32 =
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__[
                  'Crc32'
                ]();
            }
            AwsCrc32.prototype.update = function (toHash) {
              if (
                (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$isEmptyData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'isEmptyData'
                ])(toHash)
              )
                return;
              this.crc32.update(
                (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$convertToBuffer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'convertToBuffer'
                ])(toHash),
              );
            };
            AwsCrc32.prototype.digest = function () {
              return (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                '__awaiter'
              ])(this, void 0, void 0, function () {
                return (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  '__generator'
                ])(this, function (_a) {
                  return [
                    2 /*return*/,
                    (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$numToUint8$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'numToUint8'
                    ])(this.crc32.digest()),
                  ];
                });
              });
            };
            AwsCrc32.prototype.reset = function () {
              this.crc32 =
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__[
                  'Crc32'
                ]();
            };
            return AwsCrc32;
          })();
          //# sourceMappingURL=aws_crc32.js.map
        }
      },
    '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <module evaluation>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$util$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$util$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+util@5.2.0/node_modules/@aws-crypto/util/build/module/index.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$aws_crc32$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/aws_crc32.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <locals>',
            );
        }
      },
    '[project]/node_modules/.pnpm/@smithy+util-hex-encoding@4.0.0/node_modules/@smithy/util-hex-encoding/dist-es/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            fromHex: () => fromHex,
            toHex: () => toHex,
          });
          const SHORT_TO_HEX = {};
          const HEX_TO_SHORT = {};
          for (let i = 0; i < 256; i++) {
            let encodedByte = i.toString(16).toLowerCase();
            if (encodedByte.length === 1) {
              encodedByte = `0${encodedByte}`;
            }
            SHORT_TO_HEX[i] = encodedByte;
            HEX_TO_SHORT[encodedByte] = i;
          }
          function fromHex(encoded) {
            if (encoded.length % 2 !== 0) {
              throw new Error('Hex encoded strings must have an even number length');
            }
            const out = new Uint8Array(encoded.length / 2);
            for (let i = 0; i < encoded.length; i += 2) {
              const encodedByte = encoded.slice(i, i + 2).toLowerCase();
              if (encodedByte in HEX_TO_SHORT) {
                out[i / 2] = HEX_TO_SHORT[encodedByte];
              } else {
                throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);
              }
            }
            return out;
          }
          function toHex(bytes) {
            let out = '';
            for (let i = 0; i < bytes.byteLength; i++) {
              out += SHORT_TO_HEX[bytes[i]];
            }
            return out;
          }
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/Int64.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            Int64: () => Int64,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-hex-encoding@4.0.0/node_modules/@smithy/util-hex-encoding/dist-es/index.js [app-client] (ecmascript)',
            );
          class Int64 {
            constructor(bytes) {
              this.bytes = bytes;
              if (bytes.byteLength !== 8) {
                throw new Error('Int64 buffers must be exactly 8 bytes');
              }
            }
            static fromNumber(number) {
              if (number > 9223372036854776000 || number < -9223372036854776000) {
                throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);
              }
              const bytes = new Uint8Array(8);
              for (
                let i = 7, remaining = Math.abs(Math.round(number));
                i > -1 && remaining > 0;
                i--, remaining /= 256
              ) {
                bytes[i] = remaining;
              }
              if (number < 0) {
                negate(bytes);
              }
              return new Int64(bytes);
            }
            valueOf() {
              const bytes = this.bytes.slice(0);
              const negative = bytes[0] & 0b10000000;
              if (negative) {
                negate(bytes);
              }
              return (
                parseInt(
                  (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'toHex'
                  ])(bytes),
                  16,
                ) * (negative ? -1 : 1)
              );
            }
            toString() {
              return String(this.valueOf());
            }
          }
          function negate(bytes) {
            for (let i = 0; i < 8; i++) {
              bytes[i] ^= 0xff;
            }
            for (let i = 7; i > -1; i--) {
              bytes[i]++;
              if (bytes[i] !== 0) break;
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/HeaderMarshaller.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            HeaderMarshaller: () => HeaderMarshaller,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-hex-encoding@4.0.0/node_modules/@smithy/util-hex-encoding/dist-es/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$Int64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/Int64.js [app-client] (ecmascript)',
            );
          class HeaderMarshaller {
            constructor(toUtf8, fromUtf8) {
              this.toUtf8 = toUtf8;
              this.fromUtf8 = fromUtf8;
            }
            format(headers) {
              const chunks = [];
              for (const headerName of Object.keys(headers)) {
                const bytes = this.fromUtf8(headerName);
                chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
              }
              const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));
              let position = 0;
              for (const chunk of chunks) {
                out.set(chunk, position);
                position += chunk.byteLength;
              }
              return out;
            }
            formatHeaderValue(header) {
              switch (header.type) {
                case 'boolean':
                  return Uint8Array.from([header.value ? 0 : 1]);
                case 'byte':
                  return Uint8Array.from([2, header.value]);
                case 'short':
                  const shortView = new DataView(new ArrayBuffer(3));
                  shortView.setUint8(0, 3);
                  shortView.setInt16(1, header.value, false);
                  return new Uint8Array(shortView.buffer);
                case 'integer':
                  const intView = new DataView(new ArrayBuffer(5));
                  intView.setUint8(0, 4);
                  intView.setInt32(1, header.value, false);
                  return new Uint8Array(intView.buffer);
                case 'long':
                  const longBytes = new Uint8Array(9);
                  longBytes[0] = 5;
                  longBytes.set(header.value.bytes, 1);
                  return longBytes;
                case 'binary':
                  const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
                  binView.setUint8(0, 6);
                  binView.setUint16(1, header.value.byteLength, false);
                  const binBytes = new Uint8Array(binView.buffer);
                  binBytes.set(header.value, 3);
                  return binBytes;
                case 'string':
                  const utf8Bytes = this.fromUtf8(header.value);
                  const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
                  strView.setUint8(0, 7);
                  strView.setUint16(1, utf8Bytes.byteLength, false);
                  const strBytes = new Uint8Array(strView.buffer);
                  strBytes.set(utf8Bytes, 3);
                  return strBytes;
                case 'timestamp':
                  const tsBytes = new Uint8Array(9);
                  tsBytes[0] = 8;
                  tsBytes.set(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$Int64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'Int64'
                    ].fromNumber(header.value.valueOf()).bytes,
                    1,
                  );
                  return tsBytes;
                case 'uuid':
                  if (!UUID_PATTERN.test(header.value)) {
                    throw new Error(`Invalid UUID received: ${header.value}`);
                  }
                  const uuidBytes = new Uint8Array(17);
                  uuidBytes[0] = 9;
                  uuidBytes.set(
                    (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'fromHex'
                    ])(header.value.replace(/\-/g, '')),
                    1,
                  );
                  return uuidBytes;
              }
            }
            parse(headers) {
              const out = {};
              let position = 0;
              while (position < headers.byteLength) {
                const nameLength = headers.getUint8(position++);
                const name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));
                position += nameLength;
                switch (headers.getUint8(position++)) {
                  case 0:
                    out[name] = {
                      type: BOOLEAN_TAG,
                      value: true,
                    };
                    break;
                  case 1:
                    out[name] = {
                      type: BOOLEAN_TAG,
                      value: false,
                    };
                    break;
                  case 2:
                    out[name] = {
                      type: BYTE_TAG,
                      value: headers.getInt8(position++),
                    };
                    break;
                  case 3:
                    out[name] = {
                      type: SHORT_TAG,
                      value: headers.getInt16(position, false),
                    };
                    position += 2;
                    break;
                  case 4:
                    out[name] = {
                      type: INT_TAG,
                      value: headers.getInt32(position, false),
                    };
                    position += 4;
                    break;
                  case 5:
                    out[name] = {
                      type: LONG_TAG,
                      value:
                        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$Int64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'Int64'
                        ](new Uint8Array(headers.buffer, headers.byteOffset + position, 8)),
                    };
                    position += 8;
                    break;
                  case 6:
                    const binaryLength = headers.getUint16(position, false);
                    position += 2;
                    out[name] = {
                      type: BINARY_TAG,
                      value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength),
                    };
                    position += binaryLength;
                    break;
                  case 7:
                    const stringLength = headers.getUint16(position, false);
                    position += 2;
                    out[name] = {
                      type: STRING_TAG,
                      value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength)),
                    };
                    position += stringLength;
                    break;
                  case 8:
                    out[name] = {
                      type: TIMESTAMP_TAG,
                      value: new Date(
                        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$Int64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'Int64'
                        ](new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf(),
                      ),
                    };
                    position += 8;
                    break;
                  case 9:
                    const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);
                    position += 16;
                    out[name] = {
                      type: UUID_TAG,
                      value: `${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['toHex'])(uuidBytes.subarray(0, 4))}-${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['toHex'])(uuidBytes.subarray(4, 6))}-${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['toHex'])(uuidBytes.subarray(6, 8))}-${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['toHex'])(uuidBytes.subarray(8, 10))}-${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$hex$2d$encoding$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$hex$2d$encoding$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['toHex'])(uuidBytes.subarray(10))}`,
                    };
                    break;
                  default:
                    throw new Error(`Unrecognized header type tag`);
                }
              }
              return out;
            }
          }
          var HEADER_VALUE_TYPE;
          (function (HEADER_VALUE_TYPE) {
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['boolTrue'] = 0)] = 'boolTrue';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['boolFalse'] = 1)] = 'boolFalse';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['byte'] = 2)] = 'byte';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['short'] = 3)] = 'short';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['integer'] = 4)] = 'integer';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['long'] = 5)] = 'long';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['byteArray'] = 6)] = 'byteArray';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['string'] = 7)] = 'string';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['timestamp'] = 8)] = 'timestamp';
            HEADER_VALUE_TYPE[(HEADER_VALUE_TYPE['uuid'] = 9)] = 'uuid';
          })(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));
          const BOOLEAN_TAG = 'boolean';
          const BYTE_TAG = 'byte';
          const SHORT_TAG = 'short';
          const INT_TAG = 'integer';
          const LONG_TAG = 'long';
          const BINARY_TAG = 'binary';
          const STRING_TAG = 'string';
          const TIMESTAMP_TAG = 'timestamp';
          const UUID_TAG = 'uuid';
          const UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/splitMessage.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            splitMessage: () => splitMessage,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <locals>',
            );
          const PRELUDE_MEMBER_LENGTH = 4;
          const PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;
          const CHECKSUM_LENGTH = 4;
          const MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;
          function splitMessage({ byteLength, byteOffset, buffer }) {
            if (byteLength < MINIMUM_MESSAGE_LENGTH) {
              throw new Error('Provided message too short to accommodate event stream message overhead');
            }
            const view = new DataView(buffer, byteOffset, byteLength);
            const messageLength = view.getUint32(0, false);
            if (byteLength !== messageLength) {
              throw new Error('Reported message length does not match received message length');
            }
            const headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);
            const expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);
            const expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);
            const checksummer =
              new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__[
                'Crc32'
              ]().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));
            if (expectedPreludeChecksum !== checksummer.digest()) {
              throw new Error(
                `The prelude checksum specified in the message (${expectedPreludeChecksum}) does not match the calculated CRC32 checksum (${checksummer.digest()})`,
              );
            }
            checksummer.update(
              new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)),
            );
            if (expectedMessageChecksum !== checksummer.digest()) {
              throw new Error(
                `The message checksum (${checksummer.digest()}) did not match the expected value of ${expectedMessageChecksum}`,
              );
            }
            return {
              headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),
              body: new Uint8Array(
                buffer,
                byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength,
                messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH),
              ),
            };
          }
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/EventStreamCodec.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            EventStreamCodec: () => EventStreamCodec,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@aws-crypto+crc32@5.2.0/node_modules/@aws-crypto/crc32/build/module/index.js [app-client] (ecmascript) <locals>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$HeaderMarshaller$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/HeaderMarshaller.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$splitMessage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/splitMessage.js [app-client] (ecmascript)',
            );
          class EventStreamCodec {
            constructor(toUtf8, fromUtf8) {
              this.headerMarshaller =
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$HeaderMarshaller$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'HeaderMarshaller'
                ](toUtf8, fromUtf8);
              this.messageBuffer = [];
              this.isEndOfStream = false;
            }
            feed(message) {
              this.messageBuffer.push(this.decode(message));
            }
            endOfStream() {
              this.isEndOfStream = true;
            }
            getMessage() {
              const message = this.messageBuffer.pop();
              const isEndOfStream = this.isEndOfStream;
              return {
                getMessage() {
                  return message;
                },
                isEndOfStream() {
                  return isEndOfStream;
                },
              };
            }
            getAvailableMessages() {
              const messages = this.messageBuffer;
              this.messageBuffer = [];
              const isEndOfStream = this.isEndOfStream;
              return {
                getMessages() {
                  return messages;
                },
                isEndOfStream() {
                  return isEndOfStream;
                },
              };
            }
            encode({ headers: rawHeaders, body }) {
              const headers = this.headerMarshaller.format(rawHeaders);
              const length = headers.byteLength + body.byteLength + 16;
              const out = new Uint8Array(length);
              const view = new DataView(out.buffer, out.byteOffset, out.byteLength);
              const checksum =
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$aws$2d$crypto$2b$crc32$40$5$2e$2$2e$0$2f$node_modules$2f40$aws$2d$crypto$2f$crc32$2f$build$2f$module$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__[
                  'Crc32'
                ]();
              view.setUint32(0, length, false);
              view.setUint32(4, headers.byteLength, false);
              view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);
              out.set(headers, 12);
              out.set(body, headers.byteLength + 12);
              view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);
              return out;
            }
            decode(message) {
              const { headers, body } = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$splitMessage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'splitMessage'
              ])(message);
              return {
                headers: this.headerMarshaller.parse(headers),
                body,
              };
            }
            formatHeaders(rawHeaders) {
              return this.headerMarshaller.format(rawHeaders);
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/Message.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/MessageDecoderStream.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            MessageDecoderStream: () => MessageDecoderStream,
          });
          class MessageDecoderStream {
            constructor(options) {
              this.options = options;
            }
            [Symbol.asyncIterator]() {
              return this.asyncIterator();
            }
            async *asyncIterator() {
              for await (const bytes of this.options.inputStream) {
                const decoded = this.options.decoder.decode(bytes);
                yield decoded;
              }
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/MessageEncoderStream.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            MessageEncoderStream: () => MessageEncoderStream,
          });
          class MessageEncoderStream {
            constructor(options) {
              this.options = options;
            }
            [Symbol.asyncIterator]() {
              return this.asyncIterator();
            }
            async *asyncIterator() {
              for await (const msg of this.options.messageStream) {
                const encoded = this.options.encoder.encode(msg);
                yield encoded;
              }
              if (this.options.includeEndFrame) {
                yield new Uint8Array(0);
              }
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageDecoderStream.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            SmithyMessageDecoderStream: () => SmithyMessageDecoderStream,
          });
          class SmithyMessageDecoderStream {
            constructor(options) {
              this.options = options;
            }
            [Symbol.asyncIterator]() {
              return this.asyncIterator();
            }
            async *asyncIterator() {
              for await (const message of this.options.messageStream) {
                const deserialized = await this.options.deserializer(message);
                if (deserialized === undefined) continue;
                yield deserialized;
              }
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageEncoderStream.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            SmithyMessageEncoderStream: () => SmithyMessageEncoderStream,
          });
          class SmithyMessageEncoderStream {
            constructor(options) {
              this.options = options;
            }
            [Symbol.asyncIterator]() {
              return this.asyncIterator();
            }
            async *asyncIterator() {
              for await (const chunk of this.options.inputStream) {
                const payloadBuf = this.options.serializer(chunk);
                yield payloadBuf;
              }
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/index.js [app-client] (ecmascript) <locals>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
        }
      },
    '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/index.js [app-client] (ecmascript) <module evaluation>':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({});
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$EventStreamCodec$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/EventStreamCodec.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$HeaderMarshaller$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/HeaderMarshaller.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$Int64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/Int64.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$Message$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/Message.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$MessageDecoderStream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/MessageDecoderStream.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$MessageEncoderStream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/MessageEncoderStream.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$SmithyMessageDecoderStream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageDecoderStream.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$SmithyMessageEncoderStream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageEncoderStream.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/index.js [app-client] (ecmascript) <locals>',
            );
        }
      },
    '[project]/node_modules/.pnpm/aws4fetch@1.0.20/node_modules/aws4fetch/dist/aws4fetch.esm.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          /**
           * @license MIT <https://opensource.org/licenses/MIT>
           * @copyright Michael Hart 2024
           */ __turbopack_context__.s({
            AwsClient: () => AwsClient,
            AwsV4Signer: () => AwsV4Signer,
          });
          const encoder = new TextEncoder();
          const HOST_SERVICES = {
            appstream2: 'appstream',
            cloudhsmv2: 'cloudhsm',
            email: 'ses',
            marketplace: 'aws-marketplace',
            mobile: 'AWSMobileHubService',
            pinpoint: 'mobiletargeting',
            queue: 'sqs',
            'git-codecommit': 'codecommit',
            'mturk-requester-sandbox': 'mturk-requester',
            'personalize-runtime': 'personalize',
          };
          const UNSIGNABLE_HEADERS = new Set([
            'authorization',
            'content-type',
            'content-length',
            'user-agent',
            'presigned-expires',
            'expect',
            'x-amzn-trace-id',
            'range',
            'connection',
          ]);
          class AwsClient {
            constructor({ accessKeyId, secretAccessKey, sessionToken, service, region, cache, retries, initRetryMs }) {
              if (accessKeyId == null) throw new TypeError('accessKeyId is a required option');
              if (secretAccessKey == null) throw new TypeError('secretAccessKey is a required option');
              this.accessKeyId = accessKeyId;
              this.secretAccessKey = secretAccessKey;
              this.sessionToken = sessionToken;
              this.service = service;
              this.region = region;
              this.cache = cache || new Map();
              this.retries = retries != null ? retries : 10;
              this.initRetryMs = initRetryMs || 50;
            }
            async sign(input, init) {
              if (input instanceof Request) {
                const { method, url, headers, body } = input;
                init = Object.assign(
                  {
                    method,
                    url,
                    headers,
                  },
                  init,
                );
                if (init.body == null && headers.has('Content-Type')) {
                  init.body =
                    body != null && headers.has('X-Amz-Content-Sha256') ? body : await input.clone().arrayBuffer();
                }
                input = url;
              }
              const signer = new AwsV4Signer(
                Object.assign(
                  {
                    url: input.toString(),
                  },
                  init,
                  this,
                  init && init.aws,
                ),
              );
              const signed = Object.assign({}, init, await signer.sign());
              delete signed.aws;
              try {
                return new Request(signed.url.toString(), signed);
              } catch (e) {
                if (e instanceof TypeError) {
                  return new Request(
                    signed.url.toString(),
                    Object.assign(
                      {
                        duplex: 'half',
                      },
                      signed,
                    ),
                  );
                }
                throw e;
              }
            }
            async fetch(input, init) {
              for (let i = 0; i <= this.retries; i++) {
                const fetched = fetch(await this.sign(input, init));
                if (i === this.retries) {
                  return fetched;
                }
                const res = await fetched;
                if (res.status < 500 && res.status !== 429) {
                  return res;
                }
                await new Promise((resolve) => setTimeout(resolve, Math.random() * this.initRetryMs * Math.pow(2, i)));
              }
              throw new Error('An unknown error occurred, ensure retries is not negative');
            }
          }
          class AwsV4Signer {
            constructor({
              method,
              url,
              headers,
              body,
              accessKeyId,
              secretAccessKey,
              sessionToken,
              service,
              region,
              cache,
              datetime,
              signQuery,
              appendSessionToken,
              allHeaders,
              singleEncode,
            }) {
              if (url == null) throw new TypeError('url is a required option');
              if (accessKeyId == null) throw new TypeError('accessKeyId is a required option');
              if (secretAccessKey == null) throw new TypeError('secretAccessKey is a required option');
              this.method = method || (body ? 'POST' : 'GET');
              this.url = new URL(url);
              this.headers = new Headers(headers || {});
              this.body = body;
              this.accessKeyId = accessKeyId;
              this.secretAccessKey = secretAccessKey;
              this.sessionToken = sessionToken;
              let guessedService, guessedRegion;
              if (!service || !region) {
                [guessedService, guessedRegion] = guessServiceRegion(this.url, this.headers);
              }
              this.service = service || guessedService || '';
              this.region = region || guessedRegion || 'us-east-1';
              this.cache = cache || new Map();
              this.datetime = datetime || new Date().toISOString().replace(/[:-]|\.\d{3}/g, '');
              this.signQuery = signQuery;
              this.appendSessionToken = appendSessionToken || this.service === 'iotdevicegateway';
              this.headers.delete('Host');
              if (this.service === 's3' && !this.signQuery && !this.headers.has('X-Amz-Content-Sha256')) {
                this.headers.set('X-Amz-Content-Sha256', 'UNSIGNED-PAYLOAD');
              }
              const params = this.signQuery ? this.url.searchParams : this.headers;
              params.set('X-Amz-Date', this.datetime);
              if (this.sessionToken && !this.appendSessionToken) {
                params.set('X-Amz-Security-Token', this.sessionToken);
              }
              this.signableHeaders = ['host', ...this.headers.keys()]
                .filter((header) => allHeaders || !UNSIGNABLE_HEADERS.has(header))
                .sort();
              this.signedHeaders = this.signableHeaders.join(';');
              this.canonicalHeaders = this.signableHeaders
                .map(
                  (header) =>
                    header +
                    ':' +
                    (header === 'host' ? this.url.host : (this.headers.get(header) || '').replace(/\s+/g, ' ')),
                )
                .join('\n');
              this.credentialString = [this.datetime.slice(0, 8), this.region, this.service, 'aws4_request'].join('/');
              if (this.signQuery) {
                if (this.service === 's3' && !params.has('X-Amz-Expires')) {
                  params.set('X-Amz-Expires', '86400');
                }
                params.set('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');
                params.set('X-Amz-Credential', this.accessKeyId + '/' + this.credentialString);
                params.set('X-Amz-SignedHeaders', this.signedHeaders);
              }
              if (this.service === 's3') {
                try {
                  this.encodedPath = decodeURIComponent(this.url.pathname.replace(/\+/g, ' '));
                } catch (e) {
                  this.encodedPath = this.url.pathname;
                }
              } else {
                this.encodedPath = this.url.pathname.replace(/\/+/g, '/');
              }
              if (!singleEncode) {
                this.encodedPath = encodeURIComponent(this.encodedPath).replace(/%2F/g, '/');
              }
              this.encodedPath = encodeRfc3986(this.encodedPath);
              const seenKeys = new Set();
              this.encodedSearch = [...this.url.searchParams]
                .filter(([k]) => {
                  if (!k) return false;
                  if (this.service === 's3') {
                    if (seenKeys.has(k)) return false;
                    seenKeys.add(k);
                  }
                  return true;
                })
                .map((pair) => pair.map((p) => encodeRfc3986(encodeURIComponent(p))))
                .sort(([k1, v1], [k2, v2]) => (k1 < k2 ? -1 : k1 > k2 ? 1 : v1 < v2 ? -1 : v1 > v2 ? 1 : 0))
                .map((pair) => pair.join('='))
                .join('&');
            }
            async sign() {
              if (this.signQuery) {
                this.url.searchParams.set('X-Amz-Signature', await this.signature());
                if (this.sessionToken && this.appendSessionToken) {
                  this.url.searchParams.set('X-Amz-Security-Token', this.sessionToken);
                }
              } else {
                this.headers.set('Authorization', await this.authHeader());
              }
              return {
                method: this.method,
                url: this.url,
                headers: this.headers,
                body: this.body,
              };
            }
            async authHeader() {
              return [
                'AWS4-HMAC-SHA256 Credential=' + this.accessKeyId + '/' + this.credentialString,
                'SignedHeaders=' + this.signedHeaders,
                'Signature=' + (await this.signature()),
              ].join(', ');
            }
            async signature() {
              const date = this.datetime.slice(0, 8);
              const cacheKey = [this.secretAccessKey, date, this.region, this.service].join();
              let kCredentials = this.cache.get(cacheKey);
              if (!kCredentials) {
                const kDate = await hmac('AWS4' + this.secretAccessKey, date);
                const kRegion = await hmac(kDate, this.region);
                const kService = await hmac(kRegion, this.service);
                kCredentials = await hmac(kService, 'aws4_request');
                this.cache.set(cacheKey, kCredentials);
              }
              return buf2hex(await hmac(kCredentials, await this.stringToSign()));
            }
            async stringToSign() {
              return [
                'AWS4-HMAC-SHA256',
                this.datetime,
                this.credentialString,
                buf2hex(await hash(await this.canonicalString())),
              ].join('\n');
            }
            async canonicalString() {
              return [
                this.method.toUpperCase(),
                this.encodedPath,
                this.encodedSearch,
                this.canonicalHeaders + '\n',
                this.signedHeaders,
                await this.hexBodyHash(),
              ].join('\n');
            }
            async hexBodyHash() {
              let hashHeader =
                this.headers.get('X-Amz-Content-Sha256') ||
                (this.service === 's3' && this.signQuery ? 'UNSIGNED-PAYLOAD' : null);
              if (hashHeader == null) {
                if (this.body && typeof this.body !== 'string' && !('byteLength' in this.body)) {
                  throw new Error(
                    'body must be a string, ArrayBuffer or ArrayBufferView, unless you include the X-Amz-Content-Sha256 header',
                  );
                }
                hashHeader = buf2hex(await hash(this.body || ''));
              }
              return hashHeader;
            }
          }
          async function hmac(key, string) {
            const cryptoKey = await crypto.subtle.importKey(
              'raw',
              typeof key === 'string' ? encoder.encode(key) : key,
              {
                name: 'HMAC',
                hash: {
                  name: 'SHA-256',
                },
              },
              false,
              ['sign'],
            );
            return crypto.subtle.sign('HMAC', cryptoKey, encoder.encode(string));
          }
          async function hash(content) {
            return crypto.subtle.digest('SHA-256', typeof content === 'string' ? encoder.encode(content) : content);
          }
          const HEX_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
          function buf2hex(arrayBuffer) {
            const buffer = new Uint8Array(arrayBuffer);
            let out = '';
            for (let idx = 0; idx < buffer.length; idx++) {
              const n = buffer[idx];
              out += HEX_CHARS[(n >>> 4) & 0xf];
              out += HEX_CHARS[n & 0xf];
            }
            return out;
          }
          function encodeRfc3986(urlEncodedStr) {
            return urlEncodedStr.replace(/[!'()*]/g, (c) => '%' + c.charCodeAt(0).toString(16).toUpperCase());
          }
          function guessServiceRegion(url, headers) {
            const { hostname, pathname } = url;
            if (hostname.endsWith('.on.aws')) {
              const match = hostname.match(/^[^.]{1,63}\.lambda-url\.([^.]{1,63})\.on\.aws$/);
              return match != null ? ['lambda', match[1] || ''] : ['', ''];
            }
            if (hostname.endsWith('.r2.cloudflarestorage.com')) {
              return ['s3', 'auto'];
            }
            if (hostname.endsWith('.backblazeb2.com')) {
              const match = hostname.match(/^(?:[^.]{1,63}\.)?s3\.([^.]{1,63})\.backblazeb2\.com$/);
              return match != null ? ['s3', match[1] || ''] : ['', ''];
            }
            const match = hostname
              .replace('dualstack.', '')
              .match(/([^.]{1,63})\.(?:([^.]{0,63})\.)?amazonaws\.com(?:\.cn)?$/);
            let service = (match && match[1]) || '';
            let region = match && match[2];
            if (region === 'us-gov') {
              region = 'us-gov-west-1';
            } else if (region === 's3' || region === 's3-accelerate') {
              region = 'us-east-1';
              service = 's3';
            } else if (service === 'iot') {
              if (hostname.startsWith('iot.')) {
                service = 'execute-api';
              } else if (hostname.startsWith('data.jobs.iot.')) {
                service = 'iot-jobs-data';
              } else {
                service = pathname === '/mqtt' ? 'iotdevicegateway' : 'iotdata';
              }
            } else if (service === 'autoscaling') {
              const targetPrefix = (headers.get('X-Amz-Target') || '').split('.')[0];
              if (targetPrefix === 'AnyScaleFrontendService') {
                service = 'application-autoscaling';
              } else if (targetPrefix === 'AnyScaleScalingPlannerFrontendService') {
                service = 'autoscaling-plans';
              }
            } else if (region == null && service.startsWith('s3-')) {
              region = service.slice(3).replace(/^fips-|^external-1/, '');
              service = 's3';
            } else if (service.endsWith('-fips')) {
              service = service.slice(0, -5);
            } else if (region && /-\d$/.test(service) && !/-\d$/.test(region)) {
              [service, region] = [region, service];
            }
            return [HOST_SERVICES[service] || service, region || ''];
          }
        }
      },
    '[project]/node_modules/.pnpm/@ai-sdk+amazon-bedrock@2.1.3_zod@3.24.2/node_modules/@ai-sdk/amazon-bedrock/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // src/bedrock-provider.ts
          __turbopack_context__.s({
            bedrock: () => bedrock,
            createAmazonBedrock: () => createAmazonBedrock,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider-utils@2.1.13_zod@3.24.2/node_modules/@ai-sdk/provider-utils/dist/index.mjs [app-client] (ecmascript)',
            );
          // src/bedrock-chat-language-model.ts
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@ai-sdk+provider@1.0.11/node_modules/@ai-sdk/provider/dist/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/index.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$EventStreamCodec$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+eventstream-codec@4.0.1/node_modules/@smithy/eventstream-codec/dist-es/EventStreamCodec.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/index.js [app-client] (ecmascript) <module evaluation>',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$toUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@smithy+util-utf8@4.0.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aws4fetch$40$1$2e$0$2e$20$2f$node_modules$2f$aws4fetch$2f$dist$2f$aws4fetch$2e$esm$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/aws4fetch@1.0.20/node_modules/aws4fetch/dist/aws4fetch.esm.mjs [app-client] (ecmascript)',
            );
          // src/bedrock-api-types.ts
          var BEDROCK_CACHE_POINT = {
            cachePoint: {
              type: 'default',
            },
          };
          var BEDROCK_STOP_REASONS = [
            'stop',
            'stop_sequence',
            'end_turn',
            'length',
            'max_tokens',
            'content-filter',
            'content_filtered',
            'guardrail_intervened',
            'tool-calls',
            'tool_use',
          ];
          var BedrockErrorSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              message:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
              type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ]
                .string()
                .nullish(),
            });
          var createBedrockEventStreamResponseHandler =
            (chunkSchema) =>
            async ({ response }) => {
              const responseHeaders = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'extractResponseHeaders'
              ])(response);
              if (response.body == null) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'EmptyResponseBodyError'
                ]({});
              }
              const codec =
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$eventstream$2d$codec$40$4$2e$0$2e$1$2f$node_modules$2f40$smithy$2f$eventstream$2d$codec$2f$dist$2d$es$2f$EventStreamCodec$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'EventStreamCodec'
                ](
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$toUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'toUtf8'
                  ],
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$smithy$2b$util$2d$utf8$40$4$2e$0$2e$0$2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$browser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'fromUtf8'
                  ],
                );
              let buffer = new Uint8Array(0);
              const textDecoder = new TextDecoder();
              return {
                responseHeaders,
                value: response.body.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      var _a, _b;
                      const newBuffer = new Uint8Array(buffer.length + chunk.length);
                      newBuffer.set(buffer);
                      newBuffer.set(chunk, buffer.length);
                      buffer = newBuffer;
                      while (buffer.length >= 4) {
                        const totalLength = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength).getUint32(
                          0,
                          false,
                        );
                        if (buffer.length < totalLength) {
                          break;
                        }
                        try {
                          const subView = buffer.subarray(0, totalLength);
                          const decoded = codec.decode(subView);
                          buffer = buffer.slice(totalLength);
                          if (((_a = decoded.headers[':message-type']) == null ? void 0 : _a.value) === 'event') {
                            const data = textDecoder.decode(decoded.body);
                            const parsedDataResult = (0,
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'safeParseJSON'
                            ])({
                              text: data,
                            });
                            if (!parsedDataResult.success) {
                              controller.enqueue(parsedDataResult);
                              break;
                            }
                            delete parsedDataResult.value.p;
                            let wrappedData = {
                              [(_b = decoded.headers[':event-type']) == null ? void 0 : _b.value]:
                                parsedDataResult.value,
                            };
                            const validatedWrappedData = (0,
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'safeValidateTypes'
                            ])({
                              value: wrappedData,
                              schema: chunkSchema,
                            });
                            if (!validatedWrappedData.success) {
                              controller.enqueue(validatedWrappedData);
                            } else {
                              controller.enqueue({
                                success: true,
                                value: validatedWrappedData.value,
                                rawValue: wrappedData,
                              });
                            }
                          }
                        } catch (e) {
                          break;
                        }
                      }
                    },
                  }),
                ),
              };
            };
          function prepareTools(mode) {
            var _a;
            const tools = ((_a = mode.tools) == null ? void 0 : _a.length) ? mode.tools : void 0;
            if (tools == null) {
              return {
                toolConfig: {
                  tools: void 0,
                  toolChoice: void 0,
                },
                toolWarnings: [],
              };
            }
            const toolWarnings = [];
            const bedrockTools = [];
            for (const tool of tools) {
              if (tool.type === 'provider-defined') {
                toolWarnings.push({
                  type: 'unsupported-tool',
                  tool,
                });
              } else {
                bedrockTools.push({
                  toolSpec: {
                    name: tool.name,
                    description: tool.description,
                    inputSchema: {
                      json: tool.parameters,
                    },
                  },
                });
              }
            }
            const toolChoice = mode.toolChoice;
            if (toolChoice == null) {
              return {
                toolConfig: {
                  tools: bedrockTools,
                  toolChoice: void 0,
                },
                toolWarnings,
              };
            }
            const type = toolChoice.type;
            switch (type) {
              case 'auto':
                return {
                  toolConfig: {
                    tools: bedrockTools,
                    toolChoice: {
                      auto: {},
                    },
                  },
                  toolWarnings,
                };
              case 'required':
                return {
                  toolConfig: {
                    tools: bedrockTools,
                    toolChoice: {
                      any: {},
                    },
                  },
                  toolWarnings,
                };
              case 'none':
                return {
                  toolConfig: {
                    tools: void 0,
                    toolChoice: void 0,
                  },
                  toolWarnings,
                };
              case 'tool':
                return {
                  toolConfig: {
                    tools: bedrockTools,
                    toolChoice: {
                      tool: {
                        name: toolChoice.toolName,
                      },
                    },
                  },
                  toolWarnings,
                };
              default: {
                const _exhaustiveCheck = type;
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'UnsupportedFunctionalityError'
                ]({
                  functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,
                });
              }
            }
          }
          var generateFileId = (0,
          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
            'createIdGenerator'
          ])({
            prefix: 'file',
            size: 16,
          });
          function getCachePoint(providerMetadata) {
            var _a;
            return (_a = providerMetadata == null ? void 0 : providerMetadata.bedrock) == null ? void 0 : _a.cachePoint;
          }
          function convertToBedrockChatMessages(prompt) {
            var _a, _b, _c, _d, _e;
            const blocks = groupIntoBlocks(prompt);
            let system = [];
            const messages = [];
            for (let i = 0; i < blocks.length; i++) {
              const block = blocks[i];
              const isLastBlock = i === blocks.length - 1;
              const type = block.type;
              switch (type) {
                case 'system': {
                  if (messages.length > 0) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'UnsupportedFunctionalityError'
                    ]({
                      functionality: 'Multiple system messages that are separated by user/assistant messages',
                    });
                  }
                  for (const message of block.messages) {
                    system.push({
                      text: message.content,
                    });
                    if (getCachePoint(message.providerMetadata)) {
                      system.push(BEDROCK_CACHE_POINT);
                    }
                  }
                  break;
                }
                case 'user': {
                  const bedrockContent = [];
                  for (const message of block.messages) {
                    const { role, content, providerMetadata } = message;
                    switch (role) {
                      case 'user': {
                        for (let j = 0; j < content.length; j++) {
                          const part = content[j];
                          switch (part.type) {
                            case 'text': {
                              bedrockContent.push({
                                text: part.text,
                              });
                              break;
                            }
                            case 'image': {
                              if (part.image instanceof URL) {
                                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'UnsupportedFunctionalityError'
                                ]({
                                  functionality: 'Image URLs in user messages',
                                });
                              }
                              bedrockContent.push({
                                image: {
                                  format:
                                    (_b = (_a = part.mimeType) == null ? void 0 : _a.split('/')) == null
                                      ? void 0
                                      : _b[1],
                                  source: {
                                    bytes: (0,
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                      'convertUint8ArrayToBase64'
                                    ])((_c = part.image) != null ? _c : part.image),
                                  },
                                },
                              });
                              break;
                            }
                            case 'file': {
                              if (part.data instanceof URL) {
                                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'UnsupportedFunctionalityError'
                                ]({
                                  functionality: 'File URLs in user messages',
                                });
                              }
                              bedrockContent.push({
                                document: {
                                  format:
                                    (_e = (_d = part.mimeType) == null ? void 0 : _d.split('/')) == null
                                      ? void 0
                                      : _e[1],
                                  name: generateFileId(),
                                  source: {
                                    bytes: part.data,
                                  },
                                },
                              });
                              break;
                            }
                          }
                        }
                        break;
                      }
                      case 'tool': {
                        for (let i2 = 0; i2 < content.length; i2++) {
                          const part = content[i2];
                          bedrockContent.push({
                            toolResult: {
                              toolUseId: part.toolCallId,
                              content: [
                                {
                                  text: JSON.stringify(part.result),
                                },
                              ],
                            },
                          });
                        }
                        break;
                      }
                      default: {
                        const _exhaustiveCheck = role;
                        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                      }
                    }
                    if (getCachePoint(providerMetadata)) {
                      bedrockContent.push(BEDROCK_CACHE_POINT);
                    }
                  }
                  messages.push({
                    role: 'user',
                    content: bedrockContent,
                  });
                  break;
                }
                case 'assistant': {
                  const bedrockContent = [];
                  for (let j = 0; j < block.messages.length; j++) {
                    const message = block.messages[j];
                    const isLastMessage = j === block.messages.length - 1;
                    const { content } = message;
                    for (let k = 0; k < content.length; k++) {
                      const part = content[k];
                      const isLastContentPart = k === content.length - 1;
                      switch (part.type) {
                        case 'text': {
                          bedrockContent.push({
                            // trim the last text part if it's the last message in the block
                            text:
                              // because Bedrock does not allow trailing whitespace
                              // in pre-filled assistant responses
                              trimIfLast(isLastBlock, isLastMessage, isLastContentPart, part.text),
                          });
                          break;
                        }
                        case 'reasoning': {
                          bedrockContent.push({
                            reasoningContent: {
                              reasoningText: {
                                // trim the last text part if it's the last message in the block
                                // because Bedrock does not allow trailing whitespace
                                // in pre-filled assistant responses
                                text: trimIfLast(isLastBlock, isLastMessage, isLastContentPart, part.text),
                                signature: part.signature,
                              },
                            },
                          });
                          break;
                        }
                        case 'redacted-reasoning': {
                          bedrockContent.push({
                            reasoningContent: {
                              redactedReasoning: {
                                data: part.data,
                              },
                            },
                          });
                          break;
                        }
                        case 'tool-call': {
                          bedrockContent.push({
                            toolUse: {
                              toolUseId: part.toolCallId,
                              name: part.toolName,
                              input: part.args,
                            },
                          });
                          break;
                        }
                      }
                    }
                    if (getCachePoint(message.providerMetadata)) {
                      bedrockContent.push(BEDROCK_CACHE_POINT);
                    }
                  }
                  messages.push({
                    role: 'assistant',
                    content: bedrockContent,
                  });
                  break;
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            return {
              system,
              messages,
            };
          }
          function trimIfLast(isLastBlock, isLastMessage, isLastContentPart, text) {
            return isLastBlock && isLastMessage && isLastContentPart ? text.trim() : text;
          }
          function groupIntoBlocks(prompt) {
            const blocks = [];
            let currentBlock = void 0;
            for (const message of prompt) {
              const { role } = message;
              switch (role) {
                case 'system': {
                  if ((currentBlock == null ? void 0 : currentBlock.type) !== 'system') {
                    currentBlock = {
                      type: 'system',
                      messages: [],
                    };
                    blocks.push(currentBlock);
                  }
                  currentBlock.messages.push(message);
                  break;
                }
                case 'assistant': {
                  if ((currentBlock == null ? void 0 : currentBlock.type) !== 'assistant') {
                    currentBlock = {
                      type: 'assistant',
                      messages: [],
                    };
                    blocks.push(currentBlock);
                  }
                  currentBlock.messages.push(message);
                  break;
                }
                case 'user': {
                  if ((currentBlock == null ? void 0 : currentBlock.type) !== 'user') {
                    currentBlock = {
                      type: 'user',
                      messages: [],
                    };
                    blocks.push(currentBlock);
                  }
                  currentBlock.messages.push(message);
                  break;
                }
                case 'tool': {
                  if ((currentBlock == null ? void 0 : currentBlock.type) !== 'user') {
                    currentBlock = {
                      type: 'user',
                      messages: [],
                    };
                    blocks.push(currentBlock);
                  }
                  currentBlock.messages.push(message);
                  break;
                }
                default: {
                  const _exhaustiveCheck = role;
                  throw new Error(`Unsupported role: ${_exhaustiveCheck}`);
                }
              }
            }
            return blocks;
          }
          // src/map-bedrock-finish-reason.ts
          function mapBedrockFinishReason(finishReason) {
            switch (finishReason) {
              case 'stop_sequence':
              case 'end_turn':
                return 'stop';
              case 'max_tokens':
                return 'length';
              case 'content_filtered':
              case 'guardrail_intervened':
                return 'content-filter';
              case 'tool_use':
                return 'tool-calls';
              default:
                return 'unknown';
            }
          }
          // src/bedrock-chat-language-model.ts
          var BedrockChatLanguageModel = class {
            constructor(modelId, settings, config) {
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
              this.specificationVersion = 'v1';
              this.provider = 'amazon-bedrock';
              this.defaultObjectGenerationMode = 'tool';
              this.supportsImageUrls = false;
            }
            getArgs({
              mode,
              prompt,
              maxTokens,
              temperature,
              topP,
              topK,
              frequencyPenalty,
              presencePenalty,
              stopSequences,
              responseFormat,
              seed,
              providerMetadata,
            }) {
              var _a, _b, _c, _d, _e, _f, _g;
              const type = mode.type;
              const warnings = [];
              if (frequencyPenalty != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'frequencyPenalty',
                });
              }
              if (presencePenalty != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'presencePenalty',
                });
              }
              if (seed != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'seed',
                });
              }
              if (topK != null) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'topK',
                });
              }
              if (responseFormat != null && responseFormat.type !== 'text') {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'responseFormat',
                  details: 'JSON response format is not supported.',
                });
              }
              const { system, messages } = convertToBedrockChatMessages(prompt);
              const reasoningConfigOptions = BedrockReasoningConfigOptionsSchema.safeParse(
                (_a = providerMetadata == null ? void 0 : providerMetadata.bedrock) == null
                  ? void 0
                  : _a.reasoning_config,
              );
              if (!reasoningConfigOptions.success) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'InvalidArgumentError'
                ]({
                  argument: 'providerOptions.bedrock.reasoning_config',
                  message: 'invalid reasoning configuration options',
                  cause: reasoningConfigOptions.error,
                });
              }
              const isThinking = ((_b = reasoningConfigOptions.data) == null ? void 0 : _b.type) === 'enabled';
              const thinkingBudget =
                (_e = (_c = reasoningConfigOptions.data) == null ? void 0 : _c.budgetTokens) != null
                  ? _e
                  : (_d = reasoningConfigOptions.data) == null
                    ? void 0
                    : _d.budget_tokens;
              const inferenceConfig = {
                ...(maxTokens != null && {
                  maxTokens,
                }),
                ...(temperature != null && {
                  temperature,
                }),
                ...(topP != null && {
                  topP,
                }),
                ...(stopSequences != null && {
                  stopSequences,
                }),
              };
              if (isThinking && thinkingBudget != null) {
                if (inferenceConfig.maxTokens != null) {
                  inferenceConfig.maxTokens += thinkingBudget;
                } else {
                  inferenceConfig.maxTokens = thinkingBudget + 4096;
                }
                this.settings.additionalModelRequestFields = {
                  ...this.settings.additionalModelRequestFields,
                  reasoning_config: {
                    type: (_f = reasoningConfigOptions.data) == null ? void 0 : _f.type,
                    budget_tokens: thinkingBudget,
                  },
                };
              }
              if (isThinking && inferenceConfig.temperature != null) {
                delete inferenceConfig.temperature;
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'temperature',
                  details: 'temperature is not supported when thinking is enabled',
                });
              }
              if (isThinking && inferenceConfig.topP != null) {
                delete inferenceConfig.topP;
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'topP',
                  details: 'topP is not supported when thinking is enabled',
                });
              }
              const baseArgs = {
                system,
                additionalModelRequestFields: this.settings.additionalModelRequestFields,
                ...(Object.keys(inferenceConfig).length > 0 && {
                  inferenceConfig,
                }),
                messages,
                ...(providerMetadata == null ? void 0 : providerMetadata.bedrock),
              };
              switch (type) {
                case 'regular': {
                  const { toolConfig, toolWarnings } = prepareTools(mode);
                  return {
                    command: {
                      ...baseArgs,
                      ...(((_g = toolConfig.tools) == null ? void 0 : _g.length)
                        ? {
                            toolConfig,
                          }
                        : {}),
                    },
                    warnings: [...warnings, ...toolWarnings],
                  };
                }
                case 'object-json': {
                  throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$40$1$2e$0$2e$11$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'UnsupportedFunctionalityError'
                  ]({
                    functionality: 'json-mode object generation',
                  });
                }
                case 'object-tool': {
                  return {
                    command: {
                      ...baseArgs,
                      toolConfig: {
                        tools: [
                          {
                            toolSpec: {
                              name: mode.tool.name,
                              description: mode.tool.description,
                              inputSchema: {
                                json: mode.tool.parameters,
                              },
                            },
                          },
                        ],
                        toolChoice: {
                          tool: {
                            name: mode.tool.name,
                          },
                        },
                      },
                    },
                    warnings,
                  };
                }
                default: {
                  const _exhaustiveCheck = type;
                  throw new Error(`Unsupported type: ${_exhaustiveCheck}`);
                }
              }
            }
            async doGenerate(options) {
              var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;
              const { command: args, warnings } = this.getArgs(options);
              const url = `${this.getUrl(this.modelId)}/converse`;
              const { value: response, responseHeaders } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(
                  await (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'resolve'
                  ])(this.config.headers),
                  options.headers,
                ),
                body: args,
                failedResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonErrorResponseHandler'
                ])({
                  errorSchema: BedrockErrorSchema,
                  errorToMessage: (error) => {
                    var _a2;
                    return `${(_a2 = error.message) != null ? _a2 : 'Unknown error'}`;
                  },
                }),
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(BedrockResponseSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages: rawPrompt, ...rawSettings } = args;
              const providerMetadata =
                response.trace || response.usage
                  ? {
                      bedrock: {
                        ...(response.trace && typeof response.trace === 'object'
                          ? {
                              trace: response.trace,
                            }
                          : {}),
                        ...(response.usage && {
                          usage: {
                            cacheReadInputTokens:
                              (_b = (_a = response.usage) == null ? void 0 : _a.cacheReadInputTokens) != null
                                ? _b
                                : Number.NaN,
                            cacheWriteInputTokens:
                              (_d = (_c = response.usage) == null ? void 0 : _c.cacheWriteInputTokens) != null
                                ? _d
                                : Number.NaN,
                          },
                        }),
                      },
                    }
                  : void 0;
              const reasoning = response.output.message.content
                .filter((content) => content.reasoningContent)
                .map((content) => {
                  var _a2;
                  if (content.reasoningContent && 'reasoningText' in content.reasoningContent) {
                    return {
                      type: 'text',
                      text: content.reasoningContent.reasoningText.text,
                      ...(content.reasoningContent.reasoningText.signature && {
                        signature: content.reasoningContent.reasoningText.signature,
                      }),
                    };
                  } else if (content.reasoningContent && 'redactedReasoning' in content.reasoningContent) {
                    return {
                      type: 'redacted',
                      data: (_a2 = content.reasoningContent.redactedReasoning.data) != null ? _a2 : '',
                    };
                  } else {
                    return void 0;
                  }
                })
                .filter((item) => item !== void 0);
              return {
                text:
                  (_h =
                    (_g = (_f = (_e = response.output) == null ? void 0 : _e.message) == null ? void 0 : _f.content) ==
                    null
                      ? void 0
                      : _g
                          .map((part) => {
                            var _a2;
                            return (_a2 = part.text) != null ? _a2 : '';
                          })
                          .join('')) != null
                    ? _h
                    : void 0,
                toolCalls:
                  (_l =
                    (_k = (_j = (_i = response.output) == null ? void 0 : _i.message) == null ? void 0 : _j.content) ==
                    null
                      ? void 0
                      : _k.filter((part) => !!part.toolUse)) == null
                    ? void 0
                    : _l.map((part) => {
                        var _a2, _b2, _c2, _d2, _e2, _f2;
                        return {
                          toolCallType: 'function',
                          toolCallId:
                            (_b2 = (_a2 = part.toolUse) == null ? void 0 : _a2.toolUseId) != null
                              ? _b2
                              : this.config.generateId(),
                          toolName:
                            (_d2 = (_c2 = part.toolUse) == null ? void 0 : _c2.name) != null
                              ? _d2
                              : `tool-${this.config.generateId()}`,
                          args: JSON.stringify(
                            (_f2 = (_e2 = part.toolUse) == null ? void 0 : _e2.input) != null ? _f2 : '',
                          ),
                        };
                      }),
                finishReason: mapBedrockFinishReason(response.stopReason),
                usage: {
                  promptTokens:
                    (_n = (_m = response.usage) == null ? void 0 : _m.inputTokens) != null ? _n : Number.NaN,
                  completionTokens:
                    (_p = (_o = response.usage) == null ? void 0 : _o.outputTokens) != null ? _p : Number.NaN,
                },
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings,
                reasoning: reasoning.length > 0 ? reasoning : void 0,
                ...(providerMetadata && {
                  providerMetadata,
                }),
              };
            }
            async doStream(options) {
              const { command: args, warnings } = this.getArgs(options);
              const url = `${this.getUrl(this.modelId)}/converse-stream`;
              const { value: response, responseHeaders } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'combineHeaders'
                ])(
                  await (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'resolve'
                  ])(this.config.headers),
                  options.headers,
                ),
                body: args,
                failedResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonErrorResponseHandler'
                ])({
                  errorSchema: BedrockErrorSchema,
                  errorToMessage: (error) => `${error.type}: ${error.message}`,
                }),
                successfulResponseHandler: createBedrockEventStreamResponseHandler(BedrockStreamSchema),
                abortSignal: options.abortSignal,
                fetch: this.config.fetch,
              });
              const { messages: rawPrompt, ...rawSettings } = args;
              let finishReason = 'unknown';
              let usage = {
                promptTokens: Number.NaN,
                completionTokens: Number.NaN,
              };
              let providerMetadata = void 0;
              const toolCallContentBlocks = {};
              return {
                stream: response.pipeThrough(
                  new TransformStream({
                    transform(chunk, controller) {
                      var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;
                      function enqueueError(bedrockError) {
                        finishReason = 'error';
                        controller.enqueue({
                          type: 'error',
                          error: bedrockError,
                        });
                      }
                      if (!chunk.success) {
                        enqueueError(chunk.error);
                        return;
                      }
                      const value = chunk.value;
                      if (value.internalServerException) {
                        enqueueError(value.internalServerException);
                        return;
                      }
                      if (value.modelStreamErrorException) {
                        enqueueError(value.modelStreamErrorException);
                        return;
                      }
                      if (value.throttlingException) {
                        enqueueError(value.throttlingException);
                        return;
                      }
                      if (value.validationException) {
                        enqueueError(value.validationException);
                        return;
                      }
                      if (value.messageStop) {
                        finishReason = mapBedrockFinishReason(value.messageStop.stopReason);
                      }
                      if (value.metadata) {
                        usage = {
                          promptTokens:
                            (_b = (_a = value.metadata.usage) == null ? void 0 : _a.inputTokens) != null
                              ? _b
                              : Number.NaN,
                          completionTokens:
                            (_d = (_c = value.metadata.usage) == null ? void 0 : _c.outputTokens) != null
                              ? _d
                              : Number.NaN,
                        };
                        const cacheUsage =
                          ((_e = value.metadata.usage) == null ? void 0 : _e.cacheReadInputTokens) != null ||
                          ((_f = value.metadata.usage) == null ? void 0 : _f.cacheWriteInputTokens) != null
                            ? {
                                usage: {
                                  cacheReadInputTokens:
                                    (_h = (_g = value.metadata.usage) == null ? void 0 : _g.cacheReadInputTokens) !=
                                    null
                                      ? _h
                                      : Number.NaN,
                                  cacheWriteInputTokens:
                                    (_j = (_i = value.metadata.usage) == null ? void 0 : _i.cacheWriteInputTokens) !=
                                    null
                                      ? _j
                                      : Number.NaN,
                                },
                              }
                            : void 0;
                        const trace = value.metadata.trace
                          ? {
                              trace: value.metadata.trace,
                            }
                          : void 0;
                        if (cacheUsage || trace) {
                          providerMetadata = {
                            bedrock: {
                              ...cacheUsage,
                              ...trace,
                            },
                          };
                        }
                      }
                      if (
                        ((_k = value.contentBlockDelta) == null ? void 0 : _k.delta) &&
                        'text' in value.contentBlockDelta.delta &&
                        value.contentBlockDelta.delta.text
                      ) {
                        controller.enqueue({
                          type: 'text-delta',
                          textDelta: value.contentBlockDelta.delta.text,
                        });
                      }
                      if (
                        ((_l = value.contentBlockDelta) == null ? void 0 : _l.delta) &&
                        'reasoningContent' in value.contentBlockDelta.delta &&
                        value.contentBlockDelta.delta.reasoningContent
                      ) {
                        const reasoningContent = value.contentBlockDelta.delta.reasoningContent;
                        if ('text' in reasoningContent && reasoningContent.text) {
                          controller.enqueue({
                            type: 'reasoning',
                            textDelta: reasoningContent.text,
                          });
                        } else if ('signature' in reasoningContent && reasoningContent.signature) {
                          controller.enqueue({
                            type: 'reasoning-signature',
                            signature: reasoningContent.signature,
                          });
                        } else if ('data' in reasoningContent && reasoningContent.data) {
                          controller.enqueue({
                            type: 'redacted-reasoning',
                            data: reasoningContent.data,
                          });
                        }
                      }
                      const contentBlockStart = value.contentBlockStart;
                      if (
                        ((_m = contentBlockStart == null ? void 0 : contentBlockStart.start) == null
                          ? void 0
                          : _m.toolUse) != null
                      ) {
                        const toolUse = contentBlockStart.start.toolUse;
                        toolCallContentBlocks[contentBlockStart.contentBlockIndex] = {
                          toolCallId: toolUse.toolUseId,
                          toolName: toolUse.name,
                          jsonText: '',
                        };
                      }
                      const contentBlockDelta = value.contentBlockDelta;
                      if (
                        (contentBlockDelta == null ? void 0 : contentBlockDelta.delta) &&
                        'toolUse' in contentBlockDelta.delta &&
                        contentBlockDelta.delta.toolUse
                      ) {
                        const contentBlock = toolCallContentBlocks[contentBlockDelta.contentBlockIndex];
                        const delta = (_n = contentBlockDelta.delta.toolUse.input) != null ? _n : '';
                        controller.enqueue({
                          type: 'tool-call-delta',
                          toolCallType: 'function',
                          toolCallId: contentBlock.toolCallId,
                          toolName: contentBlock.toolName,
                          argsTextDelta: delta,
                        });
                        contentBlock.jsonText += delta;
                      }
                      const contentBlockStop = value.contentBlockStop;
                      if (contentBlockStop != null) {
                        const index = contentBlockStop.contentBlockIndex;
                        const contentBlock = toolCallContentBlocks[index];
                        if (contentBlock != null) {
                          controller.enqueue({
                            type: 'tool-call',
                            toolCallType: 'function',
                            toolCallId: contentBlock.toolCallId,
                            toolName: contentBlock.toolName,
                            args: contentBlock.jsonText,
                          });
                          delete toolCallContentBlocks[index];
                        }
                      }
                    },
                    flush(controller) {
                      controller.enqueue({
                        type: 'finish',
                        finishReason,
                        usage,
                        ...(providerMetadata && {
                          providerMetadata,
                        }),
                      });
                    },
                  }),
                ),
                rawCall: {
                  rawPrompt,
                  rawSettings,
                },
                rawResponse: {
                  headers: responseHeaders,
                },
                warnings,
              };
            }
            getUrl(modelId) {
              const encodedModelId = encodeURIComponent(modelId);
              return `${this.config.baseUrl()}/model/${encodedModelId}`;
            }
          };
          var BedrockReasoningConfigOptionsSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ]
              .object({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .union([
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].literal('enabled'),
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].literal('disabled'),
                  ])
                  .nullish(),
                budget_tokens:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .number()
                    .nullish(),
                budgetTokens:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ]
                    .number()
                    .nullish(),
              })
              .nullish();
          var BedrockStopReasonSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].union([
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].enum(BEDROCK_STOP_REASONS),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].string(),
            ]);
          var BedrockToolUseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              toolUseId:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].string(),
              name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].string(),
              input:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].unknown(),
            });
          var BedrockReasoningTextSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              signature:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .string()
                  .nullish(),
              text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].string(),
            });
          var BedrockRedactedReasoningSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              data: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'z'
              ].string(),
            });
          var BedrockResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              metrics:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    latencyMs:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  })
                  .nullish(),
              output:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  message:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].object({
                      content:
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'z'
                        ].array(
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ]
                              .string()
                              .nullish(),
                            toolUse: BedrockToolUseSchema.nullish(),
                            reasoningContent:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ]
                                .union([
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].object({
                                    reasoningText: BedrockReasoningTextSchema,
                                  }),
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].object({
                                    redactedReasoning: BedrockRedactedReasoningSchema,
                                  }),
                                ])
                                .nullish(),
                          }),
                        ),
                      role: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].string(),
                    }),
                }),
              stopReason: BedrockStopReasonSchema,
              trace:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .unknown()
                  .nullish(),
              usage:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].object({
                  inputTokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].number(),
                  outputTokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].number(),
                  totalTokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].number(),
                  cacheReadInputTokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .nullish(),
                  cacheWriteInputTokens:
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ]
                      .number()
                      .nullish(),
                }),
            });
          var BedrockStreamSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              contentBlockDelta:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    contentBlockIndex:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    delta:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .union([
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].string(),
                          }),
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            toolUse:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                input:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].string(),
                              }),
                          }),
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            reasoningContent:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].string(),
                              }),
                          }),
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            reasoningContent:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                signature:
                                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                    'z'
                                  ].string(),
                              }),
                          }),
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].object({
                            reasoningContent:
                              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                'z'
                              ].object({
                                data: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                                  'z'
                                ].string(),
                              }),
                          }),
                        ])
                        .nullish(),
                  })
                  .nullish(),
              contentBlockStart:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    contentBlockIndex:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                    start:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .object({
                          toolUse: BedrockToolUseSchema.nullish(),
                        })
                        .nullish(),
                  })
                  .nullish(),
              contentBlockStop:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    contentBlockIndex:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ].number(),
                  })
                  .nullish(),
              internalServerException:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .record(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].unknown(),
                  )
                  .nullish(),
              messageStop:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    additionalModelResponseFields:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .record(
                          __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                            'z'
                          ].unknown(),
                        )
                        .nullish(),
                    stopReason: BedrockStopReasonSchema,
                  })
                  .nullish(),
              metadata:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .object({
                    trace:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .unknown()
                        .nullish(),
                    usage:
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'z'
                      ]
                        .object({
                          cacheReadInputTokens:
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ]
                              .number()
                              .nullish(),
                          cacheWriteInputTokens:
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ]
                              .number()
                              .nullish(),
                          inputTokens:
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].number(),
                          outputTokens:
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                              'z'
                            ].number(),
                        })
                        .nullish(),
                  })
                  .nullish(),
              modelStreamErrorException:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .record(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].unknown(),
                  )
                  .nullish(),
              throttlingException:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .record(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].unknown(),
                  )
                  .nullish(),
              validationException:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ]
                  .record(
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'z'
                    ].unknown(),
                  )
                  .nullish(),
            });
          var BedrockEmbeddingModel = class {
            constructor(modelId, settings, config) {
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
              this.specificationVersion = 'v1';
              this.provider = 'amazon-bedrock';
              this.maxEmbeddingsPerCall = void 0;
              this.supportsParallelCalls = true;
            }
            getUrl(modelId) {
              const encodedModelId = encodeURIComponent(modelId);
              return `${this.config.baseUrl()}/model/${encodedModelId}/invoke`;
            }
            async doEmbed({ values, headers, abortSignal }) {
              const embedSingleText = async (inputText) => {
                const args = {
                  inputText,
                  dimensions: this.settings.dimensions,
                  normalize: this.settings.normalize,
                };
                const url = this.getUrl(this.modelId);
                const { value: response } = await (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'postJsonToApi'
                ])({
                  url,
                  headers: await (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'resolve'
                  ])(
                    (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'combineHeaders'
                    ])(
                      await (0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'resolve'
                      ])(this.config.headers),
                      headers,
                    ),
                  ),
                  body: args,
                  failedResponseHandler: (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'createJsonErrorResponseHandler'
                  ])({
                    errorSchema: BedrockErrorSchema,
                    errorToMessage: (error) => `${error.type}: ${error.message}`,
                  }),
                  successfulResponseHandler: (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'createJsonResponseHandler'
                  ])(BedrockEmbeddingResponseSchema),
                  fetch: this.config.fetch,
                  abortSignal,
                });
                return {
                  embedding: response.embedding,
                  inputTextTokenCount: response.inputTextTokenCount,
                };
              };
              const responses = await Promise.all(values.map(embedSingleText));
              return responses.reduce(
                (accumulated, response) => {
                  accumulated.embeddings.push(response.embedding);
                  accumulated.usage.tokens += response.inputTextTokenCount;
                  return accumulated;
                },
                {
                  embeddings: [],
                  usage: {
                    tokens: 0,
                  },
                },
              );
            }
          };
          var BedrockEmbeddingResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              embedding:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].number(),
                ),
              inputTextTokenCount:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].number(),
            });
          // src/bedrock-image-settings.ts
          var modelMaxImagesPerCall = {
            'amazon.nova-canvas-v1:0': 5,
          };
          var BedrockImageModel = class {
            constructor(modelId, settings, config) {
              this.modelId = modelId;
              this.settings = settings;
              this.config = config;
              this.specificationVersion = 'v1';
              this.provider = 'amazon-bedrock';
            }
            get maxImagesPerCall() {
              var _a, _b;
              return (_b = (_a = this.settings.maxImagesPerCall) != null ? _a : modelMaxImagesPerCall[this.modelId]) !=
                null
                ? _b
                : 1;
            }
            getUrl(modelId) {
              const encodedModelId = encodeURIComponent(modelId);
              return `${this.config.baseUrl()}/model/${encodedModelId}/invoke`;
            }
            async doGenerate({ prompt, n, size, aspectRatio, seed, providerOptions, headers, abortSignal }) {
              var _a, _b, _c, _d, _e, _f;
              const warnings = [];
              const [width, height] = size ? size.split('x').map(Number) : [];
              const args = {
                taskType: 'TEXT_IMAGE',
                textToImageParams: {
                  text: prompt,
                  ...((
                    (_a = providerOptions == null ? void 0 : providerOptions.bedrock) == null ? void 0 : _a.negativeText
                  )
                    ? {
                        negativeText: providerOptions.bedrock.negativeText,
                      }
                    : {}),
                },
                imageGenerationConfig: {
                  ...(width
                    ? {
                        width,
                      }
                    : {}),
                  ...(height
                    ? {
                        height,
                      }
                    : {}),
                  ...(seed
                    ? {
                        seed,
                      }
                    : {}),
                  ...(n
                    ? {
                        numberOfImages: n,
                      }
                    : {}),
                  ...(((_b = providerOptions == null ? void 0 : providerOptions.bedrock) == null ? void 0 : _b.quality)
                    ? {
                        quality: providerOptions.bedrock.quality,
                      }
                    : {}),
                  ...(((_c = providerOptions == null ? void 0 : providerOptions.bedrock) == null ? void 0 : _c.cfgScale)
                    ? {
                        cfgScale: providerOptions.bedrock.cfgScale,
                      }
                    : {}),
                },
              };
              if (aspectRatio != void 0) {
                warnings.push({
                  type: 'unsupported-setting',
                  setting: 'aspectRatio',
                  details: 'This model does not support aspect ratio. Use `size` instead.',
                });
              }
              const currentDate =
                (_f =
                  (_e = (_d = this.config._internal) == null ? void 0 : _d.currentDate) == null
                    ? void 0
                    : _e.call(_d)) != null
                  ? _f
                  : /* @__PURE__ */ new Date();
              const { value: response, responseHeaders } = await (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'postJsonToApi'
              ])({
                url: this.getUrl(this.modelId),
                headers: await (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'resolve'
                ])(
                  (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'combineHeaders'
                  ])(
                    await (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'resolve'
                    ])(this.config.headers),
                    headers,
                  ),
                ),
                body: args,
                failedResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonErrorResponseHandler'
                ])({
                  errorSchema: BedrockErrorSchema,
                  errorToMessage: (error) => `${error.type}: ${error.message}`,
                }),
                successfulResponseHandler: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'createJsonResponseHandler'
                ])(bedrockImageResponseSchema),
                abortSignal,
                fetch: this.config.fetch,
              });
              return {
                images: response.images,
                warnings,
                response: {
                  timestamp: currentDate,
                  modelId: this.modelId,
                  headers: responseHeaders,
                },
              };
            }
          };
          var bedrockImageResponseSchema =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'z'
            ].object({
              images:
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'z'
                ].array(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$zod$40$3$2e$24$2e$2$2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'z'
                  ].string(),
                ),
            });
          // src/headers-utils.ts
          function extractHeaders(headers) {
            let originalHeaders = {};
            if (headers) {
              if (headers instanceof Headers) {
                originalHeaders = convertHeadersToRecord(headers);
              } else if (Array.isArray(headers)) {
                for (const [k, v] of headers) {
                  originalHeaders[k.toLowerCase()] = v;
                }
              } else {
                originalHeaders = Object.fromEntries(Object.entries(headers).map(([k, v]) => [k.toLowerCase(), v]));
              }
            }
            return originalHeaders;
          }
          function convertHeadersToRecord(headers) {
            const record = {};
            headers.forEach((value, key) => {
              record[key.toLowerCase()] = value;
            });
            return record;
          }
          function createSigV4FetchFunction(getCredentials, fetch = globalThis.fetch) {
            return async (input, init) => {
              var _a;
              if (
                ((_a = init == null ? void 0 : init.method) == null ? void 0 : _a.toUpperCase()) !== 'POST' ||
                !(init == null ? void 0 : init.body)
              ) {
                return fetch(input, init);
              }
              const url = typeof input === 'string' ? input : input instanceof URL ? input.href : input.url;
              const originalHeaders = extractHeaders(init.headers);
              const body = prepareBodyString(init.body);
              const credentials = getCredentials();
              const signer =
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$aws4fetch$40$1$2e$0$2e$20$2f$node_modules$2f$aws4fetch$2f$dist$2f$aws4fetch$2e$esm$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'AwsV4Signer'
                ]({
                  url,
                  method: 'POST',
                  headers: Object.entries(
                    (0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'removeUndefinedEntries'
                    ])(originalHeaders),
                  ),
                  body,
                  region: credentials.region,
                  accessKeyId: credentials.accessKeyId,
                  secretAccessKey: credentials.secretAccessKey,
                  sessionToken: credentials.sessionToken,
                  service: 'bedrock',
                });
              const signingResult = await signer.sign();
              const signedHeaders = convertHeadersToRecord(signingResult.headers);
              return fetch(input, {
                ...init,
                body,
                headers: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'removeUndefinedEntries'
                ])(
                  (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'combineHeaders'
                  ])(originalHeaders, signedHeaders),
                ),
              });
            };
          }
          function prepareBodyString(body) {
            if (typeof body === 'string') {
              return body;
            } else if (body instanceof Uint8Array) {
              return new TextDecoder().decode(body);
            } else if (body instanceof ArrayBuffer) {
              return new TextDecoder().decode(new Uint8Array(body));
            } else {
              return JSON.stringify(body);
            }
          }
          // src/bedrock-provider.ts
          function createAmazonBedrock(options = {}) {
            const sigv4Fetch = createSigV4FetchFunction(
              () => ({
                region: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'loadSetting'
                ])({
                  settingValue: options.region,
                  settingName: 'region',
                  environmentVariableName: 'AWS_REGION',
                  description: 'AWS region',
                }),
                accessKeyId: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'loadSetting'
                ])({
                  settingValue: options.accessKeyId,
                  settingName: 'accessKeyId',
                  environmentVariableName: 'AWS_ACCESS_KEY_ID',
                  description: 'AWS access key ID',
                }),
                secretAccessKey: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'loadSetting'
                ])({
                  settingValue: options.secretAccessKey,
                  settingName: 'secretAccessKey',
                  environmentVariableName: 'AWS_SECRET_ACCESS_KEY',
                  description: 'AWS secret access key',
                }),
                sessionToken: (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'loadOptionalSetting'
                ])({
                  settingValue: options.sessionToken,
                  environmentVariableName: 'AWS_SESSION_TOKEN',
                }),
              }),
              options.fetch,
            );
            const getBaseUrl = () => {
              var _a, _b;
              return (_b = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'withoutTrailingSlash'
              ])(
                (_a = options.baseURL) != null
                  ? _a
                  : `https://bedrock-runtime.${(0,
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'loadSetting'
                    ])({
                      settingValue: options.region,
                      settingName: 'region',
                      environmentVariableName: 'AWS_REGION',
                      description: 'AWS region',
                    })}.amazonaws.com`,
              )) != null
                ? _b
                : `https://bedrock-runtime.us-east-1.amazonaws.com`;
            };
            const createChatModel = (modelId, settings = {}) => {
              var _a;
              return new BedrockChatLanguageModel(modelId, settings, {
                baseUrl: getBaseUrl,
                headers: (_a = options.headers) != null ? _a : {},
                fetch: sigv4Fetch,
                generateId:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ai$2d$sdk$2b$provider$2d$utils$40$2$2e$1$2e$13_zod$40$3$2e$24$2e$2$2f$node_modules$2f40$ai$2d$sdk$2f$provider$2d$utils$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'generateId'
                  ],
              });
            };
            const provider = function (modelId, settings) {
              if (new.target) {
                throw new Error('The Amazon Bedrock model function cannot be called with the new keyword.');
              }
              return createChatModel(modelId, settings);
            };
            const createEmbeddingModel = (modelId, settings = {}) => {
              var _a;
              return new BedrockEmbeddingModel(modelId, settings, {
                baseUrl: getBaseUrl,
                headers: (_a = options.headers) != null ? _a : {},
                fetch: sigv4Fetch,
              });
            };
            const createImageModel = (modelId, settings = {}) => {
              var _a;
              return new BedrockImageModel(modelId, settings, {
                baseUrl: getBaseUrl,
                headers: (_a = options.headers) != null ? _a : {},
                fetch: sigv4Fetch,
              });
            };
            provider.languageModel = createChatModel;
            provider.embedding = createEmbeddingModel;
            provider.textEmbedding = createEmbeddingModel;
            provider.textEmbeddingModel = createEmbeddingModel;
            provider.image = createImageModel;
            provider.imageModel = createImageModel;
            return provider;
          }
          var bedrock = createAmazonBedrock();
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/universal-user-agent@7.0.2/node_modules/universal-user-agent/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            getUserAgent: () => getUserAgent,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)',
            );
          function getUserAgent() {
            if (typeof navigator === 'object' && 'userAgent' in navigator) {
              return navigator.userAgent;
            }
            if (
              typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ] === 'object' &&
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].version !== undefined
            ) {
              return `Node.js/${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['default'].version.substr(1)} (${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['default'].platform}; ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['default'].arch})`;
            }
            return '<environment undetectable>';
          }
        }
      },
    '[project]/node_modules/.pnpm/before-after-hook@3.0.2/node_modules/before-after-hook/lib/register.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // @ts-check
          __turbopack_context__.s({
            register: () => register,
          });
          function register(state, name, method, options) {
            if (typeof method !== 'function') {
              throw new Error('method for before hook must be a function');
            }
            if (!options) {
              options = {};
            }
            if (Array.isArray(name)) {
              return name.reverse().reduce((callback, name) => {
                return register.bind(null, state, name, callback, options);
              }, method)();
            }
            return Promise.resolve().then(() => {
              if (!state.registry[name]) {
                return method(options);
              }
              return state.registry[name].reduce((method, registered) => {
                return registered.hook.bind(null, method, options);
              }, method)();
            });
          }
        }
      },
    '[project]/node_modules/.pnpm/before-after-hook@3.0.2/node_modules/before-after-hook/lib/add.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // @ts-check
          __turbopack_context__.s({
            addHook: () => addHook,
          });
          function addHook(state, kind, name, hook) {
            const orig = hook;
            if (!state.registry[name]) {
              state.registry[name] = [];
            }
            if (kind === 'before') {
              hook = (method, options) => {
                return Promise.resolve().then(orig.bind(null, options)).then(method.bind(null, options));
              };
            }
            if (kind === 'after') {
              hook = (method, options) => {
                let result;
                return Promise.resolve()
                  .then(method.bind(null, options))
                  .then((result_) => {
                    result = result_;
                    return orig(result, options);
                  })
                  .then(() => {
                    return result;
                  });
              };
            }
            if (kind === 'error') {
              hook = (method, options) => {
                return Promise.resolve()
                  .then(method.bind(null, options))
                  .catch((error) => {
                    return orig(error, options);
                  });
              };
            }
            state.registry[name].push({
              hook: hook,
              orig: orig,
            });
          }
        }
      },
    '[project]/node_modules/.pnpm/before-after-hook@3.0.2/node_modules/before-after-hook/lib/remove.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // @ts-check
          __turbopack_context__.s({
            removeHook: () => removeHook,
          });
          function removeHook(state, name, method) {
            if (!state.registry[name]) {
              return;
            }
            const index = state.registry[name]
              .map((registered) => {
                return registered.orig;
              })
              .indexOf(method);
            if (index === -1) {
              return;
            }
            state.registry[name].splice(index, 1);
          }
        }
      },
    '[project]/node_modules/.pnpm/before-after-hook@3.0.2/node_modules/before-after-hook/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // @ts-check
          __turbopack_context__.s({
            default: () => __TURBOPACK__default__export__,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$lib$2f$register$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/before-after-hook@3.0.2/node_modules/before-after-hook/lib/register.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$lib$2f$add$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/before-after-hook@3.0.2/node_modules/before-after-hook/lib/add.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$lib$2f$remove$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/before-after-hook@3.0.2/node_modules/before-after-hook/lib/remove.js [app-client] (ecmascript)',
            );
          // bind with array of arguments: https://stackoverflow.com/a/21792913
          const bind = Function.bind;
          const bindable = bind.bind(bind);
          function bindApi(hook, state, name) {
            const removeHookRef = bindable(
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$lib$2f$remove$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'removeHook'
              ],
              null,
            ).apply(null, name ? [state, name] : [state]);
            hook.api = {
              remove: removeHookRef,
            };
            hook.remove = removeHookRef;
            ['before', 'error', 'after', 'wrap'].forEach((kind) => {
              const args = name ? [state, kind, name] : [state, kind];
              hook[kind] = hook.api[kind] = bindable(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$lib$2f$add$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'addHook'
                ],
                null,
              ).apply(null, args);
            });
          }
          function Singular() {
            const singularHookName = Symbol('Singular');
            const singularHookState = {
              registry: {},
            };
            const singularHook =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$lib$2f$register$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'register'
              ].bind(null, singularHookState, singularHookName);
            bindApi(singularHook, singularHookState, singularHookName);
            return singularHook;
          }
          function Collection() {
            const state = {
              registry: {},
            };
            const hook =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$lib$2f$register$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'register'
              ].bind(null, state);
            bindApi(hook, state);
            return hook;
          }
          const __TURBOPACK__default__export__ = {
            Singular,
            Collection,
          };
        }
      },
    '[project]/node_modules/.pnpm/@octokit+endpoint@10.1.3/node_modules/@octokit/endpoint/dist-bundle/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // pkg/dist-src/defaults.js
          __turbopack_context__.s({
            endpoint: () => endpoint,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$universal$2d$user$2d$agent$40$7$2e$0$2e$2$2f$node_modules$2f$universal$2d$user$2d$agent$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/universal-user-agent@7.0.2/node_modules/universal-user-agent/index.js [app-client] (ecmascript)',
            );
          // pkg/dist-src/version.js
          var VERSION = '0.0.0-development';
          // pkg/dist-src/defaults.js
          var userAgent = `octokit-endpoint.js/${VERSION} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$universal$2d$user$2d$agent$40$7$2e$0$2e$2$2f$node_modules$2f$universal$2d$user$2d$agent$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['getUserAgent'])()}`;
          var DEFAULTS = {
            method: 'GET',
            baseUrl: 'https://api.github.com',
            headers: {
              accept: 'application/vnd.github.v3+json',
              'user-agent': userAgent,
            },
            mediaType: {
              format: '',
            },
          };
          // pkg/dist-src/util/lowercase-keys.js
          function lowercaseKeys(object) {
            if (!object) {
              return {};
            }
            return Object.keys(object).reduce((newObj, key) => {
              newObj[key.toLowerCase()] = object[key];
              return newObj;
            }, {});
          }
          // pkg/dist-src/util/is-plain-object.js
          function isPlainObject(value) {
            if (typeof value !== 'object' || value === null) return false;
            if (Object.prototype.toString.call(value) !== '[object Object]') return false;
            const proto = Object.getPrototypeOf(value);
            if (proto === null) return true;
            const Ctor = Object.prototype.hasOwnProperty.call(proto, 'constructor') && proto.constructor;
            return (
              typeof Ctor === 'function' &&
              Ctor instanceof Ctor &&
              Function.prototype.call(Ctor) === Function.prototype.call(value)
            );
          }
          // pkg/dist-src/util/merge-deep.js
          function mergeDeep(defaults, options) {
            const result = Object.assign({}, defaults);
            Object.keys(options).forEach((key) => {
              if (isPlainObject(options[key])) {
                if (!(key in defaults))
                  Object.assign(result, {
                    [key]: options[key],
                  });
                else result[key] = mergeDeep(defaults[key], options[key]);
              } else {
                Object.assign(result, {
                  [key]: options[key],
                });
              }
            });
            return result;
          }
          // pkg/dist-src/util/remove-undefined-properties.js
          function removeUndefinedProperties(obj) {
            for (const key in obj) {
              if (obj[key] === void 0) {
                delete obj[key];
              }
            }
            return obj;
          }
          // pkg/dist-src/merge.js
          function merge(defaults, route, options) {
            if (typeof route === 'string') {
              let [method, url] = route.split(' ');
              options = Object.assign(
                url
                  ? {
                      method,
                      url,
                    }
                  : {
                      url: method,
                    },
                options,
              );
            } else {
              options = Object.assign({}, route);
            }
            options.headers = lowercaseKeys(options.headers);
            removeUndefinedProperties(options);
            removeUndefinedProperties(options.headers);
            const mergedOptions = mergeDeep(defaults || {}, options);
            if (options.url === '/graphql') {
              if (defaults && defaults.mediaType.previews?.length) {
                mergedOptions.mediaType.previews = defaults.mediaType.previews
                  .filter((preview) => !mergedOptions.mediaType.previews.includes(preview))
                  .concat(mergedOptions.mediaType.previews);
              }
              mergedOptions.mediaType.previews = (mergedOptions.mediaType.previews || []).map((preview) =>
                preview.replace(/-preview/, ''),
              );
            }
            return mergedOptions;
          }
          // pkg/dist-src/util/add-query-parameters.js
          function addQueryParameters(url, parameters) {
            const separator = /\?/.test(url) ? '&' : '?';
            const names = Object.keys(parameters);
            if (names.length === 0) {
              return url;
            }
            return (
              url +
              separator +
              names
                .map((name) => {
                  if (name === 'q') {
                    return 'q=' + parameters.q.split('+').map(encodeURIComponent).join('+');
                  }
                  return `${name}=${encodeURIComponent(parameters[name])}`;
                })
                .join('&')
            );
          }
          // pkg/dist-src/util/extract-url-variable-names.js
          var urlVariableRegex = /\{[^{}}]+\}/g;
          function removeNonChars(variableName) {
            return variableName.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g, '').split(/,/);
          }
          function extractUrlVariableNames(url) {
            const matches = url.match(urlVariableRegex);
            if (!matches) {
              return [];
            }
            return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);
          }
          // pkg/dist-src/util/omit.js
          function omit(object, keysToOmit) {
            const result = {
              __proto__: null,
            };
            for (const key of Object.keys(object)) {
              if (keysToOmit.indexOf(key) === -1) {
                result[key] = object[key];
              }
            }
            return result;
          }
          // pkg/dist-src/util/url-template.js
          function encodeReserved(str) {
            return str
              .split(/(%[0-9A-Fa-f]{2})/g)
              .map(function (part) {
                if (!/%[0-9A-Fa-f]/.test(part)) {
                  part = encodeURI(part).replace(/%5B/g, '[').replace(/%5D/g, ']');
                }
                return part;
              })
              .join('');
          }
          function encodeUnreserved(str) {
            return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
              return '%' + c.charCodeAt(0).toString(16).toUpperCase();
            });
          }
          function encodeValue(operator, value, key) {
            value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeUnreserved(value);
            if (key) {
              return encodeUnreserved(key) + '=' + value;
            } else {
              return value;
            }
          }
          function isDefined(value) {
            return value !== void 0 && value !== null;
          }
          function isKeyOperator(operator) {
            return operator === ';' || operator === '&' || operator === '?';
          }
          function getValues(context, operator, key, modifier) {
            var value = context[key],
              result = [];
            if (isDefined(value) && value !== '') {
              if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {
                value = value.toString();
                if (modifier && modifier !== '*') {
                  value = value.substring(0, parseInt(modifier, 10));
                }
                result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ''));
              } else {
                if (modifier === '*') {
                  if (Array.isArray(value)) {
                    value.filter(isDefined).forEach(function (value2) {
                      result.push(encodeValue(operator, value2, isKeyOperator(operator) ? key : ''));
                    });
                  } else {
                    Object.keys(value).forEach(function (k) {
                      if (isDefined(value[k])) {
                        result.push(encodeValue(operator, value[k], k));
                      }
                    });
                  }
                } else {
                  const tmp = [];
                  if (Array.isArray(value)) {
                    value.filter(isDefined).forEach(function (value2) {
                      tmp.push(encodeValue(operator, value2));
                    });
                  } else {
                    Object.keys(value).forEach(function (k) {
                      if (isDefined(value[k])) {
                        tmp.push(encodeUnreserved(k));
                        tmp.push(encodeValue(operator, value[k].toString()));
                      }
                    });
                  }
                  if (isKeyOperator(operator)) {
                    result.push(encodeUnreserved(key) + '=' + tmp.join(','));
                  } else if (tmp.length !== 0) {
                    result.push(tmp.join(','));
                  }
                }
              }
            } else {
              if (operator === ';') {
                if (isDefined(value)) {
                  result.push(encodeUnreserved(key));
                }
              } else if (value === '' && (operator === '&' || operator === '?')) {
                result.push(encodeUnreserved(key) + '=');
              } else if (value === '') {
                result.push('');
              }
            }
            return result;
          }
          function parseUrl(template) {
            return {
              expand: expand.bind(null, template),
            };
          }
          function expand(template, context) {
            var operators = ['+', '#', '.', '/', ';', '?', '&'];
            template = template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (_, expression, literal) {
              if (expression) {
                let operator = '';
                const values = [];
                if (operators.indexOf(expression.charAt(0)) !== -1) {
                  operator = expression.charAt(0);
                  expression = expression.substr(1);
                }
                expression.split(/,/g).forEach(function (variable) {
                  var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
                  values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
                });
                if (operator && operator !== '+') {
                  var separator = ',';
                  if (operator === '?') {
                    separator = '&';
                  } else if (operator !== '#') {
                    separator = operator;
                  }
                  return (values.length !== 0 ? operator : '') + values.join(separator);
                } else {
                  return values.join(',');
                }
              } else {
                return encodeReserved(literal);
              }
            });
            if (template === '/') {
              return template;
            } else {
              return template.replace(/\/$/, '');
            }
          }
          // pkg/dist-src/parse.js
          function parse(options) {
            let method = options.method.toUpperCase();
            let url = (options.url || '/').replace(/:([a-z]\w+)/g, '{$1}');
            let headers = Object.assign({}, options.headers);
            let body;
            let parameters = omit(options, ['method', 'baseUrl', 'url', 'headers', 'request', 'mediaType']);
            const urlVariableNames = extractUrlVariableNames(url);
            url = parseUrl(url).expand(parameters);
            if (!/^http/.test(url)) {
              url = options.baseUrl + url;
            }
            const omittedParameters = Object.keys(options)
              .filter((option) => urlVariableNames.includes(option))
              .concat('baseUrl');
            const remainingParameters = omit(parameters, omittedParameters);
            const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);
            if (!isBinaryRequest) {
              if (options.mediaType.format) {
                headers.accept = headers.accept
                  .split(/,/)
                  .map((format) =>
                    format.replace(
                      /application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,
                      `application/vnd$1$2.${options.mediaType.format}`,
                    ),
                  )
                  .join(',');
              }
              if (url.endsWith('/graphql')) {
                if (options.mediaType.previews?.length) {
                  const previewsFromAcceptHeader = headers.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g) || [];
                  headers.accept = previewsFromAcceptHeader
                    .concat(options.mediaType.previews)
                    .map((preview) => {
                      const format = options.mediaType.format ? `.${options.mediaType.format}` : '+json';
                      return `application/vnd.github.${preview}-preview${format}`;
                    })
                    .join(',');
                }
              }
            }
            if (['GET', 'HEAD'].includes(method)) {
              url = addQueryParameters(url, remainingParameters);
            } else {
              if ('data' in remainingParameters) {
                body = remainingParameters.data;
              } else {
                if (Object.keys(remainingParameters).length) {
                  body = remainingParameters;
                }
              }
            }
            if (!headers['content-type'] && typeof body !== 'undefined') {
              headers['content-type'] = 'application/json; charset=utf-8';
            }
            if (['PATCH', 'PUT'].includes(method) && typeof body === 'undefined') {
              body = '';
            }
            return Object.assign(
              {
                method,
                url,
                headers,
              },
              typeof body !== 'undefined'
                ? {
                    body,
                  }
                : null,
              options.request
                ? {
                    request: options.request,
                  }
                : null,
            );
          }
          // pkg/dist-src/endpoint-with-defaults.js
          function endpointWithDefaults(defaults, route, options) {
            return parse(merge(defaults, route, options));
          }
          // pkg/dist-src/with-defaults.js
          function withDefaults(oldDefaults, newDefaults) {
            const DEFAULTS2 = merge(oldDefaults, newDefaults);
            const endpoint2 = endpointWithDefaults.bind(null, DEFAULTS2);
            return Object.assign(endpoint2, {
              DEFAULTS: DEFAULTS2,
              defaults: withDefaults.bind(null, DEFAULTS2),
              merge: merge.bind(null, DEFAULTS2),
              parse,
            });
          }
          // pkg/dist-src/index.js
          var endpoint = withDefaults(null, DEFAULTS);
        }
      },
    '[project]/node_modules/.pnpm/fast-content-type-parse@2.0.1/node_modules/fast-content-type-parse/index.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          ('use strict');
          const NullObject = function NullObject() {};
          NullObject.prototype = Object.create(null);
          /**
           * RegExp to match *( ";" parameter ) in RFC 7231 sec 3.1.1.1
           *
           * parameter     = token "=" ( token / quoted-string )
           * token         = 1*tchar
           * tchar         = "!" / "#" / "$" / "%" / "&" / "'" / "*"
           *               / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"
           *               / DIGIT / ALPHA
           *               ; any VCHAR, except delimiters
           * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE
           * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text
           * obs-text      = %x80-FF
           * quoted-pair   = "\" ( HTAB / SP / VCHAR / obs-text )
           */ const paramRE =
            /; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu;
          /**
           * RegExp to match quoted-pair in RFC 7230 sec 3.2.6
           *
           * quoted-pair = "\" ( HTAB / SP / VCHAR / obs-text )
           * obs-text    = %x80-FF
           */ const quotedPairRE = /\\([\v\u0020-\u00ff])/gu;
          /**
           * RegExp to match type in RFC 7231 sec 3.1.1.1
           *
           * media-type = type "/" subtype
           * type       = token
           * subtype    = token
           */ const mediaTypeRE = /^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u;
          // default ContentType to prevent repeated object creation
          const defaultContentType = {
            type: '',
            parameters: new NullObject(),
          };
          Object.freeze(defaultContentType.parameters);
          Object.freeze(defaultContentType);
          /**
           * Parse media type to object.
           *
           * @param {string|object} header
           * @return {Object}
           * @public
           */ function parse(header) {
            if (typeof header !== 'string') {
              throw new TypeError('argument header is required and must be a string');
            }
            let index = header.indexOf(';');
            const type = index !== -1 ? header.slice(0, index).trim() : header.trim();
            if (mediaTypeRE.test(type) === false) {
              throw new TypeError('invalid media type');
            }
            const result = {
              type: type.toLowerCase(),
              parameters: new NullObject(),
            };
            // parse parameters
            if (index === -1) {
              return result;
            }
            let key;
            let match;
            let value;
            paramRE.lastIndex = index;
            while ((match = paramRE.exec(header))) {
              if (match.index !== index) {
                throw new TypeError('invalid parameter format');
              }
              index += match[0].length;
              key = match[1].toLowerCase();
              value = match[2];
              if (value[0] === '"') {
                // remove quotes and escapes
                value = value.slice(1, value.length - 1);
                quotedPairRE.test(value) && (value = value.replace(quotedPairRE, '$1'));
              }
              result.parameters[key] = value;
            }
            if (index !== header.length) {
              throw new TypeError('invalid parameter format');
            }
            return result;
          }
          function safeParse(header) {
            if (typeof header !== 'string') {
              return defaultContentType;
            }
            let index = header.indexOf(';');
            const type = index !== -1 ? header.slice(0, index).trim() : header.trim();
            if (mediaTypeRE.test(type) === false) {
              return defaultContentType;
            }
            const result = {
              type: type.toLowerCase(),
              parameters: new NullObject(),
            };
            // parse parameters
            if (index === -1) {
              return result;
            }
            let key;
            let match;
            let value;
            paramRE.lastIndex = index;
            while ((match = paramRE.exec(header))) {
              if (match.index !== index) {
                return defaultContentType;
              }
              index += match[0].length;
              key = match[1].toLowerCase();
              value = match[2];
              if (value[0] === '"') {
                // remove quotes and escapes
                value = value.slice(1, value.length - 1);
                quotedPairRE.test(value) && (value = value.replace(quotedPairRE, '$1'));
              }
              result.parameters[key] = value;
            }
            if (index !== header.length) {
              return defaultContentType;
            }
            return result;
          }
          module.exports.default = {
            parse,
            safeParse,
          };
          module.exports.parse = parse;
          module.exports.safeParse = safeParse;
          module.exports.defaultContentType = defaultContentType;
        }
      },
    '[project]/node_modules/.pnpm/@octokit+request-error@6.1.7/node_modules/@octokit/request-error/dist-src/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            RequestError: () => RequestError,
          });
          class RequestError extends Error {
            name;
            /**
             * http status code
             */ status;
            /**
             * Request options that lead to the error.
             */ request;
            /**
             * Response object if a response was received
             */ response;
            constructor(message, statusCode, options) {
              super(message);
              this.name = 'HttpError';
              this.status = Number.parseInt(statusCode);
              if (Number.isNaN(this.status)) {
                this.status = 0;
              }
              if ('response' in options) {
                this.response = options.response;
              }
              const requestCopy = Object.assign({}, options.request);
              if (options.request.headers.authorization) {
                requestCopy.headers = Object.assign({}, options.request.headers, {
                  authorization: options.request.headers.authorization.replace(/(?<! ) .*$/, ' [REDACTED]'),
                });
              }
              requestCopy.url = requestCopy.url
                .replace(/\bclient_secret=\w+/g, 'client_secret=[REDACTED]')
                .replace(/\baccess_token=\w+/g, 'access_token=[REDACTED]');
              this.request = requestCopy;
            }
          }
        }
      },
    '[project]/node_modules/.pnpm/@octokit+request@9.2.2/node_modules/@octokit/request/dist-bundle/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // pkg/dist-src/index.js
          __turbopack_context__.s({
            request: () => request,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$endpoint$40$10$2e$1$2e$3$2f$node_modules$2f40$octokit$2f$endpoint$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+endpoint@10.1.3/node_modules/@octokit/endpoint/dist-bundle/index.js [app-client] (ecmascript)',
            );
          // pkg/dist-src/defaults.js
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$universal$2d$user$2d$agent$40$7$2e$0$2e$2$2f$node_modules$2f$universal$2d$user$2d$agent$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/universal-user-agent@7.0.2/node_modules/universal-user-agent/index.js [app-client] (ecmascript)',
            );
          // pkg/dist-src/fetch-wrapper.js
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$fast$2d$content$2d$type$2d$parse$40$2$2e$0$2e$1$2f$node_modules$2f$fast$2d$content$2d$type$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/fast-content-type-parse@2.0.1/node_modules/fast-content-type-parse/index.js [app-client] (ecmascript)',
            );
          // pkg/dist-src/fetch-wrapper.js
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$2d$error$40$6$2e$1$2e$7$2f$node_modules$2f40$octokit$2f$request$2d$error$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+request-error@6.1.7/node_modules/@octokit/request-error/dist-src/index.js [app-client] (ecmascript)',
            );
          // pkg/dist-src/version.js
          var VERSION = '0.0.0-development';
          // pkg/dist-src/defaults.js
          var defaults_default = {
            headers: {
              'user-agent': `octokit-request.js/${VERSION} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$universal$2d$user$2d$agent$40$7$2e$0$2e$2$2f$node_modules$2f$universal$2d$user$2d$agent$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['getUserAgent'])()}`,
            },
          };
          // pkg/dist-src/is-plain-object.js
          function isPlainObject(value) {
            if (typeof value !== 'object' || value === null) return false;
            if (Object.prototype.toString.call(value) !== '[object Object]') return false;
            const proto = Object.getPrototypeOf(value);
            if (proto === null) return true;
            const Ctor = Object.prototype.hasOwnProperty.call(proto, 'constructor') && proto.constructor;
            return (
              typeof Ctor === 'function' &&
              Ctor instanceof Ctor &&
              Function.prototype.call(Ctor) === Function.prototype.call(value)
            );
          }
          async function fetchWrapper(requestOptions) {
            const fetch = requestOptions.request?.fetch || globalThis.fetch;
            if (!fetch) {
              throw new Error(
                'fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing',
              );
            }
            const log = requestOptions.request?.log || console;
            const parseSuccessResponseBody = requestOptions.request?.parseSuccessResponseBody !== false;
            const body =
              isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)
                ? JSON.stringify(requestOptions.body)
                : requestOptions.body;
            const requestHeaders = Object.fromEntries(
              Object.entries(requestOptions.headers).map(([name, value]) => [name, String(value)]),
            );
            let fetchResponse;
            try {
              fetchResponse = await fetch(requestOptions.url, {
                method: requestOptions.method,
                body,
                redirect: requestOptions.request?.redirect,
                headers: requestHeaders,
                signal: requestOptions.request?.signal,
                // duplex must be set if request.body is ReadableStream or Async Iterables.
                // See https://fetch.spec.whatwg.org/#dom-requestinit-duplex.
                ...(requestOptions.body && {
                  duplex: 'half',
                }),
              });
            } catch (error) {
              let message = 'Unknown Error';
              if (error instanceof Error) {
                if (error.name === 'AbortError') {
                  error.status = 500;
                  throw error;
                }
                message = error.message;
                if (error.name === 'TypeError' && 'cause' in error) {
                  if (error.cause instanceof Error) {
                    message = error.cause.message;
                  } else if (typeof error.cause === 'string') {
                    message = error.cause;
                  }
                }
              }
              const requestError =
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$2d$error$40$6$2e$1$2e$7$2f$node_modules$2f40$octokit$2f$request$2d$error$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'RequestError'
                ](message, 500, {
                  request: requestOptions,
                });
              requestError.cause = error;
              throw requestError;
            }
            const status = fetchResponse.status;
            const url = fetchResponse.url;
            const responseHeaders = {};
            for (const [key, value] of fetchResponse.headers) {
              responseHeaders[key] = value;
            }
            const octokitResponse = {
              url,
              status,
              headers: responseHeaders,
              data: '',
            };
            if ('deprecation' in responseHeaders) {
              const matches = responseHeaders.link && responseHeaders.link.match(/<([^<>]+)>; rel="deprecation"/);
              const deprecationLink = matches && matches.pop();
              log.warn(
                `[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${responseHeaders.sunset}${deprecationLink ? `. See ${deprecationLink}` : ''}`,
              );
            }
            if (status === 204 || status === 205) {
              return octokitResponse;
            }
            if (requestOptions.method === 'HEAD') {
              if (status < 400) {
                return octokitResponse;
              }
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$2d$error$40$6$2e$1$2e$7$2f$node_modules$2f40$octokit$2f$request$2d$error$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'RequestError'
              ](fetchResponse.statusText, status, {
                response: octokitResponse,
                request: requestOptions,
              });
            }
            if (status === 304) {
              octokitResponse.data = await getResponseData(fetchResponse);
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$2d$error$40$6$2e$1$2e$7$2f$node_modules$2f40$octokit$2f$request$2d$error$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'RequestError'
              ]('Not modified', status, {
                response: octokitResponse,
                request: requestOptions,
              });
            }
            if (status >= 400) {
              octokitResponse.data = await getResponseData(fetchResponse);
              throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$2d$error$40$6$2e$1$2e$7$2f$node_modules$2f40$octokit$2f$request$2d$error$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'RequestError'
              ](toErrorMessage(octokitResponse.data), status, {
                response: octokitResponse,
                request: requestOptions,
              });
            }
            octokitResponse.data = parseSuccessResponseBody ? await getResponseData(fetchResponse) : fetchResponse.body;
            return octokitResponse;
          }
          async function getResponseData(response) {
            const contentType = response.headers.get('content-type');
            if (!contentType) {
              return response.text().catch(() => '');
            }
            const mimetype = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$fast$2d$content$2d$type$2d$parse$40$2$2e$0$2e$1$2f$node_modules$2f$fast$2d$content$2d$type$2d$parse$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'safeParse'
            ])(contentType);
            if (isJSONResponse(mimetype)) {
              let text = '';
              try {
                text = await response.text();
                return JSON.parse(text);
              } catch (err) {
                return text;
              }
            } else if (mimetype.type.startsWith('text/') || mimetype.parameters.charset?.toLowerCase() === 'utf-8') {
              return response.text().catch(() => '');
            } else {
              return response.arrayBuffer().catch(() => new ArrayBuffer(0));
            }
          }
          function isJSONResponse(mimetype) {
            return mimetype.type === 'application/json' || mimetype.type === 'application/scim+json';
          }
          function toErrorMessage(data) {
            if (typeof data === 'string') {
              return data;
            }
            if (data instanceof ArrayBuffer) {
              return 'Unknown error';
            }
            if ('message' in data) {
              const suffix = 'documentation_url' in data ? ` - ${data.documentation_url}` : '';
              return Array.isArray(data.errors)
                ? `${data.message}: ${data.errors.map((v) => JSON.stringify(v)).join(', ')}${suffix}`
                : `${data.message}${suffix}`;
            }
            return `Unknown error: ${JSON.stringify(data)}`;
          }
          // pkg/dist-src/with-defaults.js
          function withDefaults(oldEndpoint, newDefaults) {
            const endpoint2 = oldEndpoint.defaults(newDefaults);
            const newApi = function (route, parameters) {
              const endpointOptions = endpoint2.merge(route, parameters);
              if (!endpointOptions.request || !endpointOptions.request.hook) {
                return fetchWrapper(endpoint2.parse(endpointOptions));
              }
              const request2 = (route2, parameters2) => {
                return fetchWrapper(endpoint2.parse(endpoint2.merge(route2, parameters2)));
              };
              Object.assign(request2, {
                endpoint: endpoint2,
                defaults: withDefaults.bind(null, endpoint2),
              });
              return endpointOptions.request.hook(request2, endpointOptions);
            };
            return Object.assign(newApi, {
              endpoint: endpoint2,
              defaults: withDefaults.bind(null, endpoint2),
            });
          }
          // pkg/dist-src/index.js
          var request = withDefaults(
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$endpoint$40$10$2e$1$2e$3$2f$node_modules$2f40$octokit$2f$endpoint$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'endpoint'
            ],
            defaults_default,
          );
        }
      },
    '[project]/node_modules/.pnpm/@octokit+graphql@8.2.1/node_modules/@octokit/graphql/dist-bundle/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // pkg/dist-src/index.js
          __turbopack_context__.s({
            GraphqlResponseError: () => GraphqlResponseError,
            graphql: () => graphql2,
            withCustomRequest: () => withCustomRequest,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$40$9$2e$2$2e$2$2f$node_modules$2f40$octokit$2f$request$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+request@9.2.2/node_modules/@octokit/request/dist-bundle/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$universal$2d$user$2d$agent$40$7$2e$0$2e$2$2f$node_modules$2f$universal$2d$user$2d$agent$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/universal-user-agent@7.0.2/node_modules/universal-user-agent/index.js [app-client] (ecmascript)',
            );
          // pkg/dist-src/version.js
          var VERSION = '0.0.0-development';
          // pkg/dist-src/error.js
          function _buildMessageForResponseErrors(data) {
            return (
              `Request failed due to following response errors:
` + data.errors.map((e) => ` - ${e.message}`).join('\n')
            );
          }
          var GraphqlResponseError = class extends Error {
            constructor(request2, headers, response) {
              super(_buildMessageForResponseErrors(response));
              this.request = request2;
              this.headers = headers;
              this.response = response;
              this.errors = response.errors;
              this.data = response.data;
              if (Error.captureStackTrace) {
                Error.captureStackTrace(this, this.constructor);
              }
            }
            name = 'GraphqlResponseError';
            errors;
            data;
          };
          // pkg/dist-src/graphql.js
          var NON_VARIABLE_OPTIONS = [
            'method',
            'baseUrl',
            'url',
            'headers',
            'request',
            'query',
            'mediaType',
            'operationName',
          ];
          var FORBIDDEN_VARIABLE_OPTIONS = ['query', 'method', 'url'];
          var GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
          function graphql(request2, query, options) {
            if (options) {
              if (typeof query === 'string' && 'query' in options) {
                return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
              }
              for (const key in options) {
                if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;
                return Promise.reject(new Error(`[@octokit/graphql] "${key}" cannot be used as variable name`));
              }
            }
            const parsedOptions =
              typeof query === 'string'
                ? Object.assign(
                    {
                      query,
                    },
                    options,
                  )
                : query;
            const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {
              if (NON_VARIABLE_OPTIONS.includes(key)) {
                result[key] = parsedOptions[key];
                return result;
              }
              if (!result.variables) {
                result.variables = {};
              }
              result.variables[key] = parsedOptions[key];
              return result;
            }, {});
            const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;
            if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {
              requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, '/api/graphql');
            }
            return request2(requestOptions).then((response) => {
              if (response.data.errors) {
                const headers = {};
                for (const key of Object.keys(response.headers)) {
                  headers[key] = response.headers[key];
                }
                throw new GraphqlResponseError(requestOptions, headers, response.data);
              }
              return response.data.data;
            });
          }
          // pkg/dist-src/with-defaults.js
          function withDefaults(request2, newDefaults) {
            const newRequest = request2.defaults(newDefaults);
            const newApi = (query, options) => {
              return graphql(newRequest, query, options);
            };
            return Object.assign(newApi, {
              defaults: withDefaults.bind(null, newRequest),
              endpoint: newRequest.endpoint,
            });
          }
          // pkg/dist-src/index.js
          var graphql2 = withDefaults(
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$40$9$2e$2$2e$2$2f$node_modules$2f40$octokit$2f$request$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'request'
            ],
            {
              headers: {
                'user-agent': `octokit-graphql.js/${VERSION} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$universal$2d$user$2d$agent$40$7$2e$0$2e$2$2f$node_modules$2f$universal$2d$user$2d$agent$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['getUserAgent'])()}`,
              },
              method: 'POST',
              url: '/graphql',
            },
          );
          function withCustomRequest(customRequest) {
            return withDefaults(customRequest, {
              method: 'POST',
              url: '/graphql',
            });
          }
        }
      },
    '[project]/node_modules/.pnpm/@octokit+auth-token@5.1.2/node_modules/@octokit/auth-token/dist-bundle/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // pkg/dist-src/is-jwt.js
          __turbopack_context__.s({
            createTokenAuth: () => createTokenAuth,
          });
          var b64url = '(?:[a-zA-Z0-9_-]+)';
          var sep = '\\.';
          var jwtRE = new RegExp(`^${b64url}${sep}${b64url}${sep}${b64url}$`);
          var isJWT = jwtRE.test.bind(jwtRE);
          // pkg/dist-src/auth.js
          async function auth(token) {
            const isApp = isJWT(token);
            const isInstallation = token.startsWith('v1.') || token.startsWith('ghs_');
            const isUserToServer = token.startsWith('ghu_');
            const tokenType = isApp
              ? 'app'
              : isInstallation
                ? 'installation'
                : isUserToServer
                  ? 'user-to-server'
                  : 'oauth';
            return {
              type: 'token',
              token,
              tokenType,
            };
          }
          // pkg/dist-src/with-authorization-prefix.js
          function withAuthorizationPrefix(token) {
            if (token.split(/\./).length === 3) {
              return `bearer ${token}`;
            }
            return `token ${token}`;
          }
          // pkg/dist-src/hook.js
          async function hook(token, request, route, parameters) {
            const endpoint = request.endpoint.merge(route, parameters);
            endpoint.headers.authorization = withAuthorizationPrefix(token);
            return request(endpoint);
          }
          // pkg/dist-src/index.js
          var createTokenAuth = function createTokenAuth2(token) {
            if (!token) {
              throw new Error('[@octokit/auth-token] No token passed to createTokenAuth');
            }
            if (typeof token !== 'string') {
              throw new Error('[@octokit/auth-token] Token passed to createTokenAuth is not a string');
            }
            token = token.replace(/^(token|bearer) +/i, '');
            return Object.assign(auth.bind(null, token), {
              hook: hook.bind(null, token),
            });
          };
        }
      },
    '[project]/node_modules/.pnpm/@octokit+core@6.1.4/node_modules/@octokit/core/dist-src/version.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            VERSION: () => VERSION,
          });
          const VERSION = '6.1.4';
        }
      },
    '[project]/node_modules/.pnpm/@octokit+core@6.1.4/node_modules/@octokit/core/dist-src/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            Octokit: () => Octokit,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$universal$2d$user$2d$agent$40$7$2e$0$2e$2$2f$node_modules$2f$universal$2d$user$2d$agent$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/universal-user-agent@7.0.2/node_modules/universal-user-agent/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/before-after-hook@3.0.2/node_modules/before-after-hook/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$40$9$2e$2$2e$2$2f$node_modules$2f40$octokit$2f$request$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+request@9.2.2/node_modules/@octokit/request/dist-bundle/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$graphql$40$8$2e$2$2e$1$2f$node_modules$2f40$octokit$2f$graphql$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+graphql@8.2.1/node_modules/@octokit/graphql/dist-bundle/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$auth$2d$token$40$5$2e$1$2e$2$2f$node_modules$2f40$octokit$2f$auth$2d$token$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+auth-token@5.1.2/node_modules/@octokit/auth-token/dist-bundle/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$core$2f$dist$2d$src$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+core@6.1.4/node_modules/@octokit/core/dist-src/version.js [app-client] (ecmascript)',
            );
          const noop = () => {};
          const consoleWarn = console.warn.bind(console);
          const consoleError = console.error.bind(console);
          const userAgentTrail = `octokit-core.js/${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$core$2f$dist$2d$src$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['VERSION']} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$universal$2d$user$2d$agent$40$7$2e$0$2e$2$2f$node_modules$2f$universal$2d$user$2d$agent$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['getUserAgent'])()}`;
          class Octokit {
            static VERSION =
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$core$2f$dist$2d$src$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'VERSION'
              ];
            static defaults(defaults) {
              const OctokitWithDefaults = class extends this {
                constructor(...args) {
                  const options = args[0] || {};
                  if (typeof defaults === 'function') {
                    super(defaults(options));
                    return;
                  }
                  super(
                    Object.assign(
                      {},
                      defaults,
                      options,
                      options.userAgent && defaults.userAgent
                        ? {
                            userAgent: `${options.userAgent} ${defaults.userAgent}`,
                          }
                        : null,
                    ),
                  );
                }
              };
              return OctokitWithDefaults;
            }
            static plugins = [];
            /**
             * Attach a plugin (or many) to your Octokit instance.
             *
             * @example
             * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)
             */ static plugin(...newPlugins) {
              const currentPlugins = this.plugins;
              const NewOctokit = class extends this {
                static plugins = currentPlugins.concat(newPlugins.filter((plugin) => !currentPlugins.includes(plugin)));
              };
              return NewOctokit;
            }
            constructor(options = {}) {
              const hook =
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$before$2d$after$2d$hook$40$3$2e$0$2e$2$2f$node_modules$2f$before$2d$after$2d$hook$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'default'
                ].Collection();
              const requestDefaults = {
                baseUrl:
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$40$9$2e$2$2e$2$2f$node_modules$2f40$octokit$2f$request$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'request'
                  ].endpoint.DEFAULTS.baseUrl,
                headers: {},
                request: Object.assign({}, options.request, {
                  // @ts-ignore internal usage only, no need to type
                  hook: hook.bind(null, 'request'),
                }),
                mediaType: {
                  previews: [],
                  format: '',
                },
              };
              requestDefaults.headers['user-agent'] = options.userAgent
                ? `${options.userAgent} ${userAgentTrail}`
                : userAgentTrail;
              if (options.baseUrl) {
                requestDefaults.baseUrl = options.baseUrl;
              }
              if (options.previews) {
                requestDefaults.mediaType.previews = options.previews;
              }
              if (options.timeZone) {
                requestDefaults.headers['time-zone'] = options.timeZone;
              }
              this.request =
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$request$40$9$2e$2$2e$2$2f$node_modules$2f40$octokit$2f$request$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'request'
                ].defaults(requestDefaults);
              this.graphql = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$graphql$40$8$2e$2$2e$1$2f$node_modules$2f40$octokit$2f$graphql$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'withCustomRequest'
              ])(this.request).defaults(requestDefaults);
              this.log = Object.assign(
                {
                  debug: noop,
                  info: noop,
                  warn: consoleWarn,
                  error: consoleError,
                },
                options.log,
              );
              this.hook = hook;
              if (!options.authStrategy) {
                if (!options.auth) {
                  this.auth = async () => ({
                    type: 'unauthenticated',
                  });
                } else {
                  const auth = (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$auth$2d$token$40$5$2e$1$2e$2$2f$node_modules$2f40$octokit$2f$auth$2d$token$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'createTokenAuth'
                  ])(options.auth);
                  hook.wrap('request', auth.hook);
                  this.auth = auth;
                }
              } else {
                const { authStrategy, ...otherOptions } = options;
                const auth = authStrategy(
                  Object.assign(
                    {
                      request: this.request,
                      log: this.log,
                      // we pass the current octokit instance as well as its constructor options
                      // to allow for authentication strategies that return a new octokit instance
                      // that shares the same internal state as the current one. The original
                      // requirement for this was the "event-octokit" authentication strategy
                      // of https://github.com/probot/octokit-auth-probot.
                      octokit: this,
                      octokitOptions: otherOptions,
                    },
                    options.auth,
                  ),
                );
                hook.wrap('request', auth.hook);
                this.auth = auth;
              }
              const classConstructor = this.constructor;
              for (let i = 0; i < classConstructor.plugins.length; ++i) {
                Object.assign(this, classConstructor.plugins[i](this, options));
              }
            }
            // assigned during constructor
            request;
            graphql;
            log;
            hook;
            // TODO: type `octokit.auth` based on passed options.authStrategy
            auth;
          }
        }
      },
    '[project]/node_modules/.pnpm/@octokit+plugin-request-log@5.3.1_@octokit+core@6.1.4/node_modules/@octokit/plugin-request-log/dist-src/version.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            VERSION: () => VERSION,
          });
          const VERSION = '5.3.1';
        }
      },
    '[project]/node_modules/.pnpm/@octokit+plugin-request-log@5.3.1_@octokit+core@6.1.4/node_modules/@octokit/plugin-request-log/dist-src/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            requestLog: () => requestLog,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$plugin$2d$request$2d$log$40$5$2e$3$2e$1_$40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$plugin$2d$request$2d$log$2f$dist$2d$src$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+plugin-request-log@5.3.1_@octokit+core@6.1.4/node_modules/@octokit/plugin-request-log/dist-src/version.js [app-client] (ecmascript)',
            );
          function requestLog(octokit) {
            octokit.hook.wrap('request', (request, options) => {
              octokit.log.debug('request', options);
              const start = Date.now();
              const requestOptions = octokit.request.endpoint.parse(options);
              const path = requestOptions.url.replace(options.baseUrl, '');
              return request(options)
                .then((response) => {
                  const requestId = response.headers['x-github-request-id'];
                  octokit.log.info(
                    `${requestOptions.method} ${path} - ${response.status} with id ${requestId} in ${Date.now() - start}ms`,
                  );
                  return response;
                })
                .catch((error) => {
                  const requestId = error.response?.headers['x-github-request-id'] || 'UNKNOWN';
                  octokit.log.error(
                    `${requestOptions.method} ${path} - ${error.status} with id ${requestId} in ${Date.now() - start}ms`,
                  );
                  throw error;
                });
            });
          }
          requestLog.VERSION =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$plugin$2d$request$2d$log$40$5$2e$3$2e$1_$40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$plugin$2d$request$2d$log$2f$dist$2d$src$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'VERSION'
            ];
        }
      },
    '[project]/node_modules/.pnpm/@octokit+plugin-paginate-rest@11.4.3_@octokit+core@6.1.4/node_modules/@octokit/plugin-paginate-rest/dist-bundle/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          // pkg/dist-src/version.js
          __turbopack_context__.s({
            composePaginateRest: () => composePaginateRest,
            isPaginatingEndpoint: () => isPaginatingEndpoint,
            paginateRest: () => paginateRest,
            paginatingEndpoints: () => paginatingEndpoints,
          });
          var VERSION = '0.0.0-development';
          // pkg/dist-src/normalize-paginated-list-response.js
          function normalizePaginatedListResponse(response) {
            if (!response.data) {
              return {
                ...response,
                data: [],
              };
            }
            const responseNeedsNormalization = 'total_count' in response.data && !('url' in response.data);
            if (!responseNeedsNormalization) return response;
            const incompleteResults = response.data.incomplete_results;
            const repositorySelection = response.data.repository_selection;
            const totalCount = response.data.total_count;
            delete response.data.incomplete_results;
            delete response.data.repository_selection;
            delete response.data.total_count;
            const namespaceKey = Object.keys(response.data)[0];
            const data = response.data[namespaceKey];
            response.data = data;
            if (typeof incompleteResults !== 'undefined') {
              response.data.incomplete_results = incompleteResults;
            }
            if (typeof repositorySelection !== 'undefined') {
              response.data.repository_selection = repositorySelection;
            }
            response.data.total_count = totalCount;
            return response;
          }
          // pkg/dist-src/iterator.js
          function iterator(octokit, route, parameters) {
            const options =
              typeof route === 'function' ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);
            const requestMethod = typeof route === 'function' ? route : octokit.request;
            const method = options.method;
            const headers = options.headers;
            let url = options.url;
            return {
              [Symbol.asyncIterator]: () => ({
                async next() {
                  if (!url)
                    return {
                      done: true,
                    };
                  try {
                    const response = await requestMethod({
                      method,
                      url,
                      headers,
                    });
                    const normalizedResponse = normalizePaginatedListResponse(response);
                    url = ((normalizedResponse.headers.link || '').match(/<([^<>]+)>;\s*rel="next"/) || [])[1];
                    return {
                      value: normalizedResponse,
                    };
                  } catch (error) {
                    if (error.status !== 409) throw error;
                    url = '';
                    return {
                      value: {
                        status: 200,
                        headers: {},
                        data: [],
                      },
                    };
                  }
                },
              }),
            };
          }
          // pkg/dist-src/paginate.js
          function paginate(octokit, route, parameters, mapFn) {
            if (typeof parameters === 'function') {
              mapFn = parameters;
              parameters = void 0;
            }
            return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);
          }
          function gather(octokit, results, iterator2, mapFn) {
            return iterator2.next().then((result) => {
              if (result.done) {
                return results;
              }
              let earlyExit = false;
              function done() {
                earlyExit = true;
              }
              results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);
              if (earlyExit) {
                return results;
              }
              return gather(octokit, results, iterator2, mapFn);
            });
          }
          // pkg/dist-src/compose-paginate.js
          var composePaginateRest = Object.assign(paginate, {
            iterator,
          });
          // pkg/dist-src/generated/paginating-endpoints.js
          var paginatingEndpoints = [
            'GET /advisories',
            'GET /app/hook/deliveries',
            'GET /app/installation-requests',
            'GET /app/installations',
            'GET /assignments/{assignment_id}/accepted_assignments',
            'GET /classrooms',
            'GET /classrooms/{classroom_id}/assignments',
            'GET /enterprises/{enterprise}/code-security/configurations',
            'GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories',
            'GET /enterprises/{enterprise}/dependabot/alerts',
            'GET /enterprises/{enterprise}/secret-scanning/alerts',
            'GET /events',
            'GET /gists',
            'GET /gists/public',
            'GET /gists/starred',
            'GET /gists/{gist_id}/comments',
            'GET /gists/{gist_id}/commits',
            'GET /gists/{gist_id}/forks',
            'GET /installation/repositories',
            'GET /issues',
            'GET /licenses',
            'GET /marketplace_listing/plans',
            'GET /marketplace_listing/plans/{plan_id}/accounts',
            'GET /marketplace_listing/stubbed/plans',
            'GET /marketplace_listing/stubbed/plans/{plan_id}/accounts',
            'GET /networks/{owner}/{repo}/events',
            'GET /notifications',
            'GET /organizations',
            'GET /orgs/{org}/actions/cache/usage-by-repository',
            'GET /orgs/{org}/actions/permissions/repositories',
            'GET /orgs/{org}/actions/runner-groups',
            'GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories',
            'GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners',
            'GET /orgs/{org}/actions/runners',
            'GET /orgs/{org}/actions/secrets',
            'GET /orgs/{org}/actions/secrets/{secret_name}/repositories',
            'GET /orgs/{org}/actions/variables',
            'GET /orgs/{org}/actions/variables/{name}/repositories',
            'GET /orgs/{org}/attestations/{subject_digest}',
            'GET /orgs/{org}/blocks',
            'GET /orgs/{org}/code-scanning/alerts',
            'GET /orgs/{org}/code-security/configurations',
            'GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories',
            'GET /orgs/{org}/codespaces',
            'GET /orgs/{org}/codespaces/secrets',
            'GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories',
            'GET /orgs/{org}/copilot/billing/seats',
            'GET /orgs/{org}/copilot/metrics',
            'GET /orgs/{org}/copilot/usage',
            'GET /orgs/{org}/dependabot/alerts',
            'GET /orgs/{org}/dependabot/secrets',
            'GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories',
            'GET /orgs/{org}/events',
            'GET /orgs/{org}/failed_invitations',
            'GET /orgs/{org}/hooks',
            'GET /orgs/{org}/hooks/{hook_id}/deliveries',
            'GET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}',
            'GET /orgs/{org}/insights/api/subject-stats',
            'GET /orgs/{org}/insights/api/user-stats/{user_id}',
            'GET /orgs/{org}/installations',
            'GET /orgs/{org}/invitations',
            'GET /orgs/{org}/invitations/{invitation_id}/teams',
            'GET /orgs/{org}/issues',
            'GET /orgs/{org}/members',
            'GET /orgs/{org}/members/{username}/codespaces',
            'GET /orgs/{org}/migrations',
            'GET /orgs/{org}/migrations/{migration_id}/repositories',
            'GET /orgs/{org}/organization-roles/{role_id}/teams',
            'GET /orgs/{org}/organization-roles/{role_id}/users',
            'GET /orgs/{org}/outside_collaborators',
            'GET /orgs/{org}/packages',
            'GET /orgs/{org}/packages/{package_type}/{package_name}/versions',
            'GET /orgs/{org}/personal-access-token-requests',
            'GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories',
            'GET /orgs/{org}/personal-access-tokens',
            'GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories',
            'GET /orgs/{org}/private-registries',
            'GET /orgs/{org}/projects',
            'GET /orgs/{org}/properties/values',
            'GET /orgs/{org}/public_members',
            'GET /orgs/{org}/repos',
            'GET /orgs/{org}/rulesets',
            'GET /orgs/{org}/rulesets/rule-suites',
            'GET /orgs/{org}/secret-scanning/alerts',
            'GET /orgs/{org}/security-advisories',
            'GET /orgs/{org}/team/{team_slug}/copilot/metrics',
            'GET /orgs/{org}/team/{team_slug}/copilot/usage',
            'GET /orgs/{org}/teams',
            'GET /orgs/{org}/teams/{team_slug}/discussions',
            'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments',
            'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions',
            'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions',
            'GET /orgs/{org}/teams/{team_slug}/invitations',
            'GET /orgs/{org}/teams/{team_slug}/members',
            'GET /orgs/{org}/teams/{team_slug}/projects',
            'GET /orgs/{org}/teams/{team_slug}/repos',
            'GET /orgs/{org}/teams/{team_slug}/teams',
            'GET /projects/columns/{column_id}/cards',
            'GET /projects/{project_id}/collaborators',
            'GET /projects/{project_id}/columns',
            'GET /repos/{owner}/{repo}/actions/artifacts',
            'GET /repos/{owner}/{repo}/actions/caches',
            'GET /repos/{owner}/{repo}/actions/organization-secrets',
            'GET /repos/{owner}/{repo}/actions/organization-variables',
            'GET /repos/{owner}/{repo}/actions/runners',
            'GET /repos/{owner}/{repo}/actions/runs',
            'GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts',
            'GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs',
            'GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs',
            'GET /repos/{owner}/{repo}/actions/secrets',
            'GET /repos/{owner}/{repo}/actions/variables',
            'GET /repos/{owner}/{repo}/actions/workflows',
            'GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs',
            'GET /repos/{owner}/{repo}/activity',
            'GET /repos/{owner}/{repo}/assignees',
            'GET /repos/{owner}/{repo}/attestations/{subject_digest}',
            'GET /repos/{owner}/{repo}/branches',
            'GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations',
            'GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs',
            'GET /repos/{owner}/{repo}/code-scanning/alerts',
            'GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances',
            'GET /repos/{owner}/{repo}/code-scanning/analyses',
            'GET /repos/{owner}/{repo}/codespaces',
            'GET /repos/{owner}/{repo}/codespaces/devcontainers',
            'GET /repos/{owner}/{repo}/codespaces/secrets',
            'GET /repos/{owner}/{repo}/collaborators',
            'GET /repos/{owner}/{repo}/comments',
            'GET /repos/{owner}/{repo}/comments/{comment_id}/reactions',
            'GET /repos/{owner}/{repo}/commits',
            'GET /repos/{owner}/{repo}/commits/{commit_sha}/comments',
            'GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls',
            'GET /repos/{owner}/{repo}/commits/{ref}/check-runs',
            'GET /repos/{owner}/{repo}/commits/{ref}/check-suites',
            'GET /repos/{owner}/{repo}/commits/{ref}/status',
            'GET /repos/{owner}/{repo}/commits/{ref}/statuses',
            'GET /repos/{owner}/{repo}/contributors',
            'GET /repos/{owner}/{repo}/dependabot/alerts',
            'GET /repos/{owner}/{repo}/dependabot/secrets',
            'GET /repos/{owner}/{repo}/deployments',
            'GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses',
            'GET /repos/{owner}/{repo}/environments',
            'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies',
            'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps',
            'GET /repos/{owner}/{repo}/environments/{environment_name}/secrets',
            'GET /repos/{owner}/{repo}/environments/{environment_name}/variables',
            'GET /repos/{owner}/{repo}/events',
            'GET /repos/{owner}/{repo}/forks',
            'GET /repos/{owner}/{repo}/hooks',
            'GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries',
            'GET /repos/{owner}/{repo}/invitations',
            'GET /repos/{owner}/{repo}/issues',
            'GET /repos/{owner}/{repo}/issues/comments',
            'GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions',
            'GET /repos/{owner}/{repo}/issues/events',
            'GET /repos/{owner}/{repo}/issues/{issue_number}/comments',
            'GET /repos/{owner}/{repo}/issues/{issue_number}/events',
            'GET /repos/{owner}/{repo}/issues/{issue_number}/labels',
            'GET /repos/{owner}/{repo}/issues/{issue_number}/reactions',
            'GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues',
            'GET /repos/{owner}/{repo}/issues/{issue_number}/timeline',
            'GET /repos/{owner}/{repo}/keys',
            'GET /repos/{owner}/{repo}/labels',
            'GET /repos/{owner}/{repo}/milestones',
            'GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels',
            'GET /repos/{owner}/{repo}/notifications',
            'GET /repos/{owner}/{repo}/pages/builds',
            'GET /repos/{owner}/{repo}/projects',
            'GET /repos/{owner}/{repo}/pulls',
            'GET /repos/{owner}/{repo}/pulls/comments',
            'GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions',
            'GET /repos/{owner}/{repo}/pulls/{pull_number}/comments',
            'GET /repos/{owner}/{repo}/pulls/{pull_number}/commits',
            'GET /repos/{owner}/{repo}/pulls/{pull_number}/files',
            'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews',
            'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments',
            'GET /repos/{owner}/{repo}/releases',
            'GET /repos/{owner}/{repo}/releases/{release_id}/assets',
            'GET /repos/{owner}/{repo}/releases/{release_id}/reactions',
            'GET /repos/{owner}/{repo}/rules/branches/{branch}',
            'GET /repos/{owner}/{repo}/rulesets',
            'GET /repos/{owner}/{repo}/rulesets/rule-suites',
            'GET /repos/{owner}/{repo}/secret-scanning/alerts',
            'GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations',
            'GET /repos/{owner}/{repo}/security-advisories',
            'GET /repos/{owner}/{repo}/stargazers',
            'GET /repos/{owner}/{repo}/subscribers',
            'GET /repos/{owner}/{repo}/tags',
            'GET /repos/{owner}/{repo}/teams',
            'GET /repos/{owner}/{repo}/topics',
            'GET /repositories',
            'GET /search/code',
            'GET /search/commits',
            'GET /search/issues',
            'GET /search/labels',
            'GET /search/repositories',
            'GET /search/topics',
            'GET /search/users',
            'GET /teams/{team_id}/discussions',
            'GET /teams/{team_id}/discussions/{discussion_number}/comments',
            'GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions',
            'GET /teams/{team_id}/discussions/{discussion_number}/reactions',
            'GET /teams/{team_id}/invitations',
            'GET /teams/{team_id}/members',
            'GET /teams/{team_id}/projects',
            'GET /teams/{team_id}/repos',
            'GET /teams/{team_id}/teams',
            'GET /user/blocks',
            'GET /user/codespaces',
            'GET /user/codespaces/secrets',
            'GET /user/emails',
            'GET /user/followers',
            'GET /user/following',
            'GET /user/gpg_keys',
            'GET /user/installations',
            'GET /user/installations/{installation_id}/repositories',
            'GET /user/issues',
            'GET /user/keys',
            'GET /user/marketplace_purchases',
            'GET /user/marketplace_purchases/stubbed',
            'GET /user/memberships/orgs',
            'GET /user/migrations',
            'GET /user/migrations/{migration_id}/repositories',
            'GET /user/orgs',
            'GET /user/packages',
            'GET /user/packages/{package_type}/{package_name}/versions',
            'GET /user/public_emails',
            'GET /user/repos',
            'GET /user/repository_invitations',
            'GET /user/social_accounts',
            'GET /user/ssh_signing_keys',
            'GET /user/starred',
            'GET /user/subscriptions',
            'GET /user/teams',
            'GET /users',
            'GET /users/{username}/attestations/{subject_digest}',
            'GET /users/{username}/events',
            'GET /users/{username}/events/orgs/{org}',
            'GET /users/{username}/events/public',
            'GET /users/{username}/followers',
            'GET /users/{username}/following',
            'GET /users/{username}/gists',
            'GET /users/{username}/gpg_keys',
            'GET /users/{username}/keys',
            'GET /users/{username}/orgs',
            'GET /users/{username}/packages',
            'GET /users/{username}/projects',
            'GET /users/{username}/received_events',
            'GET /users/{username}/received_events/public',
            'GET /users/{username}/repos',
            'GET /users/{username}/social_accounts',
            'GET /users/{username}/ssh_signing_keys',
            'GET /users/{username}/starred',
            'GET /users/{username}/subscriptions',
          ];
          // pkg/dist-src/paginating-endpoints.js
          function isPaginatingEndpoint(arg) {
            if (typeof arg === 'string') {
              return paginatingEndpoints.includes(arg);
            } else {
              return false;
            }
          }
          // pkg/dist-src/index.js
          function paginateRest(octokit) {
            return {
              paginate: Object.assign(paginate.bind(null, octokit), {
                iterator: iterator.bind(null, octokit),
              }),
            };
          }
          paginateRest.VERSION = VERSION;
        }
      },
    '[project]/node_modules/.pnpm/@octokit+rest@21.1.1/node_modules/@octokit/rest/dist-src/version.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            VERSION: () => VERSION,
          });
          const VERSION = '21.1.1';
        }
      },
    '[project]/node_modules/.pnpm/@octokit+rest@21.1.1/node_modules/@octokit/rest/dist-src/index.js [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            Octokit: () => Octokit,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$core$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+core@6.1.4/node_modules/@octokit/core/dist-src/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$plugin$2d$request$2d$log$40$5$2e$3$2e$1_$40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$plugin$2d$request$2d$log$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+plugin-request-log@5.3.1_@octokit+core@6.1.4/node_modules/@octokit/plugin-request-log/dist-src/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$plugin$2d$paginate$2d$rest$40$11$2e$4$2e$3_$40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$plugin$2d$paginate$2d$rest$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+plugin-paginate-rest@11.4.3_@octokit+core@6.1.4/node_modules/@octokit/plugin-paginate-rest/dist-bundle/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$plugin$2d$rest$2d$endpoi_eeb24b4cf05c6ddb941ab94266f46ede$2f$node_modules$2f40$octokit$2f$plugin$2d$rest$2d$endpoint$2d$methods$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+plugin-rest-endpoi_eeb24b4cf05c6ddb941ab94266f46ede/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$rest$40$21$2e$1$2e$1$2f$node_modules$2f40$octokit$2f$rest$2f$dist$2d$src$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/@octokit+rest@21.1.1/node_modules/@octokit/rest/dist-src/version.js [app-client] (ecmascript)',
            );
          const Octokit =
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$core$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'Octokit'
            ]
              .plugin(
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$plugin$2d$request$2d$log$40$5$2e$3$2e$1_$40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$plugin$2d$request$2d$log$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'requestLog'
                ],
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$plugin$2d$rest$2d$endpoi_eeb24b4cf05c6ddb941ab94266f46ede$2f$node_modules$2f40$octokit$2f$plugin$2d$rest$2d$endpoint$2d$methods$2f$dist$2d$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'legacyRestEndpointMethods'
                ],
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$plugin$2d$paginate$2d$rest$40$11$2e$4$2e$3_$40$octokit$2b$core$40$6$2e$1$2e$4$2f$node_modules$2f40$octokit$2f$plugin$2d$paginate$2d$rest$2f$dist$2d$bundle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'paginateRest'
                ],
              )
              .defaults({
                userAgent: `octokit-rest.js/${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$octokit$2b$rest$40$21$2e$1$2e$1$2f$node_modules$2f40$octokit$2f$rest$2f$dist$2d$src$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__['VERSION']}`,
              });
        }
      },
    '[project]/node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)': (
      __turbopack_context__,
    ) => {
      'use strict';

      var { g: global, __dirname } = __turbopack_context__;
      {
        __turbopack_context__.s({
          clsx: () => clsx,
          default: () => __TURBOPACK__default__export__,
        });
        function r(e) {
          var t,
            f,
            n = '';
          if ('string' == typeof e || 'number' == typeof e) n += e;
          else if ('object' == typeof e)
            if (Array.isArray(e)) {
              var o = e.length;
              for (t = 0; t < o; t++) e[t] && (f = r(e[t])) && (n && (n += ' '), (n += f));
            } else for (f in e) e[f] && (n && (n += ' '), (n += f));
          return n;
        }
        function clsx() {
          for (var e, t, f = 0, n = '', o = arguments.length; f < o; f++)
            (e = arguments[f]) && (t = r(e)) && (n && (n += ' '), (n += t));
          return n;
        }
        const __TURBOPACK__default__export__ = clsx;
      }
    },
    '[project]/node_modules/.pnpm/react-toastify@11.0.5_react_6c9864553ecaf35c74ef9dc135667ad0/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          __turbopack_context__.s({
            Bounce: () => lt,
            Flip: () => uo,
            Icons: () => W,
            Slide: () => mo,
            ToastContainer: () => Lt,
            Zoom: () => po,
            collapseToast: () => Z,
            cssTransition: () => $,
            toast: () => y,
          });
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)',
            );
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$clsx$40$2$2e$1$2e$1$2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)',
            );
          ('use client');
          function Mt(t) {
            if (!t || typeof document == 'undefined') return;
            let o = document.head || document.getElementsByTagName('head')[0],
              e = document.createElement('style');
            (e.type = 'text/css'),
              o.firstChild ? o.insertBefore(e, o.firstChild) : o.appendChild(e),
              e.styleSheet ? (e.styleSheet.cssText = t) : e.appendChild(document.createTextNode(t));
          }
          Mt(`:root{--toastify-color-light: #fff;--toastify-color-dark: #121212;--toastify-color-info: #3498db;--toastify-color-success: #07bc0c;--toastify-color-warning: #f1c40f;--toastify-color-error: hsl(6, 78%, 57%);--toastify-color-transparent: rgba(255, 255, 255, .7);--toastify-icon-color-info: var(--toastify-color-info);--toastify-icon-color-success: var(--toastify-color-success);--toastify-icon-color-warning: var(--toastify-color-warning);--toastify-icon-color-error: var(--toastify-color-error);--toastify-container-width: fit-content;--toastify-toast-width: 320px;--toastify-toast-offset: 16px;--toastify-toast-top: max(var(--toastify-toast-offset), env(safe-area-inset-top));--toastify-toast-right: max(var(--toastify-toast-offset), env(safe-area-inset-right));--toastify-toast-left: max(var(--toastify-toast-offset), env(safe-area-inset-left));--toastify-toast-bottom: max(var(--toastify-toast-offset), env(safe-area-inset-bottom));--toastify-toast-background: #fff;--toastify-toast-padding: 14px;--toastify-toast-min-height: 64px;--toastify-toast-max-height: 800px;--toastify-toast-bd-radius: 6px;--toastify-toast-shadow: 0px 4px 12px rgba(0, 0, 0, .1);--toastify-font-family: sans-serif;--toastify-z-index: 9999;--toastify-text-color-light: #757575;--toastify-text-color-dark: #fff;--toastify-text-color-info: #fff;--toastify-text-color-success: #fff;--toastify-text-color-warning: #fff;--toastify-text-color-error: #fff;--toastify-spinner-color: #616161;--toastify-spinner-color-empty-area: #e0e0e0;--toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);--toastify-color-progress-dark: #bb86fc;--toastify-color-progress-info: var(--toastify-color-info);--toastify-color-progress-success: var(--toastify-color-success);--toastify-color-progress-warning: var(--toastify-color-warning);--toastify-color-progress-error: var(--toastify-color-error);--toastify-color-progress-bgo: .2}.Toastify__toast-container{z-index:var(--toastify-z-index);-webkit-transform:translate3d(0,0,var(--toastify-z-index));position:fixed;width:var(--toastify-container-width);box-sizing:border-box;color:#fff;display:flex;flex-direction:column}.Toastify__toast-container--top-left{top:var(--toastify-toast-top);left:var(--toastify-toast-left)}.Toastify__toast-container--top-center{top:var(--toastify-toast-top);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--top-right{top:var(--toastify-toast-top);right:var(--toastify-toast-right);align-items:end}.Toastify__toast-container--bottom-left{bottom:var(--toastify-toast-bottom);left:var(--toastify-toast-left)}.Toastify__toast-container--bottom-center{bottom:var(--toastify-toast-bottom);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--bottom-right{bottom:var(--toastify-toast-bottom);right:var(--toastify-toast-right);align-items:end}.Toastify__toast{--y: 0;position:relative;touch-action:none;width:var(--toastify-toast-width);min-height:var(--toastify-toast-min-height);box-sizing:border-box;margin-bottom:1rem;padding:var(--toastify-toast-padding);border-radius:var(--toastify-toast-bd-radius);box-shadow:var(--toastify-toast-shadow);max-height:var(--toastify-toast-max-height);font-family:var(--toastify-font-family);z-index:0;display:flex;flex:1 auto;align-items:center;word-break:break-word}@media only screen and (max-width: 480px){.Toastify__toast-container{width:100vw;left:env(safe-area-inset-left);margin:0}.Toastify__toast-container--top-left,.Toastify__toast-container--top-center,.Toastify__toast-container--top-right{top:env(safe-area-inset-top);transform:translate(0)}.Toastify__toast-container--bottom-left,.Toastify__toast-container--bottom-center,.Toastify__toast-container--bottom-right{bottom:env(safe-area-inset-bottom);transform:translate(0)}.Toastify__toast-container--rtl{right:env(safe-area-inset-right);left:initial}.Toastify__toast{--toastify-toast-width: 100%;margin-bottom:0;border-radius:0}}.Toastify__toast-container[data-stacked=true]{width:var(--toastify-toast-width)}.Toastify__toast--stacked{position:absolute;width:100%;transform:translate3d(0,var(--y),0) scale(var(--s));transition:transform .3s}.Toastify__toast--stacked[data-collapsed] .Toastify__toast-body,.Toastify__toast--stacked[data-collapsed] .Toastify__close-button{transition:opacity .1s}.Toastify__toast--stacked[data-collapsed=false]{overflow:visible}.Toastify__toast--stacked[data-collapsed=true]:not(:last-child)>*{opacity:0}.Toastify__toast--stacked:after{content:"";position:absolute;left:0;right:0;height:calc(var(--g) * 1px);bottom:100%}.Toastify__toast--stacked[data-pos=top]{top:0}.Toastify__toast--stacked[data-pos=bot]{bottom:0}.Toastify__toast--stacked[data-pos=bot].Toastify__toast--stacked:before{transform-origin:top}.Toastify__toast--stacked[data-pos=top].Toastify__toast--stacked:before{transform-origin:bottom}.Toastify__toast--stacked:before{content:"";position:absolute;left:0;right:0;bottom:0;height:100%;transform:scaleY(3);z-index:-1}.Toastify__toast--rtl{direction:rtl}.Toastify__toast--close-on-click{cursor:pointer}.Toastify__toast-icon{margin-inline-end:10px;width:22px;flex-shrink:0;display:flex}.Toastify--animate{animation-fill-mode:both;animation-duration:.5s}.Toastify--animate-icon{animation-fill-mode:both;animation-duration:.3s}.Toastify__toast-theme--dark{background:var(--toastify-color-dark);color:var(--toastify-text-color-dark)}.Toastify__toast-theme--light,.Toastify__toast-theme--colored.Toastify__toast--default{background:var(--toastify-color-light);color:var(--toastify-text-color-light)}.Toastify__toast-theme--colored.Toastify__toast--info{color:var(--toastify-text-color-info);background:var(--toastify-color-info)}.Toastify__toast-theme--colored.Toastify__toast--success{color:var(--toastify-text-color-success);background:var(--toastify-color-success)}.Toastify__toast-theme--colored.Toastify__toast--warning{color:var(--toastify-text-color-warning);background:var(--toastify-color-warning)}.Toastify__toast-theme--colored.Toastify__toast--error{color:var(--toastify-text-color-error);background:var(--toastify-color-error)}.Toastify__progress-bar-theme--light{background:var(--toastify-color-progress-light)}.Toastify__progress-bar-theme--dark{background:var(--toastify-color-progress-dark)}.Toastify__progress-bar--info{background:var(--toastify-color-progress-info)}.Toastify__progress-bar--success{background:var(--toastify-color-progress-success)}.Toastify__progress-bar--warning{background:var(--toastify-color-progress-warning)}.Toastify__progress-bar--error{background:var(--toastify-color-progress-error)}.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--success,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error{background:var(--toastify-color-transparent)}.Toastify__close-button{color:#fff;position:absolute;top:6px;right:6px;background:transparent;outline:none;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s ease;z-index:1}.Toastify__toast--rtl .Toastify__close-button{left:6px;right:unset}.Toastify__close-button--light{color:#000;opacity:.3}.Toastify__close-button>svg{fill:currentColor;height:16px;width:14px}.Toastify__close-button:hover,.Toastify__close-button:focus{opacity:1}@keyframes Toastify__trackProgress{0%{transform:scaleX(1)}to{transform:scaleX(0)}}.Toastify__progress-bar{position:absolute;bottom:0;left:0;width:100%;height:100%;z-index:1;opacity:.7;transform-origin:left}.Toastify__progress-bar--animated{animation:Toastify__trackProgress linear 1 forwards}.Toastify__progress-bar--controlled{transition:transform .2s}.Toastify__progress-bar--rtl{right:0;left:initial;transform-origin:right;border-bottom-left-radius:initial}.Toastify__progress-bar--wrp{position:absolute;overflow:hidden;bottom:0;left:0;width:100%;height:5px;border-bottom-left-radius:var(--toastify-toast-bd-radius);border-bottom-right-radius:var(--toastify-toast-bd-radius)}.Toastify__progress-bar--wrp[data-hidden=true]{opacity:0}.Toastify__progress-bar--bg{opacity:var(--toastify-color-progress-bgo);width:100%;height:100%}.Toastify__spinner{width:20px;height:20px;box-sizing:border-box;border:2px solid;border-radius:100%;border-color:var(--toastify-spinner-color-empty-area);border-right-color:var(--toastify-spinner-color);animation:Toastify__spin .65s linear infinite}@keyframes Toastify__bounceInRight{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutRight{20%{opacity:1;transform:translate3d(-20px,var(--y),0)}to{opacity:0;transform:translate3d(2000px,var(--y),0)}}@keyframes Toastify__bounceInLeft{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutLeft{20%{opacity:1;transform:translate3d(20px,var(--y),0)}to{opacity:0;transform:translate3d(-2000px,var(--y),0)}}@keyframes Toastify__bounceInUp{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translateZ(0)}}@keyframes Toastify__bounceOutUp{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}@keyframes Toastify__bounceInDown{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:none}}@keyframes Toastify__bounceOutDown{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,2000px,0)}}.Toastify__bounce-enter--top-left,.Toastify__bounce-enter--bottom-left{animation-name:Toastify__bounceInLeft}.Toastify__bounce-enter--top-right,.Toastify__bounce-enter--bottom-right{animation-name:Toastify__bounceInRight}.Toastify__bounce-enter--top-center{animation-name:Toastify__bounceInDown}.Toastify__bounce-enter--bottom-center{animation-name:Toastify__bounceInUp}.Toastify__bounce-exit--top-left,.Toastify__bounce-exit--bottom-left{animation-name:Toastify__bounceOutLeft}.Toastify__bounce-exit--top-right,.Toastify__bounce-exit--bottom-right{animation-name:Toastify__bounceOutRight}.Toastify__bounce-exit--top-center{animation-name:Toastify__bounceOutUp}.Toastify__bounce-exit--bottom-center{animation-name:Toastify__bounceOutDown}@keyframes Toastify__zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes Toastify__zoomOut{0%{opacity:1}50%{opacity:0;transform:translate3d(0,var(--y),0) scale3d(.3,.3,.3)}to{opacity:0}}.Toastify__zoom-enter{animation-name:Toastify__zoomIn}.Toastify__zoom-exit{animation-name:Toastify__zoomOut}@keyframes Toastify__flipIn{0%{transform:perspective(400px) rotateX(90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotateX(-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotateX(10deg);opacity:1}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}@keyframes Toastify__flipOut{0%{transform:translate3d(0,var(--y),0) perspective(400px)}30%{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(-20deg);opacity:1}to{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(90deg);opacity:0}}.Toastify__flip-enter{animation-name:Toastify__flipIn}.Toastify__flip-exit{animation-name:Toastify__flipOut}@keyframes Toastify__slideInRight{0%{transform:translate3d(110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInLeft{0%{transform:translate3d(-110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInUp{0%{transform:translate3d(0,110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInDown{0%{transform:translate3d(0,-110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideOutRight{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(110%,var(--y),0)}}@keyframes Toastify__slideOutLeft{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(-110%,var(--y),0)}}@keyframes Toastify__slideOutDown{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,500px,0)}}@keyframes Toastify__slideOutUp{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,-500px,0)}}.Toastify__slide-enter--top-left,.Toastify__slide-enter--bottom-left{animation-name:Toastify__slideInLeft}.Toastify__slide-enter--top-right,.Toastify__slide-enter--bottom-right{animation-name:Toastify__slideInRight}.Toastify__slide-enter--top-center{animation-name:Toastify__slideInDown}.Toastify__slide-enter--bottom-center{animation-name:Toastify__slideInUp}.Toastify__slide-exit--top-left,.Toastify__slide-exit--bottom-left{animation-name:Toastify__slideOutLeft;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-right,.Toastify__slide-exit--bottom-right{animation-name:Toastify__slideOutRight;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-center{animation-name:Toastify__slideOutUp;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--bottom-center{animation-name:Toastify__slideOutDown;animation-timing-function:ease-in;animation-duration:.3s}@keyframes Toastify__spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}
`);
          var L = (t) => typeof t == 'number' && !isNaN(t),
            N = (t) => typeof t == 'string',
            P = (t) => typeof t == 'function',
            mt = (t) => N(t) || L(t),
            B = (t) => (N(t) || P(t) ? t : null),
            pt = (t, o) => (t === !1 || (L(t) && t > 0) ? t : o),
            z = (t) =>
              (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'isValidElement'
              ])(t) ||
              N(t) ||
              P(t) ||
              L(t);
          function Z(t, o, e = 300) {
            let { scrollHeight: r, style: s } = t;
            requestAnimationFrame(() => {
              (s.minHeight = 'initial'),
                (s.height = r + 'px'),
                (s.transition = `all ${e}ms`),
                requestAnimationFrame(() => {
                  (s.height = '0'), (s.padding = '0'), (s.margin = '0'), setTimeout(o, e);
                });
            });
          }
          function $({ enter: t, exit: o, appendPosition: e = !1, collapse: r = !0, collapseDuration: s = 300 }) {
            return function ({
              children: a,
              position: d,
              preventExitTransition: c,
              done: T,
              nodeRef: g,
              isIn: v,
              playToast: x,
            }) {
              let C = e ? `${t}--${d}` : t,
                S = e ? `${o}--${d}` : o,
                E = (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'useRef'
                ])(0);
              return (
                (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'useLayoutEffect'
                ])(() => {
                  let f = g.current,
                    p = C.split(' '),
                    b = (n) => {
                      n.target === g.current &&
                        (x(),
                        f.removeEventListener('animationend', b),
                        f.removeEventListener('animationcancel', b),
                        E.current === 0 && n.type !== 'animationcancel' && f.classList.remove(...p));
                    };
                  (() => {
                    f.classList.add(...p),
                      f.addEventListener('animationend', b),
                      f.addEventListener('animationcancel', b);
                  })();
                }, []),
                (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'useEffect'
                ])(() => {
                  let f = g.current,
                    p = () => {
                      f.removeEventListener('animationend', p), r ? Z(f, T, s) : T();
                    };
                  v ||
                    (c
                      ? p()
                      : (() => {
                          (E.current = 1), (f.className += ` ${S}`), f.addEventListener('animationend', p);
                        })());
                }, [v]),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'default'
                ].createElement(
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'default'
                  ].Fragment,
                  null,
                  a,
                )
              );
            };
          }
          function J(t, o) {
            return {
              content: tt(t.content, t.props),
              containerId: t.props.containerId,
              id: t.props.toastId,
              theme: t.props.theme,
              type: t.props.type,
              data: t.props.data || {},
              isLoading: t.props.isLoading,
              icon: t.props.icon,
              reason: t.removalReason,
              status: o,
            };
          }
          function tt(t, o, e = !1) {
            return (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'isValidElement'
            ])(t) && !N(t.type)
              ? (0,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'cloneElement'
                ])(t, {
                  closeToast: o.closeToast,
                  toastProps: o,
                  data: o.data,
                  isPaused: e,
                })
              : P(t)
                ? t({
                    closeToast: o.closeToast,
                    toastProps: o,
                    data: o.data,
                    isPaused: e,
                  })
                : t;
          }
          function yt({ closeToast: t, theme: o, ariaLabel: e = 'close' }) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].createElement(
              'button',
              {
                className: `Toastify__close-button Toastify__close-button--${o}`,
                type: 'button',
                onClick: (r) => {
                  r.stopPropagation(), t(!0);
                },
                'aria-label': e,
              },
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement(
                'svg',
                {
                  'aria-hidden': 'true',
                  viewBox: '0 0 14 16',
                },
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'default'
                ].createElement('path', {
                  fillRule: 'evenodd',
                  d: 'M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z',
                }),
              ),
            );
          }
          function gt({
            delay: t,
            isRunning: o,
            closeToast: e,
            type: r = 'default',
            hide: s,
            className: l,
            controlledProgress: a,
            progress: d,
            rtl: c,
            isIn: T,
            theme: g,
          }) {
            let v = s || (a && d === 0),
              x = {
                animationDuration: `${t}ms`,
                animationPlayState: o ? 'running' : 'paused',
              };
            a && (x.transform = `scaleX(${d})`);
            let C = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$clsx$40$2$2e$1$2e$1$2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ])(
                'Toastify__progress-bar',
                a ? 'Toastify__progress-bar--controlled' : 'Toastify__progress-bar--animated',
                `Toastify__progress-bar-theme--${g}`,
                `Toastify__progress-bar--${r}`,
                {
                  ['Toastify__progress-bar--rtl']: c,
                },
              ),
              S = P(l)
                ? l({
                    rtl: c,
                    type: r,
                    defaultClassName: C,
                  })
                : (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$clsx$40$2$2e$1$2e$1$2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'default'
                  ])(C, l),
              E = {
                [a && d >= 1 ? 'onTransitionEnd' : 'onAnimationEnd']:
                  a && d < 1
                    ? null
                    : () => {
                        T && e();
                      },
              };
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].createElement(
              'div',
              {
                className: 'Toastify__progress-bar--wrp',
                'data-hidden': v,
              },
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement('div', {
                className: `Toastify__progress-bar--bg Toastify__progress-bar-theme--${g} Toastify__progress-bar--${r}`,
              }),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement('div', {
                role: 'progressbar',
                'aria-hidden': v ? 'true' : 'false',
                'aria-label': 'notification timer',
                className: S,
                style: x,
                ...E,
              }),
            );
          }
          var Xt = 1,
            at = () => `${Xt++}`;
          function _t(t, o, e) {
            let r = 1,
              s = 0,
              l = [],
              a = [],
              d = o,
              c = new Map(),
              T = new Set(),
              g = (i) => (T.add(i), () => T.delete(i)),
              v = () => {
                (a = Array.from(c.values())), T.forEach((i) => i());
              },
              x = ({ containerId: i, toastId: n, updateId: u }) => {
                let h = i ? i !== t : t !== 1,
                  m = c.has(n) && u == null;
                return h || m;
              },
              C = (i, n) => {
                c.forEach((u) => {
                  var h;
                  (n == null || n === u.props.toastId) && ((h = u.toggle) == null || h.call(u, i));
                });
              },
              S = (i) => {
                var n, u;
                (u = (n = i.props) == null ? void 0 : n.onClose) == null || u.call(n, i.removalReason),
                  (i.isActive = !1);
              },
              E = (i) => {
                if (i == null) c.forEach(S);
                else {
                  let n = c.get(i);
                  n && S(n);
                }
                v();
              },
              f = () => {
                (s -= l.length), (l = []);
              },
              p = (i) => {
                var m, _;
                let { toastId: n, updateId: u } = i.props,
                  h = u == null;
                i.staleId && c.delete(i.staleId),
                  (i.isActive = !0),
                  c.set(n, i),
                  v(),
                  e(J(i, h ? 'added' : 'updated')),
                  h && ((_ = (m = i.props).onOpen) == null || _.call(m));
              };
            return {
              id: t,
              props: d,
              observe: g,
              toggle: C,
              removeToast: E,
              toasts: c,
              clearQueue: f,
              buildToast: (i, n) => {
                if (x(n)) return;
                let { toastId: u, updateId: h, data: m, staleId: _, delay: k } = n,
                  M = h == null;
                M && s++;
                let A = {
                  ...d,
                  style: d.toastStyle,
                  key: r++,
                  ...Object.fromEntries(Object.entries(n).filter(([D, Y]) => Y != null)),
                  toastId: u,
                  updateId: h,
                  data: m,
                  isIn: !1,
                  className: B(n.className || d.toastClassName),
                  progressClassName: B(n.progressClassName || d.progressClassName),
                  autoClose: n.isLoading ? !1 : pt(n.autoClose, d.autoClose),
                  closeToast(D) {
                    (c.get(u).removalReason = D), E(u);
                  },
                  deleteToast() {
                    let D = c.get(u);
                    if (D != null) {
                      if ((e(J(D, 'removed')), c.delete(u), s--, s < 0 && (s = 0), l.length > 0)) {
                        p(l.shift());
                        return;
                      }
                      v();
                    }
                  },
                };
                (A.closeButton = d.closeButton),
                  n.closeButton === !1 || z(n.closeButton)
                    ? (A.closeButton = n.closeButton)
                    : n.closeButton === !0 && (A.closeButton = z(d.closeButton) ? d.closeButton : !0);
                let R = {
                  content: i,
                  props: A,
                  staleId: _,
                };
                d.limit && d.limit > 0 && s > d.limit && M
                  ? l.push(R)
                  : L(k)
                    ? setTimeout(() => {
                        p(R);
                      }, k)
                    : p(R);
              },
              setProps(i) {
                d = i;
              },
              setToggle: (i, n) => {
                let u = c.get(i);
                u && (u.toggle = n);
              },
              isToastActive: (i) => {
                var n;
                return (n = c.get(i)) == null ? void 0 : n.isActive;
              },
              getSnapshot: () => a,
            };
          }
          var I = new Map(),
            F = [],
            st = new Set(),
            Vt = (t) => st.forEach((o) => o(t)),
            bt = () => I.size > 0;
          function Qt() {
            F.forEach((t) => nt(t.content, t.options)), (F = []);
          }
          var vt = (t, { containerId: o }) => {
            var e;
            return (e = I.get(o || 1)) == null ? void 0 : e.toasts.get(t);
          };
          function X(t, o) {
            var r;
            if (o) return !!((r = I.get(o)) != null && r.isToastActive(t));
            let e = !1;
            return (
              I.forEach((s) => {
                s.isToastActive(t) && (e = !0);
              }),
              e
            );
          }
          function ht(t) {
            if (!bt()) {
              F = F.filter((o) => t != null && o.options.toastId !== t);
              return;
            }
            if (t == null || mt(t))
              I.forEach((o) => {
                o.removeToast(t);
              });
            else if (t && ('containerId' in t || 'id' in t)) {
              let o = I.get(t.containerId);
              o
                ? o.removeToast(t.id)
                : I.forEach((e) => {
                    e.removeToast(t.id);
                  });
            }
          }
          var Ct = (t = {}) => {
            I.forEach((o) => {
              o.props.limit && (!t.containerId || o.id === t.containerId) && o.clearQueue();
            });
          };
          function nt(t, o) {
            z(t) &&
              (bt() ||
                F.push({
                  content: t,
                  options: o,
                }),
              I.forEach((e) => {
                e.buildToast(t, o);
              }));
          }
          function xt(t) {
            var o;
            (o = I.get(t.containerId || 1)) == null || o.setToggle(t.id, t.fn);
          }
          function rt(t, o) {
            I.forEach((e) => {
              (o == null || !(o != null && o.containerId) || (o == null ? void 0 : o.containerId) === e.id) &&
                e.toggle(t, o == null ? void 0 : o.id);
            });
          }
          function Et(t) {
            let o = t.containerId || 1;
            return {
              subscribe(e) {
                let r = _t(o, t, Vt);
                I.set(o, r);
                let s = r.observe(e);
                return (
                  Qt(),
                  () => {
                    s(), I.delete(o);
                  }
                );
              },
              setProps(e) {
                var r;
                (r = I.get(o)) == null || r.setProps(e);
              },
              getSnapshot() {
                var e;
                return (e = I.get(o)) == null ? void 0 : e.getSnapshot();
              },
            };
          }
          function Pt(t) {
            return (
              st.add(t),
              () => {
                st.delete(t);
              }
            );
          }
          function Wt(t) {
            return t && (N(t.toastId) || L(t.toastId)) ? t.toastId : at();
          }
          function U(t, o) {
            return nt(t, o), o.toastId;
          }
          function V(t, o) {
            return {
              ...o,
              type: (o && o.type) || t,
              toastId: Wt(o),
            };
          }
          function Q(t) {
            return (o, e) => U(o, V(t, e));
          }
          function y(t, o) {
            return U(t, V('default', o));
          }
          y.loading = (t, o) =>
            U(
              t,
              V('default', {
                isLoading: !0,
                autoClose: !1,
                closeOnClick: !1,
                closeButton: !1,
                draggable: !1,
                ...o,
              }),
            );
          function Gt(t, { pending: o, error: e, success: r }, s) {
            let l;
            o &&
              (l = N(o)
                ? y.loading(o, s)
                : y.loading(o.render, {
                    ...s,
                    ...o,
                  }));
            let a = {
                isLoading: null,
                autoClose: null,
                closeOnClick: null,
                closeButton: null,
                draggable: null,
              },
              d = (T, g, v) => {
                if (g == null) {
                  y.dismiss(l);
                  return;
                }
                let x = {
                    type: T,
                    ...a,
                    ...s,
                    data: v,
                  },
                  C = N(g)
                    ? {
                        render: g,
                      }
                    : g;
                return (
                  l
                    ? y.update(l, {
                        ...x,
                        ...C,
                      })
                    : y(C.render, {
                        ...x,
                        ...C,
                      }),
                  v
                );
              },
              c = P(t) ? t() : t;
            return c.then((T) => d('success', r, T)).catch((T) => d('error', e, T)), c;
          }
          y.promise = Gt;
          y.success = Q('success');
          y.info = Q('info');
          y.error = Q('error');
          y.warning = Q('warning');
          y.warn = y.warning;
          y.dark = (t, o) =>
            U(
              t,
              V('default', {
                theme: 'dark',
                ...o,
              }),
            );
          function qt(t) {
            ht(t);
          }
          y.dismiss = qt;
          y.clearWaitingQueue = Ct;
          y.isActive = X;
          y.update = (t, o = {}) => {
            let e = vt(t, o);
            if (e) {
              let { props: r, content: s } = e,
                l = {
                  delay: 100,
                  ...r,
                  ...o,
                  toastId: o.toastId || t,
                  updateId: at(),
                };
              l.toastId !== t && (l.staleId = t);
              let a = l.render || s;
              delete l.render, U(a, l);
            }
          };
          y.done = (t) => {
            y.update(t, {
              progress: 1,
            });
          };
          y.onChange = Pt;
          y.play = (t) => rt(!0, t);
          y.pause = (t) => rt(!1, t);
          function It(t) {
            var a;
            let {
              subscribe: o,
              getSnapshot: e,
              setProps: r,
            } = (0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'useRef'
            ])(Et(t)).current;
            r(t);
            let s =
              (a = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useSyncExternalStore'
              ])(o, e, e)) == null
                ? void 0
                : a.slice();
            function l(d) {
              if (!s) return [];
              let c = new Map();
              return (
                t.newestOnTop && s.reverse(),
                s.forEach((T) => {
                  let { position: g } = T.props;
                  c.has(g) || c.set(g, []), c.get(g).push(T);
                }),
                Array.from(c, (T) => d(T[0], T[1]))
              );
            }
            return {
              getToastToRender: l,
              isToastActive: X,
              count: s == null ? void 0 : s.length,
            };
          }
          function At(t) {
            let [o, e] = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useState'
              ])(!1),
              [r, s] = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useState'
              ])(!1),
              l = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useRef'
              ])(null),
              a = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useRef'
              ])({
                start: 0,
                delta: 0,
                removalDistance: 0,
                canCloseOnClick: !0,
                canDrag: !1,
                didMove: !1,
              }).current,
              { autoClose: d, pauseOnHover: c, closeToast: T, onClick: g, closeOnClick: v } = t;
            xt({
              id: t.toastId,
              containerId: t.containerId,
              fn: e,
            }),
              (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useEffect'
              ])(() => {
                if (t.pauseOnFocusLoss)
                  return (
                    x(),
                    () => {
                      C();
                    }
                  );
              }, [t.pauseOnFocusLoss]);
            function x() {
              document.hasFocus() || p(), window.addEventListener('focus', f), window.addEventListener('blur', p);
            }
            function C() {
              window.removeEventListener('focus', f), window.removeEventListener('blur', p);
            }
            function S(m) {
              if (t.draggable === !0 || t.draggable === m.pointerType) {
                b();
                let _ = l.current;
                (a.canCloseOnClick = !0),
                  (a.canDrag = !0),
                  (_.style.transition = 'none'),
                  t.draggableDirection === 'x'
                    ? ((a.start = m.clientX), (a.removalDistance = _.offsetWidth * (t.draggablePercent / 100)))
                    : ((a.start = m.clientY),
                      (a.removalDistance =
                        (_.offsetHeight * (t.draggablePercent === 80 ? t.draggablePercent * 1.5 : t.draggablePercent)) /
                        100));
              }
            }
            function E(m) {
              let { top: _, bottom: k, left: M, right: A } = l.current.getBoundingClientRect();
              m.nativeEvent.type !== 'touchend' &&
              t.pauseOnHover &&
              m.clientX >= M &&
              m.clientX <= A &&
              m.clientY >= _ &&
              m.clientY <= k
                ? p()
                : f();
            }
            function f() {
              e(!0);
            }
            function p() {
              e(!1);
            }
            function b() {
              (a.didMove = !1), document.addEventListener('pointermove', n), document.addEventListener('pointerup', u);
            }
            function i() {
              document.removeEventListener('pointermove', n), document.removeEventListener('pointerup', u);
            }
            function n(m) {
              let _ = l.current;
              if (a.canDrag && _) {
                (a.didMove = !0),
                  o && p(),
                  t.draggableDirection === 'x' ? (a.delta = m.clientX - a.start) : (a.delta = m.clientY - a.start),
                  a.start !== m.clientX && (a.canCloseOnClick = !1);
                let k = t.draggableDirection === 'x' ? `${a.delta}px, var(--y)` : `0, calc(${a.delta}px + var(--y))`;
                (_.style.transform = `translate3d(${k},0)`),
                  (_.style.opacity = `${1 - Math.abs(a.delta / a.removalDistance)}`);
              }
            }
            function u() {
              i();
              let m = l.current;
              if (a.canDrag && a.didMove && m) {
                if (((a.canDrag = !1), Math.abs(a.delta) > a.removalDistance)) {
                  s(!0), t.closeToast(!0), t.collapseAll();
                  return;
                }
                (m.style.transition = 'transform 0.2s, opacity 0.2s'),
                  m.style.removeProperty('transform'),
                  m.style.removeProperty('opacity');
              }
            }
            let h = {
              onPointerDown: S,
              onPointerUp: E,
            };
            return (
              d && c && ((h.onMouseEnter = p), t.stacked || (h.onMouseLeave = f)),
              v &&
                (h.onClick = (m) => {
                  g && g(m), a.canCloseOnClick && T(!0);
                }),
              {
                playToast: f,
                pauseToast: p,
                isRunning: o,
                preventExitTransition: r,
                toastRef: l,
                eventHandlers: h,
              }
            );
          }
          var Ot =
            typeof window != 'undefined'
              ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'useLayoutEffect'
                ]
              : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'useEffect'
                ];
          var G = ({ theme: t, type: o, isLoading: e, ...r }) =>
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].createElement('svg', {
              viewBox: '0 0 24 24',
              width: '100%',
              height: '100%',
              fill: t === 'colored' ? 'currentColor' : `var(--toastify-icon-color-${o})`,
              ...r,
            });
          function ao(t) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].createElement(
              G,
              {
                ...t,
              },
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement('path', {
                d: 'M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z',
              }),
            );
          }
          function so(t) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].createElement(
              G,
              {
                ...t,
              },
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement('path', {
                d: 'M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z',
              }),
            );
          }
          function no(t) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].createElement(
              G,
              {
                ...t,
              },
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement('path', {
                d: 'M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z',
              }),
            );
          }
          function ro(t) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].createElement(
              G,
              {
                ...t,
              },
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement('path', {
                d: 'M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z',
              }),
            );
          }
          function io() {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].createElement('div', {
              className: 'Toastify__spinner',
            });
          }
          var W = {
              info: so,
              warning: ao,
              success: no,
              error: ro,
              spinner: io,
            },
            lo = (t) => t in W;
          function Nt({ theme: t, type: o, isLoading: e, icon: r }) {
            let s = null,
              l = {
                theme: t,
                type: o,
              };
            return (
              r === !1 ||
                (P(r)
                  ? (s = r({
                      ...l,
                      isLoading: e,
                    }))
                  : (0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'isValidElement'
                      ])(r)
                    ? (s = (0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'cloneElement'
                      ])(r, l))
                    : e
                      ? (s = W.spinner())
                      : lo(o) && (s = W[o](l))),
              s
            );
          }
          var wt = (t) => {
            let { isRunning: o, preventExitTransition: e, toastRef: r, eventHandlers: s, playToast: l } = At(t),
              {
                closeButton: a,
                children: d,
                autoClose: c,
                onClick: T,
                type: g,
                hideProgressBar: v,
                closeToast: x,
                transition: C,
                position: S,
                className: E,
                style: f,
                progressClassName: p,
                updateId: b,
                role: i,
                progress: n,
                rtl: u,
                toastId: h,
                deleteToast: m,
                isIn: _,
                isLoading: k,
                closeOnClick: M,
                theme: A,
                ariaLabel: R,
              } = t,
              D = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$clsx$40$2$2e$1$2e$1$2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ])(
                'Toastify__toast',
                `Toastify__toast-theme--${A}`,
                `Toastify__toast--${g}`,
                {
                  ['Toastify__toast--rtl']: u,
                },
                {
                  ['Toastify__toast--close-on-click']: M,
                },
              ),
              Y = P(E)
                ? E({
                    rtl: u,
                    position: S,
                    type: g,
                    defaultClassName: D,
                  })
                : (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$clsx$40$2$2e$1$2e$1$2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'default'
                  ])(D, E),
              ft = Nt(t),
              dt = !!n || !c,
              j = {
                closeToast: x,
                type: g,
                theme: A,
              },
              H = null;
            return (
              a === !1 ||
                (P(a)
                  ? (H = a(j))
                  : (0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'isValidElement'
                      ])(a)
                    ? (H = (0,
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'cloneElement'
                      ])(a, j))
                    : (H = yt(j))),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement(
                C,
                {
                  isIn: _,
                  done: m,
                  position: S,
                  preventExitTransition: e,
                  nodeRef: r,
                  playToast: l,
                },
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                  'default'
                ].createElement(
                  'div',
                  {
                    id: h,
                    tabIndex: 0,
                    onClick: T,
                    'data-in': _,
                    className: Y,
                    ...s,
                    style: f,
                    ref: r,
                    ...(_ && {
                      role: i,
                      'aria-label': R,
                    }),
                  },
                  ft != null &&
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'default'
                    ].createElement(
                      'div',
                      {
                        className: (0,
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$clsx$40$2$2e$1$2e$1$2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                          'default'
                        ])('Toastify__toast-icon', {
                          ['Toastify--animate-icon Toastify__zoom-enter']: !k,
                        }),
                      },
                      ft,
                    ),
                  tt(d, t, !o),
                  H,
                  !t.customProgressBar &&
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                      'default'
                    ].createElement(gt, {
                      ...(b && !dt
                        ? {
                            key: `p-${b}`,
                          }
                        : {}),
                      rtl: u,
                      theme: A,
                      delay: c,
                      isRunning: o,
                      isIn: _,
                      closeToast: x,
                      hide: v,
                      type: g,
                      className: p,
                      controlledProgress: dt,
                      progress: n || 0,
                    }),
                ),
              )
            );
          };
          var K = (t, o = !1) => ({
              enter: `Toastify--animate Toastify__${t}-enter`,
              exit: `Toastify--animate Toastify__${t}-exit`,
              appendPosition: o,
            }),
            lt = $(K('bounce', !0)),
            mo = $(K('slide', !0)),
            po = $(K('zoom')),
            uo = $(K('flip'));
          var _o = {
            position: 'top-right',
            transition: lt,
            autoClose: 5e3,
            closeButton: !0,
            pauseOnHover: !0,
            pauseOnFocusLoss: !0,
            draggable: 'touch',
            draggablePercent: 80,
            draggableDirection: 'x',
            role: 'alert',
            theme: 'light',
            'aria-label': 'Notifications Alt+T',
            hotKeys: (t) => t.altKey && t.code === 'KeyT',
          };
          function Lt(t) {
            let o = {
                ..._o,
                ...t,
              },
              e = t.stacked,
              [r, s] = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useState'
              ])(!0),
              l = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useRef'
              ])(null),
              { getToastToRender: a, isToastActive: d, count: c } = It(o),
              { className: T, style: g, rtl: v, containerId: x, hotKeys: C } = o;
            function S(f) {
              let p = (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$clsx$40$2$2e$1$2e$1$2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ])('Toastify__toast-container', `Toastify__toast-container--${f}`, {
                ['Toastify__toast-container--rtl']: v,
              });
              return P(T)
                ? T({
                    position: f,
                    rtl: v,
                    defaultClassName: p,
                  })
                : (0,
                  __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$clsx$40$2$2e$1$2e$1$2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'default'
                  ])(p, B(T));
            }
            function E() {
              e && (s(!0), y.play());
            }
            return (
              Ot(() => {
                var f;
                if (e) {
                  let p = l.current.querySelectorAll('[data-in="true"]'),
                    b = 12,
                    i = (f = o.position) == null ? void 0 : f.includes('top'),
                    n = 0,
                    u = 0;
                  Array.from(p)
                    .reverse()
                    .forEach((h, m) => {
                      let _ = h;
                      _.classList.add('Toastify__toast--stacked'),
                        m > 0 && (_.dataset.collapsed = `${r}`),
                        _.dataset.pos || (_.dataset.pos = i ? 'top' : 'bot');
                      let k = n * (r ? 0.2 : 1) + (r ? 0 : b * m);
                      _.style.setProperty('--y', `${i ? k : k * -1}px`),
                        _.style.setProperty('--g', `${b}`),
                        _.style.setProperty('--s', `${1 - (r ? u : 0)}`),
                        (n += _.offsetHeight),
                        (u += 0.025);
                    });
                }
              }, [r, c, e]),
              (0,
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'useEffect'
              ])(() => {
                function f(p) {
                  var i;
                  let b = l.current;
                  C(p) && ((i = b.querySelector('[tabIndex="0"]')) == null || i.focus(), s(!1), y.pause()),
                    p.key === 'Escape' &&
                      (document.activeElement === b || (b != null && b.contains(document.activeElement))) &&
                      (s(!0), y.play());
                }
                return (
                  document.addEventListener('keydown', f),
                  () => {
                    document.removeEventListener('keydown', f);
                  }
                );
              }, [C]),
              __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                'default'
              ].createElement(
                'section',
                {
                  ref: l,
                  className: 'Toastify',
                  id: x,
                  onMouseEnter: () => {
                    e && (s(!1), y.pause());
                  },
                  onMouseLeave: E,
                  'aria-live': 'polite',
                  'aria-atomic': 'false',
                  'aria-relevant': 'additions text',
                  'aria-label': o['aria-label'],
                },
                a((f, p) => {
                  let b = p.length
                    ? {
                        ...g,
                      }
                    : {
                        ...g,
                        pointerEvents: 'none',
                      };
                  return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                    'default'
                  ].createElement(
                    'div',
                    {
                      tabIndex: -1,
                      className: S(f),
                      'data-stacked': e,
                      style: b,
                      key: `c-${f}`,
                    },
                    p.map(({ content: i, props: n }) =>
                      __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
                        'default'
                      ].createElement(
                        wt,
                        {
                          ...n,
                          stacked: e,
                          collapseAll: E,
                          isIn: d(n.toastId, n.containerId),
                          key: `t-${n.key}`,
                        },
                        i,
                      ),
                    ),
                  );
                }),
              )
            );
          }
          //# sourceMappingURL=index.mjs.map
        }
      },
    '[project]/node_modules/.pnpm/js-cookie@3.0.5/node_modules/js-cookie/dist/js.cookie.mjs [app-client] (ecmascript)':
      (__turbopack_context__) => {
        'use strict';

        var { g: global, __dirname } = __turbopack_context__;
        {
          /*! js-cookie v3.0.5 | MIT */ /* eslint-disable no-var */ __turbopack_context__.s({
            default: () => api,
          });
          function assign(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                target[key] = source[key];
              }
            }
            return target;
          }
          /* eslint-enable no-var */ /* eslint-disable no-var */ var defaultConverter = {
            read: function (value) {
              if (value[0] === '"') {
                value = value.slice(1, -1);
              }
              return value.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent);
            },
            write: function (value) {
              return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);
            },
          };
          /* eslint-enable no-var */ /* eslint-disable no-var */ function init(converter, defaultAttributes) {
            function set(name, value, attributes) {
              if (typeof document === 'undefined') {
                return;
              }
              attributes = assign({}, defaultAttributes, attributes);
              if (typeof attributes.expires === 'number') {
                attributes.expires = new Date(Date.now() + attributes.expires * 864e5);
              }
              if (attributes.expires) {
                attributes.expires = attributes.expires.toUTCString();
              }
              name = encodeURIComponent(name)
                .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)
                .replace(/[()]/g, escape);
              var stringifiedAttributes = '';
              for (var attributeName in attributes) {
                if (!attributes[attributeName]) {
                  continue;
                }
                stringifiedAttributes += '; ' + attributeName;
                if (attributes[attributeName] === true) {
                  continue;
                }
                // Considers RFC 6265 section 5.2:
                // ...
                // 3.  If the remaining unparsed-attributes contains a %x3B (";")
                //     character:
                // Consume the characters of the unparsed-attributes up to,
                // not including, the first %x3B (";") character.
                // ...
                stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
              }
              return (document.cookie = name + '=' + converter.write(value, name) + stringifiedAttributes);
            }
            function get(name) {
              if (typeof document === 'undefined' || (arguments.length && !name)) {
                return;
              }
              // To prevent the for loop in the first place assign an empty array
              // in case there are no cookies at all.
              var cookies = document.cookie ? document.cookie.split('; ') : [];
              var jar = {};
              for (var i = 0; i < cookies.length; i++) {
                var parts = cookies[i].split('=');
                var value = parts.slice(1).join('=');
                try {
                  var found = decodeURIComponent(parts[0]);
                  jar[found] = converter.read(value, found);
                  if (name === found) {
                    break;
                  }
                } catch (e) {}
              }
              return name ? jar[name] : jar;
            }
            return Object.create(
              {
                set,
                get,
                remove: function (name, attributes) {
                  set(
                    name,
                    '',
                    assign({}, attributes, {
                      expires: -1,
                    }),
                  );
                },
                withAttributes: function (attributes) {
                  return init(this.converter, assign({}, this.attributes, attributes));
                },
                withConverter: function (converter) {
                  return init(assign({}, this.converter, converter), this.attributes);
                },
              },
              {
                attributes: {
                  value: Object.freeze(defaultAttributes),
                },
                converter: {
                  value: Object.freeze(converter),
                },
              },
            );
          }
          var api = init(defaultConverter, {
            path: '/',
          });
        }
      },
    '[project]/node_modules/.pnpm/styled-jsx@5.1.6_@babel+core@7.26.10_react@18.3.1/node_modules/styled-jsx/dist/index/index.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ =
            __turbopack_context__.i(
              '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)',
            );
          __turbopack_context__.r(
            '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/client-only/index.js [app-client] (ecmascript)',
          );
          var React = __turbopack_context__.r(
            '[project]/node_modules/.pnpm/next@15.2.2_@babel+core@7.2_d8a8fc4ae419e50a74621c1684c62463/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)',
          );
          function _interopDefaultLegacy(e) {
            return e && typeof e === 'object' && 'default' in e
              ? e
              : {
                  default: e,
                };
          }
          var React__default = /*#__PURE__*/ _interopDefaultLegacy(React);
          /*
Based on Glamor's sheet
https://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js
*/ function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
          }
          var isProd =
            typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ] !== 'undefined' &&
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$2_$40$babel$2b$core$40$7$2e$2_d8a8fc4ae419e50a74621c1684c62463$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__[
              'default'
            ].env &&
            ('TURBOPACK compile-time value', 'development') === 'production';
          var isString = function (o) {
            return Object.prototype.toString.call(o) === '[object String]';
          };
          var StyleSheet = /*#__PURE__*/ (function () {
            function StyleSheet(param) {
              var ref = param === void 0 ? {} : param,
                _name = ref.name,
                name = _name === void 0 ? 'stylesheet' : _name,
                _optimizeForSpeed = ref.optimizeForSpeed,
                optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;
              invariant$1(isString(name), '`name` must be a string');
              this._name = name;
              this._deletedRulePlaceholder = '#' + name + '-deleted-rule____{}';
              invariant$1(typeof optimizeForSpeed === 'boolean', '`optimizeForSpeed` must be a boolean');
              this._optimizeForSpeed = optimizeForSpeed;
              this._serverSheet = undefined;
              this._tags = [];
              this._injected = false;
              this._rulesCount = 0;
              var node = typeof window !== 'undefined' && document.querySelector('meta[property="csp-nonce"]');
              this._nonce = node ? node.getAttribute('content') : null;
            }
            var _proto = StyleSheet.prototype;
            _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {
              invariant$1(typeof bool === 'boolean', '`setOptimizeForSpeed` accepts a boolean');
              invariant$1(this._rulesCount === 0, 'optimizeForSpeed cannot be when rules have already been inserted');
              this.flush();
              this._optimizeForSpeed = bool;
              this.inject();
            };
            _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {
              return this._optimizeForSpeed;
            };
            _proto.inject = function inject() {
              var _this = this;
              invariant$1(!this._injected, 'sheet already injected');
              this._injected = true;
              if (typeof window !== 'undefined' && this._optimizeForSpeed) {
                this._tags[0] = this.makeStyleTag(this._name);
                this._optimizeForSpeed = 'insertRule' in this.getSheet();
                if (!this._optimizeForSpeed) {
                  if (('TURBOPACK compile-time truthy', 1)) {
                    console.warn('StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.');
                  }
                  this.flush();
                  this._injected = true;
                }
                return;
              }
              this._serverSheet = {
                cssRules: [],
                insertRule: function (rule, index) {
                  if (typeof index === 'number') {
                    _this._serverSheet.cssRules[index] = {
                      cssText: rule,
                    };
                  } else {
                    _this._serverSheet.cssRules.push({
                      cssText: rule,
                    });
                  }
                  return index;
                },
                deleteRule: function (index) {
                  _this._serverSheet.cssRules[index] = null;
                },
              };
            };
            _proto.getSheetForTag = function getSheetForTag(tag) {
              if (tag.sheet) {
                return tag.sheet;
              }
              // this weirdness brought to you by firefox
              for (var i = 0; i < document.styleSheets.length; i++) {
                if (document.styleSheets[i].ownerNode === tag) {
                  return document.styleSheets[i];
                }
              }
            };
            _proto.getSheet = function getSheet() {
              return this.getSheetForTag(this._tags[this._tags.length - 1]);
            };
            _proto.insertRule = function insertRule(rule, index) {
              invariant$1(isString(rule), '`insertRule` accepts only strings');
              if (typeof window === 'undefined') {
                if (typeof index !== 'number') {
                  index = this._serverSheet.cssRules.length;
                }
                this._serverSheet.insertRule(rule, index);
                return this._rulesCount++;
              }
              if (this._optimizeForSpeed) {
                var sheet = this.getSheet();
                if (typeof index !== 'number') {
                  index = sheet.cssRules.length;
                }
                // this weirdness for perf, and chrome's weird bug
                // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule
                try {
                  sheet.insertRule(rule, index);
                } catch (error) {
                  if (('TURBOPACK compile-time truthy', 1)) {
                    console.warn(
                      'StyleSheet: illegal rule: \n\n' +
                        rule +
                        '\n\nSee https://stackoverflow.com/q/20007992 for more info',
                    );
                  }
                  return -1;
                }
              } else {
                var insertionPoint = this._tags[index];
                this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));
              }
              return this._rulesCount++;
            };
            _proto.replaceRule = function replaceRule(index, rule) {
              if (this._optimizeForSpeed || typeof window === 'undefined') {
                var sheet = typeof window !== 'undefined' ? this.getSheet() : this._serverSheet;
                if (!rule.trim()) {
                  rule = this._deletedRulePlaceholder;
                }
                if (!sheet.cssRules[index]) {
                  // @TBD Should we throw an error?
                  return index;
                }
                sheet.deleteRule(index);
                try {
                  sheet.insertRule(rule, index);
                } catch (error) {
                  if (('TURBOPACK compile-time truthy', 1)) {
                    console.warn(
                      'StyleSheet: illegal rule: \n\n' +
                        rule +
                        '\n\nSee https://stackoverflow.com/q/20007992 for more info',
                    );
                  }
                  // In order to preserve the indices we insert a deleteRulePlaceholder
                  sheet.insertRule(this._deletedRulePlaceholder, index);
                }
              } else {
                var tag = this._tags[index];
                invariant$1(tag, 'old rule at index `' + index + '` not found');
                tag.textContent = rule;
              }
              return index;
            };
            _proto.deleteRule = function deleteRule(index) {
              if (typeof window === 'undefined') {
                this._serverSheet.deleteRule(index);
                return;
              }
              if (this._optimizeForSpeed) {
                this.replaceRule(index, '');
              } else {
                var tag = this._tags[index];
                invariant$1(tag, 'rule at index `' + index + '` not found');
                tag.parentNode.removeChild(tag);
                this._tags[index] = null;
              }
            };
            _proto.flush = function flush() {
              this._injected = false;
              this._rulesCount = 0;
              if (typeof window !== 'undefined') {
                this._tags.forEach(function (tag) {
                  return tag && tag.parentNode.removeChild(tag);
                });
                this._tags = [];
              } else {
                // simpler on server
                this._serverSheet.cssRules = [];
              }
            };
            _proto.cssRules = function cssRules() {
              var _this = this;
              if (typeof window === 'undefined') {
                return this._serverSheet.cssRules;
              }
              return this._tags.reduce(function (rules, tag) {
                if (tag) {
                  rules = rules.concat(
                    Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function (rule) {
                      return rule.cssText === _this._deletedRulePlaceholder ? null : rule;
                    }),
                  );
                } else {
                  rules.push(null);
                }
                return rules;
              }, []);
            };
            _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {
              if (cssString) {
                invariant$1(isString(cssString), 'makeStyleTag accepts only strings as second parameter');
              }
              var tag = document.createElement('style');
              if (this._nonce) tag.setAttribute('nonce', this._nonce);
              tag.type = 'text/css';
              tag.setAttribute('data-' + name, '');
              if (cssString) {
                tag.appendChild(document.createTextNode(cssString));
              }
              var head = document.head || document.getElementsByTagName('head')[0];
              if (relativeToTag) {
                head.insertBefore(tag, relativeToTag);
              } else {
                head.appendChild(tag);
              }
              return tag;
            };
            _createClass(StyleSheet, [
              {
                key: 'length',
                get: function get() {
                  return this._rulesCount;
                },
              },
            ]);
            return StyleSheet;
          })();
          function invariant$1(condition, message) {
            if (!condition) {
              throw new Error('StyleSheet: ' + message + '.');
            }
          }
          function hash(str) {
            var _$hash = 5381,
              i = str.length;
            while (i) {
              _$hash = (_$hash * 33) ^ str.charCodeAt(--i);
            }
            /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed
             * integers. Since we want the results to be always positive, convert the
             * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;
          }
          var stringHash = hash;
          var sanitize = function (rule) {
            return rule.replace(/\/style/gi, '\\/style');
          };
          var cache = {};
          /**
           * computeId
           *
           * Compute and memoize a jsx id from a basedId and optionally props.
           */ function computeId(baseId, props) {
            if (!props) {
              return 'jsx-' + baseId;
            }
            var propsToString = String(props);
            var key = baseId + propsToString;
            if (!cache[key]) {
              cache[key] = 'jsx-' + stringHash(baseId + '-' + propsToString);
            }
            return cache[key];
          }
          /**
           * computeSelector
           *
           * Compute and memoize dynamic selectors.
           */ function computeSelector(id, css) {
            var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;
            // Sanitize SSR-ed CSS.
            // Client side code doesn't need to be sanitized since we use
            // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).
            if (typeof window === 'undefined') {
              css = sanitize(css);
            }
            var idcss = id + css;
            if (!cache[idcss]) {
              cache[idcss] = css.replace(selectoPlaceholderRegexp, id);
            }
            return cache[idcss];
          }
          function mapRulesToStyle(cssRules, options) {
            if (options === void 0) options = {};
            return cssRules.map(function (args) {
              var id = args[0];
              var css = args[1];
              return /*#__PURE__*/ React__default['default'].createElement('style', {
                id: '__' + id,
                // Avoid warnings upon render with a key
                key: '__' + id,
                nonce: options.nonce ? options.nonce : undefined,
                dangerouslySetInnerHTML: {
                  __html: css,
                },
              });
            });
          }
          var StyleSheetRegistry = /*#__PURE__*/ (function () {
            function StyleSheetRegistry(param) {
              var ref = param === void 0 ? {} : param,
                _styleSheet = ref.styleSheet,
                styleSheet = _styleSheet === void 0 ? null : _styleSheet,
                _optimizeForSpeed = ref.optimizeForSpeed,
                optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;
              this._sheet =
                styleSheet ||
                new StyleSheet({
                  name: 'styled-jsx',
                  optimizeForSpeed: optimizeForSpeed,
                });
              this._sheet.inject();
              if (styleSheet && typeof optimizeForSpeed === 'boolean') {
                this._sheet.setOptimizeForSpeed(optimizeForSpeed);
                this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();
              }
              this._fromServer = undefined;
              this._indices = {};
              this._instancesCounts = {};
            }
            var _proto = StyleSheetRegistry.prototype;
            _proto.add = function add(props) {
              var _this = this;
              if (undefined === this._optimizeForSpeed) {
                this._optimizeForSpeed = Array.isArray(props.children);
                this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);
                this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();
              }
              if (typeof window !== 'undefined' && !this._fromServer) {
                this._fromServer = this.selectFromServer();
                this._instancesCounts = Object.keys(this._fromServer).reduce(function (acc, tagName) {
                  acc[tagName] = 0;
                  return acc;
                }, {});
              }
              var ref = this.getIdAndRules(props),
                styleId = ref.styleId,
                rules = ref.rules;
              // Deduping: just increase the instances count.
              if (styleId in this._instancesCounts) {
                this._instancesCounts[styleId] += 1;
                return;
              }
              var indices = rules
                .map(function (rule) {
                  return _this._sheet.insertRule(rule);
                }) // Filter out invalid rules
                .filter(function (index) {
                  return index !== -1;
                });
              this._indices[styleId] = indices;
              this._instancesCounts[styleId] = 1;
            };
            _proto.remove = function remove(props) {
              var _this = this;
              var styleId = this.getIdAndRules(props).styleId;
              invariant(styleId in this._instancesCounts, 'styleId: `' + styleId + '` not found');
              this._instancesCounts[styleId] -= 1;
              if (this._instancesCounts[styleId] < 1) {
                var tagFromServer = this._fromServer && this._fromServer[styleId];
                if (tagFromServer) {
                  tagFromServer.parentNode.removeChild(tagFromServer);
                  delete this._fromServer[styleId];
                } else {
                  this._indices[styleId].forEach(function (index) {
                    return _this._sheet.deleteRule(index);
                  });
                  delete this._indices[styleId];
                }
                delete this._instancesCounts[styleId];
              }
            };
            _proto.update = function update(props, nextProps) {
              this.add(nextProps);
              this.remove(props);
            };
            _proto.flush = function flush() {
              this._sheet.flush();
              this._sheet.inject();
              this._fromServer = undefined;
              this._indices = {};
              this._instancesCounts = {};
            };
            _proto.cssRules = function cssRules() {
              var _this = this;
              var fromServer = this._fromServer
                ? Object.keys(this._fromServer).map(function (styleId) {
                    return [styleId, _this._fromServer[styleId]];
                  })
                : [];
              var cssRules = this._sheet.cssRules();
              return fromServer.concat(
                Object.keys(this._indices)
                  .map(function (styleId) {
                    return [
                      styleId,
                      _this._indices[styleId]
                        .map(function (index) {
                          return cssRules[index].cssText;
                        })
                        .join(_this._optimizeForSpeed ? '' : '\n'),
                    ];
                  }) // filter out empty rules
                  .filter(function (rule) {
                    return Boolean(rule[1]);
                  }),
              );
            };
            _proto.styles = function styles(options) {
              return mapRulesToStyle(this.cssRules(), options);
            };
            _proto.getIdAndRules = function getIdAndRules(props) {
              var css = props.children,
                dynamic = props.dynamic,
                id = props.id;
              if (dynamic) {
                var styleId = computeId(id, dynamic);
                return {
                  styleId: styleId,
                  rules: Array.isArray(css)
                    ? css.map(function (rule) {
                        return computeSelector(styleId, rule);
                      })
                    : [computeSelector(styleId, css)],
                };
              }
              return {
                styleId: computeId(id),
                rules: Array.isArray(css) ? css : [css],
              };
            };
            /**
             * selectFromServer
             *
             * Collects style tags from the document with id __jsx-XXX
             */ _proto.selectFromServer = function selectFromServer() {
              var elements = Array.prototype.slice.call(document.querySelectorAll('[id^="__jsx-"]'));
              return elements.reduce(function (acc, element) {
                var id = element.id.slice(2);
                acc[id] = element;
                return acc;
              }, {});
            };
            return StyleSheetRegistry;
          })();
          function invariant(condition, message) {
            if (!condition) {
              throw new Error('StyleSheetRegistry: ' + message + '.');
            }
          }
          var StyleSheetContext = /*#__PURE__*/ React.createContext(null);
          StyleSheetContext.displayName = 'StyleSheetContext';
          function createStyleRegistry() {
            return new StyleSheetRegistry();
          }
          function StyleRegistry(param) {
            var configuredRegistry = param.registry,
              children = param.children;
            var rootRegistry = React.useContext(StyleSheetContext);
            var ref = React.useState(
                {
                  'StyleRegistry.useState[ref]': function () {
                    return rootRegistry || configuredRegistry || createStyleRegistry();
                  },
                }['StyleRegistry.useState[ref]'],
              ),
              registry = ref[0];
            return /*#__PURE__*/ React__default['default'].createElement(
              StyleSheetContext.Provider,
              {
                value: registry,
              },
              children,
            );
          }
          function useStyleRegistry() {
            return React.useContext(StyleSheetContext);
          }
          // Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.
          // https://github.com/reactwg/react-18/discussions/110
          var useInsertionEffect =
            React__default['default'].useInsertionEffect || React__default['default'].useLayoutEffect;
          var defaultRegistry = typeof window !== 'undefined' ? createStyleRegistry() : undefined;
          function JSXStyle(props) {
            var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();
            // If `registry` does not exist, we do nothing here.
            if (!registry) {
              return null;
            }
            if (typeof window === 'undefined') {
              registry.add(props);
              return null;
            }
            useInsertionEffect(
              {
                'JSXStyle.useInsertionEffect': function () {
                  registry.add(props);
                  return {
                    'JSXStyle.useInsertionEffect': function () {
                      registry.remove(props);
                    },
                  }['JSXStyle.useInsertionEffect'];
                  // props.children can be string[], will be striped since id is identical
                },
              }['JSXStyle.useInsertionEffect'],
              [props.id, String(props.dynamic)],
            );
            return null;
          }
          JSXStyle.dynamic = function (info) {
            return info
              .map(function (tagInfo) {
                var baseId = tagInfo[0];
                var props = tagInfo[1];
                return computeId(baseId, props);
              })
              .join(' ');
          };
          exports.StyleRegistry = StyleRegistry;
          exports.createStyleRegistry = createStyleRegistry;
          exports.style = JSXStyle;
          exports.useStyleRegistry = useStyleRegistry;
        }
      },
    '[project]/node_modules/.pnpm/styled-jsx@5.1.6_@babel+core@7.26.10_react@18.3.1/node_modules/styled-jsx/style.js [app-client] (ecmascript)':
      function (__turbopack_context__) {
        var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
        {
          module.exports = __turbopack_context__.r(
            '[project]/node_modules/.pnpm/styled-jsx@5.1.6_@babel+core@7.26.10_react@18.3.1/node_modules/styled-jsx/dist/index/index.js [app-client] (ecmascript)',
          ).style;
        }
      },
  },
]);

//# sourceMappingURL=node_modules__pnpm_6a9f8e4c._.js.map
