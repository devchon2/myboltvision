{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/classNames.ts"],"sourcesContent":["/**\r\n * Copyright (c) 2018 Jed Watson.\r\n * Licensed under the MIT License (MIT), see:\r\n *\r\n * @link http://jedwatson.github.io/classnames\r\n */\r\n\r\ntype ClassNamesArg = undefined | string | Record<string, boolean> | ClassNamesArg[];\r\n\r\n/**\r\n * A simple JavaScript utility for conditionally joining classNames together.\r\n *\r\n * @param args A series of classes or object with key that are class and values\r\n * that are interpreted as boolean to decide whether or not the class\r\n * should be included in the final class.\r\n */\r\nexport function classNames(...args: ClassNamesArg[]): string {\r\n  let classes = '';\r\n\r\n  for (const arg of args) {\r\n    classes = appendClass(classes, parseValue(arg));\r\n  }\r\n\r\n  return classes;\r\n}\r\n\r\nfunction parseValue(arg: ClassNamesArg) {\r\n  if (typeof arg === 'string' || typeof arg === 'number') {\r\n    return arg;\r\n  }\r\n\r\n  if (typeof arg !== 'object') {\r\n    return '';\r\n  }\r\n\r\n  if (Array.isArray(arg)) {\r\n    return classNames(...arg);\r\n  }\r\n\r\n  let classes = '';\r\n\r\n  for (const key in arg) {\r\n    if (arg[key]) {\r\n      classes = appendClass(classes, key);\r\n    }\r\n  }\r\n\r\n  return classes;\r\n}\r\n\r\nfunction appendClass(value: string, newClass: string | undefined) {\r\n  if (!newClass) {\r\n    return value;\r\n  }\r\n\r\n  if (value) {\r\n    return value + ' ' + newClass;\r\n  }\r\n\r\n  return value + newClass;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AAWM,SAAS,WAAW,GAAG,IAAqB;IACjD,IAAI,UAAU;IAEd,KAAK,MAAM,OAAO,KAAM;QACtB,UAAU,YAAY,SAAS,WAAW;IAC5C;IAEA,OAAO;AACT;AAEA,SAAS,WAAW,GAAkB;IACpC,IAAI,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU;QACtD,OAAO;IACT;IAEA,IAAI,OAAO,QAAQ,UAAU;QAC3B,OAAO;IACT;IAEA,IAAI,MAAM,OAAO,CAAC,MAAM;QACtB,OAAO,cAAc;IACvB;IAEA,IAAI,UAAU;IAEd,IAAK,MAAM,OAAO,IAAK;QACrB,IAAI,GAAG,CAAC,IAAI,EAAE;YACZ,UAAU,YAAY,SAAS;QACjC;IACF;IAEA,OAAO;AACT;AAEA,SAAS,YAAY,KAAa,EAAE,QAA4B;IAC9D,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,IAAI,OAAO;QACT,OAAO,QAAQ,MAAM;IACvB;IAEA,OAAO,QAAQ;AACjB","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/components/chat/BaseChat.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"BaseChat\": \"BaseChat-module-scss-module__X9bFMa__BaseChat\",\n  \"Chat\": \"BaseChat-module-scss-module__X9bFMa__Chat\",\n  \"PromptEffectContainer\": \"BaseChat-module-scss-module__X9bFMa__PromptEffectContainer\",\n  \"PromptEffectLine\": \"BaseChat-module-scss-module__X9bFMa__PromptEffectLine\",\n  \"PromptShine\": \"BaseChat-module-scss-module__X9bFMa__PromptShine\",\n  \"promptLineAnimation\": \"BaseChat-module-scss-module__X9bFMa__promptLineAnimation\",\n  \"promptShineAnimation\": \"BaseChat-module-scss-module__X9bFMa__promptShineAnimation\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/path.ts"],"sourcesContent":["// Browser-compatible path utilities\r\nimport type { ParsedPath } from 'path';\r\nimport pathBrowserify from 'path-browserify';\r\n\r\n/**\r\n * A browser-compatible path utility that mimics Node's path module\r\n * Using path-browserify for consistent behavior in browser environments\r\n */\r\nexport const path = {\r\n  join: (...paths: string[]): string => pathBrowserify.join(...paths),\r\n  dirname: (path: string): string => pathBrowserify.dirname(path),\r\n  basename: (path: string, ext?: string): string => pathBrowserify.basename(path, ext),\r\n  extname: (path: string): string => pathBrowserify.extname(path),\r\n  relative: (from: string, to: string): string => pathBrowserify.relative(from, to),\r\n  isAbsolute: (path: string): boolean => pathBrowserify.isAbsolute(path),\r\n  normalize: (path: string): string => pathBrowserify.normalize(path),\r\n  parse: (path: string): ParsedPath => pathBrowserify.parse(path),\r\n  format: (pathObject: ParsedPath): string => pathBrowserify.format(pathObject),\r\n} as const;\r\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;AAEpC;;AAMO,MAAM,OAAO;IAClB,MAAM,CAAC,GAAG,QAA4B,0MAAA,CAAA,UAAc,CAAC,IAAI,IAAI;IAC7D,SAAS,CAAC,OAAyB,0MAAA,CAAA,UAAc,CAAC,OAAO,CAAC;IAC1D,UAAU,CAAC,MAAc,MAAyB,0MAAA,CAAA,UAAc,CAAC,QAAQ,CAAC,MAAM;IAChF,SAAS,CAAC,OAAyB,0MAAA,CAAA,UAAc,CAAC,OAAO,CAAC;IAC1D,UAAU,CAAC,MAAc,KAAuB,0MAAA,CAAA,UAAc,CAAC,QAAQ,CAAC,MAAM;IAC9E,YAAY,CAAC,OAA0B,0MAAA,CAAA,UAAc,CAAC,UAAU,CAAC;IACjE,WAAW,CAAC,OAAyB,0MAAA,CAAA,UAAc,CAAC,SAAS,CAAC;IAC9D,OAAO,CAAC,OAA6B,0MAAA,CAAA,UAAc,CAAC,KAAK,CAAC;IAC1D,QAAQ,CAAC,aAAmC,0MAAA,CAAA,UAAc,CAAC,MAAM,CAAC;AACpE","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/logger.ts"],"sourcesContent":["// utils/logger.ts\r\n// import chalk from 'chalk'; // Commented out chalk\r\n\r\nexport type DebugLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error';\r\n\r\ntype LoggerFunction = (...messages: any[]) => void;\r\n\r\n// const chalkInstance = chalk; // Commented out chalk\r\n\r\ninterface Logger {\r\n  trace: LoggerFunction;\r\n  debug: LoggerFunction;\r\n  info: LoggerFunction;\r\n  warn: LoggerFunction;\r\n  error: LoggerFunction;\r\n  setLevel: (level: DebugLevel) => void;\r\n}\r\n\r\nlet currentLevel: DebugLevel = (process.env.VITE_LOG_LEVEL ?? (process.env.NODE_ENV !== 'production')) ? 'debug' : 'info';\r\n\r\n// Configuration du logger pour écrire dans des fichiers\r\nlet logDirectory: string | undefined;\r\nlet fsModule: any;\r\nlet pathModule: any;\r\n\r\nif (typeof window === 'undefined') {\r\n  fsModule = require('fs');\r\n  pathModule = require('path');\r\n  logDirectory = pathModule.join(__dirname, '..', '..', 'docs', 'logs');\r\n  if (fsModule && !fsModule.existsSync(logDirectory)) {\r\n    fsModule.mkdirSync(logDirectory, { recursive: true });\r\n  }\r\n}\r\n\r\nconst logToFile = (filename: string, message: string) => {\r\n  if (typeof window === 'undefined' && fsModule && pathModule && logDirectory) {\r\n    const logFilePath = pathModule.join(logDirectory, filename);\r\n    fsModule.appendFileSync(logFilePath, `${new Date().toISOString()} - ${message}\\n`);\r\n  }\r\n};\r\n\r\nexport const logger: Logger = {\r\n  trace: (...messages: any[]) => log('trace', undefined, messages),\r\n  debug: (...messages: any[]) => log('debug', undefined, messages),\r\n  info: (...messages: any[]) => log('info', undefined, messages),\r\n  warn: (...messages: any[]) => log('warn', undefined, messages),\r\n  error: (...messages: any[]) => log('error', undefined, messages),\r\n  setLevel,\r\n};\r\n\r\nexport function createScopedLogger(scope: string): Logger {\r\n  return {\r\n    trace: (...messages: any[]) => log('trace', scope, messages),\r\n    debug: (...messages: any[]) => log('debug', scope, messages),\r\n    info: (...messages: any[]) => log('info', scope, messages),\r\n    warn: (...messages: any[]) => log('warn', scope, messages),\r\n    error: (...messages: any[]) => log('error', scope, messages),\r\n    setLevel,\r\n  };\r\n}\r\n\r\nfunction setLevel(level: DebugLevel) {\r\n  if ((level === 'trace' || level === 'debug') && process.env.NODE_ENV === 'production') {\r\n    return;\r\n  }\r\n\r\n  currentLevel = level;\r\n}\r\n\r\nfunction log(level: DebugLevel, scope: string | undefined, messages: any[]) {\r\n  const levelOrder: DebugLevel[] = ['trace', 'debug', 'info', 'warn', 'error'];\r\n\r\n  if (levelOrder.indexOf(level) < levelOrder.indexOf(currentLevel)) {\r\n    return;\r\n  }\r\n\r\n  const allMessages = messages.reduce((acc, current) => {\r\n    if (acc.endsWith('\\n')) {\r\n      return acc + current;\r\n    }\r\n\r\n    if (!acc) {\r\n      return current;\r\n    }\r\n\r\n    return `${acc} ${current}`;\r\n  }, '');\r\n\r\n  // const labelBackgroundColor = getColorForLevel(level); // Commented out chalk\r\n  // const labelTextColor = level === 'warn' ? '#000000' : '#FFFFFF'; // Commented out chalk\r\n\r\n  // const labelStyles = getLabelStyles(labelBackgroundColor, labelTextColor); // Commented out chalk\r\n  // const scopeStyles = getLabelStyles('#77828D', 'white'); // Commented out chalk\r\n\r\n  // const styles = [labelStyles]; // Commented out chalk\r\n\r\n  // if (typeof scope === 'string') { // Commented out chalk\r\n  //   styles.push('', scopeStyles); // Commented out chalk\r\n  // } // Commented out chalk\r\n\r\n  // let labelText = formatText(` ${level.toUpperCase()} `, labelTextColor, labelBackgroundColor); // Commented out chalk\r\n\r\n  // if (scope) { // Commented out chalk\r\n  //   labelText = `${labelText} ${formatText(` ${scope} `, '#FFFFFF', '77828D')}`; // Commented out chalk\r\n  // } // Commented out chalk\r\n\r\n  if (typeof window !== 'undefined') {\r\n    console.log(`%c${level.toUpperCase()}${scope ? `%c %c${scope}` : ''}`, [], allMessages); // Removed styles, kept CSS for browser\r\n  } else {\r\n    console.log(`${level.toUpperCase()} ${scope ? `[${scope}] ` : ''}`, allMessages); // Simplified output for non-browser\r\n  }\r\n\r\n  // Écriture dans les fichiers de log\r\n  const logMessage = `${level.toUpperCase()} - ${scope ? `[${scope}] ` : ''}${allMessages}`;\r\n  switch (level) {\r\n    case 'trace':\r\n    case 'debug':\r\n      logToFile('vite_errors.log', logMessage);\r\n      break;\r\n    case 'info':\r\n    case 'warn':\r\n    case 'error':\r\n      logToFile('runtime_errors.log', logMessage);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction formatText(text: string, color: string, bg: string) {\r\n  return text; // Simplified formatText\r\n}\r\n\r\nfunction getLabelStyles(color: string, textColor: string) {\r\n  return ``; // Removed styles, kept CSS for browser\r\n}\r\n\r\nfunction getColorForLevel(level: DebugLevel): string {\r\n  switch (level) {\r\n    case 'trace':\r\n    case 'debug': {\r\n      return '#77828D';\r\n    }\r\n    case 'info': {\r\n      return '#1389FD';\r\n    }\r\n    case 'warn': {\r\n      return '#FFDB6C';\r\n    }\r\n    case 'error': {\r\n      return '#EE4744';\r\n    }\r\n    default: {\r\n      return '#000000';\r\n    }\r\n  }\r\n}\r\n\r\nexport const renderLogger = createScopedLogger('Render');\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/unreachable.ts"],"sourcesContent":["export function unreachable(message: string): never {\r\n  throw new Error(`Unreachable: ${message}`);\r\n}\r\n"],"names":[],"mappings":";;;AAAO,SAAS,YAAY,OAAe;IACzC,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE,SAAS;AAC3C","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/runtime/action-runner.ts"],"sourcesContent":["import type { WebContainer } from '@webcontainer/api';\r\nimport { path } from '~/utils/path';\r\nimport { atom, map, type MapStore } from 'nanostores';\r\nimport type { ActionAlert, BoltAction } from '~/types/actions';\r\nimport { createScopedLogger } from '~/utils/logger';\r\nimport { unreachable } from '~/utils/unreachable';\r\nimport type { ActionCallbackData } from './message-parser';\r\nimport type { BoltShell } from '~/utils/shell';\r\n\r\nconst logger = createScopedLogger('ActionRunner');\r\n\r\nexport type ActionStatus = 'pending' | 'running' | 'complete' | 'aborted' | 'failed';\r\n\r\nexport type BaseActionState = BoltAction & {\r\n  status: Exclude<ActionStatus, 'failed'>;\r\n  abort: () => void;\r\n  executed: boolean;\r\n  abortSignal: AbortSignal;\r\n};\r\n\r\nexport type FailedActionState = BoltAction &\r\n  Omit<BaseActionState, 'status'> & {\r\n    status: Extract<ActionStatus, 'failed'>;\r\n    error: string;\r\n  };\r\n\r\nexport type ActionState = BaseActionState | FailedActionState;\r\n\r\ntype BaseActionUpdate = Partial<Pick<BaseActionState, 'status' | 'abort' | 'executed'>>;\r\n\r\nexport type ActionStateUpdate =\r\n  | BaseActionUpdate\r\n  | (Omit<BaseActionUpdate, 'status'> & { status: 'failed'; error: string });\r\n\r\ntype ActionsMap = MapStore<Record<string, ActionState>>;\r\n\r\nclass ActionCommandError extends Error {\r\n  readonly _output: string;\r\n  readonly _header: string;\r\n\r\n  constructor(message: string, output: string) {\r\n    // Create a formatted message that includes both the error message and output\r\n    const formattedMessage = `Failed To Execute Shell Command: ${message}\\n\\nOutput:\\n${output}`;\r\n    super(formattedMessage);\r\n\r\n    // Set the output separately so it can be accessed programmatically\r\n    this._header = message;\r\n    this._output = output;\r\n\r\n    // Maintain proper prototype chain\r\n    Object.setPrototypeOf(this, ActionCommandError.prototype);\r\n\r\n    // Set the name of the error for better debugging\r\n    this.name = 'ActionCommandError';\r\n  }\r\n\r\n  // Optional: Add a method to get just the terminal output\r\n  get output() {\r\n    return this._output;\r\n  }\r\n  get header() {\r\n    return this._header;\r\n  }\r\n}\r\n\r\nexport class ActionRunner {\r\n  #webcontainer: Promise<WebContainer>;\r\n  #currentExecutionPromise: Promise<void> = Promise.resolve();\r\n  #shellTerminal: () => BoltShell;\r\n  runnerId = atom<string>(`${Date.now()}`);\r\n  actions: ActionsMap = map({});\r\n  onAlert?: (alert: ActionAlert) => void;\r\n\r\n  constructor(\r\n    webcontainerPromise: Promise<WebContainer>,\r\n    getShellTerminal: () => BoltShell,\r\n    onAlert?: (alert: ActionAlert) => void,\r\n  ) {\r\n    this.#webcontainer = webcontainerPromise;\r\n    this.#shellTerminal = getShellTerminal;\r\n    this.onAlert = onAlert;\r\n  }\r\n\r\n  addAction(data: ActionCallbackData) {\r\n    const { actionId } = data;\r\n\r\n    const actions = this.actions.get();\r\n    const action = actions[actionId];\r\n\r\n    if (action) {\r\n      // action already added\r\n      return;\r\n    }\r\n\r\n    const abortController = new AbortController();\r\n\r\n    this.actions.setKey(actionId, {\r\n      ...data.action,\r\n      status: 'pending',\r\n      executed: false,\r\n      abort: () => {\r\n        abortController.abort();\r\n        this.#updateAction(actionId, { status: 'aborted' });\r\n      },\r\n      abortSignal: abortController.signal,\r\n    });\r\n\r\n    this.#currentExecutionPromise.then(() => {\r\n      this.#updateAction(actionId, { status: 'running' });\r\n    });\r\n  }\r\n\r\n  async runAction(data: ActionCallbackData, isStreaming: boolean = false) {\r\n    const { actionId } = data;\r\n    const action = this.actions.get()[actionId];\r\n\r\n    if (!action) {\r\n      unreachable(`Action ${actionId} not found`);\r\n    }\r\n\r\n    if (action.executed) {\r\n      return; // No return value here\r\n    }\r\n\r\n    if (isStreaming && action.type !== 'file') {\r\n      return; // No return value here\r\n    }\r\n\r\n    this.#updateAction(actionId, { ...action, ...data.action, executed: !isStreaming });\r\n\r\n    this.#currentExecutionPromise = this.#currentExecutionPromise\r\n      .then(() => {\r\n        return this.#executeAction(actionId, isStreaming);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Action failed:', error);\r\n      });\r\n\r\n    await this.#currentExecutionPromise;\r\n\r\n    return;\r\n  }\r\n\r\n  async #executeAction(actionId: string, isStreaming: boolean = false) {\r\n    const action = this.actions.get()[actionId];\r\n\r\n    this.#updateAction(actionId, { status: 'running' });\r\n\r\n    try {\r\n      switch (action.type) {\r\n        case 'shell': {\r\n          await this.#runShellAction(action);\r\n          break;\r\n        }\r\n        case 'file': {\r\n          await this.#runFileAction(action);\r\n          break;\r\n        }\r\n        case 'start': {\r\n          // making the start app non blocking\r\n\r\n          this.#runStartAction(action)\r\n            .then(() => this.#updateAction(actionId, { status: 'complete' }))\r\n            .catch((err: Error) => {\r\n              if (action.abortSignal.aborted) {\r\n                return;\r\n              }\r\n\r\n              this.#updateAction(actionId, { status: 'failed', error: 'Action failed' });\r\n              logger.error(`[${action.type}]:Action failed\\n\\n`, err);\r\n\r\n              if (!(err instanceof ActionCommandError)) {\r\n                return;\r\n              }\r\n\r\n              this.onAlert?.({\r\n                type: 'error',\r\n                title: 'Dev Server Failed',\r\n                description: err.header,\r\n                content: err.output,\r\n              });\r\n            });\r\n\r\n          /*\r\n           * adding a delay to avoid any race condition between 2 start actions\r\n           * i am up for a better approach\r\n           */\r\n          await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.#updateAction(actionId, {\r\n        status: isStreaming ? 'running' : action.abortSignal.aborted ? 'aborted' : 'complete',\r\n      });\r\n    } catch (error) {\r\n      if (action.abortSignal.aborted) {\r\n        return;\r\n      }\r\n\r\n      this.#updateAction(actionId, { status: 'failed', error: 'Action failed' });\r\n      logger.error(`[${action.type}]:Action failed\\n\\n`, error);\r\n\r\n      if (!(error instanceof ActionCommandError)) {\r\n        return;\r\n      }\r\n\r\n      this.onAlert?.({\r\n        type: 'error',\r\n        title: 'Dev Server Failed',\r\n        description: error.header,\r\n        content: error.output,\r\n      });\r\n\r\n      // re-throw the error to be caught in the promise chain\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async #runShellAction(action: ActionState) {\r\n    if (action.type !== 'shell') {\r\n      unreachable('Expected shell action');\r\n    }\r\n\r\n    const shell = this.#shellTerminal();\r\n    await shell.ready();\r\n\r\n    if (!shell || !shell.terminal || !shell.process) {\r\n      unreachable('Shell terminal not found');\r\n    }\r\n\r\n    const resp = await shell.executeCommand(this.runnerId.get(), action.content, () => {\r\n      logger.debug(`[${action.type}]:Aborting Action\\n\\n`, action);\r\n      action.abort();\r\n    });\r\n    logger.debug(`${action.type} Shell Response: [exit code:${resp?.exitCode}]`);\r\n\r\n    if (resp?.exitCode != 0) {\r\n      throw new ActionCommandError(`Failed To Execute Shell Command`, resp?.output || 'No Output Available');\r\n    }\r\n  }\r\n\r\n  async #runStartAction(action: ActionState) {\r\n    if (action.type !== 'start') {\r\n      unreachable('Expected shell action');\r\n    }\r\n\r\n    if (!this.#shellTerminal) {\r\n      unreachable('Shell terminal not found');\r\n    }\r\n\r\n    const shell = this.#shellTerminal();\r\n    await shell.ready();\r\n\r\n    if (!shell || !shell.terminal || !shell.process) {\r\n      unreachable('Shell terminal not found');\r\n    }\r\n\r\n    const resp = await shell.executeCommand(this.runnerId.get(), action.content, () => {\r\n      logger.debug(`[${action.type}]:Aborting Action\\n\\n`, action);\r\n      action.abort();\r\n    });\r\n    logger.debug(`${action.type} Shell Response: [exit code:${resp?.exitCode}]`);\r\n\r\n    if (resp?.exitCode != 0) {\r\n      throw new ActionCommandError('Failed To Start Application', resp?.output || 'No Output Available');\r\n    }\r\n\r\n    return resp;\r\n  }\r\n\r\n  async #runFileAction(action: ActionState) {\r\n    if (action.type !== 'file') {\r\n      unreachable('Expected file action');\r\n    }\r\n\r\n    const webcontainer = await this.#webcontainer;\r\n    const relativePath = path.relative(webcontainer.workdir, action.filePath);\r\n\r\n    let folder = path.dirname(relativePath);\r\n\r\n    // remove trailing slashes\r\n    folder = folder.replace(/\\/+$/g, '');\r\n\r\n    if (folder !== '.') {\r\n      try {\r\n        await webcontainer.fs.mkdir(folder, { recursive: true });\r\n        logger.debug('Created folder', folder);\r\n      } catch (error) {\r\n        logger.error('Failed to create folder\\n\\n', error);\r\n      }\r\n    }\r\n\r\n    try {\r\n      await webcontainer.fs.writeFile(relativePath, action.content);\r\n      logger.debug(`File written ${relativePath}`);\r\n    } catch (error) {\r\n      logger.error('Failed to write file\\n\\n', error);\r\n    }\r\n  }\r\n  #updateAction(id: string, newState: ActionStateUpdate) {\r\n    const actions = this.actions.get();\r\n\r\n    this.actions.setKey(id, { ...actions[id], ...newState });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/base-provider.ts"],"sourcesContent":["import type { LanguageModelV1 } from 'ai';\r\nimport type { ProviderInfo, ProviderConfig, ModelInfo } from './types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\nimport { LLMManager } from './manager';\r\n\r\nexport abstract class BaseProvider implements ProviderInfo {\r\n  abstract name: string;\r\n  abstract staticModels: ModelInfo[];\r\n  abstract config: ProviderConfig;\r\n  cachedDynamicModels?: {\r\n    cacheId: string;\r\n    models: ModelInfo[];\r\n  };\r\n\r\n  getApiKeyLink?: string;\r\n  labelForGetApiKey?: string;\r\n  icon?: string;\r\n\r\n  getProviderBaseUrlAndKey(options: {\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: IProviderSetting;\r\n    serverEnv?: Record<string, string>;\r\n    defaultBaseUrlKey: string;\r\n    defaultApiTokenKey: string;\r\n  }) {\r\n    const { apiKeys, providerSettings, serverEnv, defaultBaseUrlKey, defaultApiTokenKey } = options;\r\n    let settingsBaseUrl = providerSettings?.baseUrl;\r\n    const manager = LLMManager.getInstance();\r\n\r\n    if (settingsBaseUrl && settingsBaseUrl.length == 0) {\r\n      settingsBaseUrl = undefined;\r\n    }\r\n\r\n    const baseUrlKey = this.config.baseUrlKey || defaultBaseUrlKey;\r\n    let baseUrl =\r\n      settingsBaseUrl ||\r\n      serverEnv?.[baseUrlKey] ||\r\n      process?.env?.[baseUrlKey] ||\r\n      manager.env?.[baseUrlKey] ||\r\n      this.config.baseUrl;\r\n\r\n    if (baseUrl && baseUrl.endsWith('/')) {\r\n      baseUrl = baseUrl.slice(0, -1);\r\n    }\r\n\r\n    const apiTokenKey = this.config.apiTokenKey || defaultApiTokenKey;\r\n    const apiKey =\r\n      apiKeys?.[this.name] || serverEnv?.[apiTokenKey] || process?.env?.[apiTokenKey] || manager.env?.[apiTokenKey];\r\n\r\n    return {\r\n      baseUrl,\r\n      apiKey,\r\n    };\r\n  }\r\n  getModelsFromCache(options: {\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n    serverEnv?: Record<string, string>;\r\n  }): ModelInfo[] | null {\r\n    if (!this.cachedDynamicModels) {\r\n      // console.log('no dynamic models',this.name);\r\n      return null;\r\n    }\r\n\r\n    const cacheKey = this.cachedDynamicModels.cacheId;\r\n    const generatedCacheKey = this.getDynamicModelsCacheKey(options);\r\n\r\n    if (cacheKey !== generatedCacheKey) {\r\n      // console.log('cache key mismatch',this.name,cacheKey,generatedCacheKey);\r\n      this.cachedDynamicModels = undefined;\r\n      return null;\r\n    }\r\n\r\n    return this.cachedDynamicModels.models;\r\n  }\r\n  getDynamicModelsCacheKey(options: {\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n    serverEnv?: Record<string, string>;\r\n  }) {\r\n    return JSON.stringify({\r\n      apiKeys: options.apiKeys?.[this.name],\r\n      providerSettings: options.providerSettings?.[this.name],\r\n      serverEnv: options.serverEnv,\r\n    });\r\n  }\r\n  storeDynamicModels(\r\n    options: {\r\n      apiKeys?: Record<string, string>;\r\n      providerSettings?: Record<string, IProviderSetting>;\r\n      serverEnv?: Record<string, string>;\r\n    },\r\n    models: ModelInfo[],\r\n  ) {\r\n    const cacheId = this.getDynamicModelsCacheKey(options);\r\n\r\n    // console.log('caching dynamic models',this.name,cacheId);\r\n    this.cachedDynamicModels = {\r\n      cacheId,\r\n      models,\r\n    };\r\n  }\r\n\r\n  // Declare the optional getDynamicModels method\r\n  getDynamicModels?(\r\n    apiKeys?: Record<string, string>,\r\n    settings?: IProviderSetting,\r\n    serverEnv?: Record<string, string>,\r\n  ): Promise<ModelInfo[]>;\r\n\r\n  abstract getModelInstance(options: {\r\n    model: string;\r\n    serverEnv?: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1;\r\n}\r\n\r\ntype OptionalApiKey = string | undefined;\r\n\r\nexport function getOpenAILikeModel(baseURL: string, apiKey: OptionalApiKey, model: string) {\r\n  const openai = createOpenAI({\r\n    baseURL,\r\n    apiKey,\r\n  });\r\n\r\n  return openai(model);\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;;;AAEO,MAAe;IAIpB,oBAGE;IAEF,cAAuB;IACvB,kBAA2B;IAC3B,KAAc;IAEd,yBAAyB,OAMxB,EAAE;QACD,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,SAAS,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,GAAG;QACxF,IAAI,kBAAkB,kBAAkB;QACxC,MAAM,UAAU,gIAAA,CAAA,aAAU,CAAC,WAAW;QAEtC,IAAI,mBAAmB,gBAAgB,MAAM,IAAI,GAAG;YAClD,kBAAkB;QACpB;QAEA,MAAM,aAAa,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI;QAC7C,IAAI,UACF,mBACA,WAAW,CAAC,WAAW,IACvB,SAAS,KAAK,CAAC,WAAW,IAC1B,QAAQ,GAAG,EAAE,CAAC,WAAW,IACzB,IAAI,CAAC,MAAM,CAAC,OAAO;QAErB,IAAI,WAAW,QAAQ,QAAQ,CAAC,MAAM;YACpC,UAAU,QAAQ,KAAK,CAAC,GAAG,CAAC;QAC9B;QAEA,MAAM,cAAc,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI;QAC/C,MAAM,SACJ,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,YAAY,IAAI,SAAS,KAAK,CAAC,YAAY,IAAI,QAAQ,GAAG,EAAE,CAAC,YAAY;QAE/G,OAAO;YACL;YACA;QACF;IACF;IACA,mBAAmB,OAIlB,EAAsB;QACrB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC7B,8CAA8C;YAC9C,OAAO;QACT;QAEA,MAAM,WAAW,IAAI,CAAC,mBAAmB,CAAC,OAAO;QACjD,MAAM,oBAAoB,IAAI,CAAC,wBAAwB,CAAC;QAExD,IAAI,aAAa,mBAAmB;YAClC,0EAA0E;YAC1E,IAAI,CAAC,mBAAmB,GAAG;YAC3B,OAAO;QACT;QAEA,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM;IACxC;IACA,yBAAyB,OAIxB,EAAE;QACD,OAAO,KAAK,SAAS,CAAC;YACpB,SAAS,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;YACrC,kBAAkB,QAAQ,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;YACvD,WAAW,QAAQ,SAAS;QAC9B;IACF;IACA,mBACE,OAIC,EACD,MAAmB,EACnB;QACA,MAAM,UAAU,IAAI,CAAC,wBAAwB,CAAC;QAE9C,2DAA2D;QAC3D,IAAI,CAAC,mBAAmB,GAAG;YACzB;YACA;QACF;IACF;AAeF;AAIO,SAAS,mBAAmB,OAAe,EAAE,MAAsB,EAAE,KAAa;IACvF,MAAM,SAAS,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;QAC1B;QACA;IACF;IAEA,OAAO,OAAO;AAChB","debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/anthropic.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport { createAnthropic } from '@ai-sdk/anthropic';\r\n\r\nexport default class AnthropicProvider extends BaseProvider {\r\n  name = 'Anthropic';\r\n  getApiKeyLink = 'https://console.anthropic.com/settings/keys';\r\n\r\n  config = {\r\n    apiTokenKey: 'ANTHROPIC_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    {\r\n      name: 'claude-3-5-sonnet-latest',\r\n      label: 'Claude 3.5 Sonnet (new)',\r\n      provider: 'Anthropic',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'claude-3-5-sonnet-20240620',\r\n      label: 'Claude 3.5 Sonnet (old)',\r\n      provider: 'Anthropic',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'claude-3-5-haiku-latest',\r\n      label: 'Claude 3.5 Haiku (new)',\r\n      provider: 'Anthropic',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    { name: 'claude-3-opus-latest', label: 'Claude 3 Opus', provider: 'Anthropic', maxTokenAllowed: 8000 },\r\n    { name: 'claude-3-sonnet-20240229', label: 'Claude 3 Sonnet', provider: 'Anthropic', maxTokenAllowed: 8000 },\r\n    { name: 'claude-3-haiku-20240307', label: 'Claude 3 Haiku', provider: 'Anthropic', maxTokenAllowed: 8000 },\r\n  ];\r\n  getModelInstance: (options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }) => LanguageModelV1 = (options) => {\r\n    const { apiKeys, providerSettings, serverEnv, model } = options;\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings,\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'ANTHROPIC_API_KEY',\r\n    });\r\n    const anthropic = createAnthropic({\r\n      apiKey,\r\n    });\r\n\r\n    return anthropic(model);\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,0BAA0B,yIAAA,CAAA,eAAY;IACzD,OAAO,YAAY;IACnB,gBAAgB,8CAA8C;IAE9D,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YAAE,MAAM;YAAwB,OAAO;YAAiB,UAAU;YAAa,iBAAiB;QAAK;QACrG;YAAE,MAAM;YAA4B,OAAO;YAAmB,UAAU;YAAa,iBAAiB;QAAK;QAC3G;YAAE,MAAM;YAA2B,OAAO;YAAkB,UAAU;YAAa,iBAAiB;QAAK;KAC1G,CAAC;IACF,mBAKwB,CAAC;QACvB,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG;QACxD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA;YACA,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QACA,MAAM,YAAY,CAAA,GAAA,oPAAA,CAAA,kBAAe,AAAD,EAAE;YAChC;QACF;QAEA,OAAO,UAAU;IACnB,EAAE;AACJ","debugId":null}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/cohere.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createCohere } from '@ai-sdk/cohere';\r\n\r\nexport default class CohereProvider extends BaseProvider {\r\n  name = 'Cohere';\r\n  getApiKeyLink = 'https://dashboard.cohere.com/api-keys';\r\n\r\n  config = {\r\n    apiTokenKey: 'COHERE_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    { name: 'command-r-plus-08-2024', label: 'Command R plus Latest', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'command-r-08-2024', label: 'Command R Latest', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'command-r-plus', label: 'Command R plus', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'command-r', label: 'Command R', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'command', label: 'Command', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'command-nightly', label: 'Command Nightly', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'command-light', label: 'Command Light', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'command-light-nightly', label: 'Command Light Nightly', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'c4ai-aya-expanse-8b', label: 'c4AI Aya Expanse 8b', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n    { name: 'c4ai-aya-expanse-32b', label: 'c4AI Aya Expanse 32b', provider: 'Cohere', maxTokenAllowed: 4096 },\r\n  ];\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'COHERE_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const cohere = createCohere({\r\n      apiKey,\r\n    });\r\n\r\n    return cohere(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,uBAAuB,yIAAA,CAAA,eAAY;IACtD,OAAO,SAAS;IAChB,gBAAgB,wCAAwC;IAExD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YAAE,MAAM;YAA0B,OAAO;YAAyB,UAAU;YAAU,iBAAiB;QAAK;QAC5G;YAAE,MAAM;YAAqB,OAAO;YAAoB,UAAU;YAAU,iBAAiB;QAAK;QAClG;YAAE,MAAM;YAAkB,OAAO;YAAkB,UAAU;YAAU,iBAAiB;QAAK;QAC7F;YAAE,MAAM;YAAa,OAAO;YAAa,UAAU;YAAU,iBAAiB;QAAK;QACnF;YAAE,MAAM;YAAW,OAAO;YAAW,UAAU;YAAU,iBAAiB;QAAK;QAC/E;YAAE,MAAM;YAAmB,OAAO;YAAmB,UAAU;YAAU,iBAAiB;QAAK;QAC/F;YAAE,MAAM;YAAiB,OAAO;YAAiB,UAAU;YAAU,iBAAiB;QAAK;QAC3F;YAAE,MAAM;YAAyB,OAAO;YAAyB,UAAU;YAAU,iBAAiB;QAAK;QAC3G;YAAE,MAAM;YAAuB,OAAO;YAAuB,UAAU;YAAU,iBAAiB;QAAK;QACvG;YAAE,MAAM;YAAwB,OAAO;YAAwB,UAAU;YAAU,iBAAiB;QAAK;KAC1G,CAAC;IAEF,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,SAAS,CAAA,GAAA,8OAAA,CAAA,eAAY,AAAD,EAAE;YAC1B;QACF;QAEA,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/deepseek.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createDeepSeek } from '@ai-sdk/deepseek';\r\n\r\nexport default class DeepseekProvider extends BaseProvider {\r\n  name = 'Deepseek';\r\n  getApiKeyLink = 'https://platform.deepseek.com/apiKeys';\r\n\r\n  config = {\r\n    apiTokenKey: 'DEEPSEEK_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    { name: 'deepseek-coder', label: 'Deepseek-Coder', provider: 'Deepseek', maxTokenAllowed: 8000 },\r\n    { name: 'deepseek-chat', label: 'Deepseek-Chat', provider: 'Deepseek', maxTokenAllowed: 8000 },\r\n    { name: 'deepseek-reasoner', label: 'Deepseek-Reasoner', provider: 'Deepseek', maxTokenAllowed: 8000 },\r\n  ];\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'DEEPSEEK_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const deepseek = createDeepSeek({\r\n      apiKey,\r\n    });\r\n\r\n    return deepseek(model, {\r\n      // simulateStreaming: true,\r\n    });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,yBAAyB,yIAAA,CAAA,eAAY;IACxD,OAAO,WAAW;IAClB,gBAAgB,wCAAwC;IAExD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YAAE,MAAM;YAAkB,OAAO;YAAkB,UAAU;YAAY,iBAAiB;QAAK;QAC/F;YAAE,MAAM;YAAiB,OAAO;YAAiB,UAAU;YAAY,iBAAiB;QAAK;QAC7F;YAAE,MAAM;YAAqB,OAAO;YAAqB,UAAU;YAAY,iBAAiB;QAAK;KACtG,CAAC;IAEF,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,WAAW,CAAA,GAAA,kPAAA,CAAA,iBAAc,AAAD,EAAE;YAC9B;QACF;QAEA,OAAO,SAAS,OAAO;QAEvB;IACF;AACF","debugId":null}},
    {"offset": {"line": 818, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/google.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createGoogleGenerativeAI } from '@ai-sdk/google';\r\n\r\nexport default class GoogleProvider extends BaseProvider {\r\n  name = 'Google';\r\n  getApiKeyLink = 'https://aistudio.google.com/app/apikey';\r\n\r\n  config = {\r\n    apiTokenKey: 'GOOGLE_GENERATIVE_AI_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    { name: 'gemini-1.5-flash-latest', label: 'Gemini 1.5 Flash', provider: 'Google', maxTokenAllowed: 8192 },\r\n    {\r\n      name: 'gemini-2.0-flash-thinking-exp-01-21',\r\n      label: 'Gemini 2.0 Flash-thinking-exp-01-21',\r\n      provider: 'Google',\r\n      maxTokenAllowed: 65536,\r\n    },\r\n    { name: 'gemini-2.0-flash-exp', label: 'Gemini 2.0 Flash', provider: 'Google', maxTokenAllowed: 8192 },\r\n    { name: 'gemini-1.5-flash-002', label: 'Gemini 1.5 Flash-002', provider: 'Google', maxTokenAllowed: 8192 },\r\n    { name: 'gemini-1.5-flash-8b', label: 'Gemini 1.5 Flash-8b', provider: 'Google', maxTokenAllowed: 8192 },\r\n    { name: 'gemini-1.5-pro-latest', label: 'Gemini 1.5 Pro', provider: 'Google', maxTokenAllowed: 8192 },\r\n    { name: 'gemini-1.5-pro-002', label: 'Gemini 1.5 Pro-002', provider: 'Google', maxTokenAllowed: 8192 },\r\n    { name: 'gemini-exp-1206', label: 'Gemini exp-1206', provider: 'Google', maxTokenAllowed: 8192 },\r\n  ];\r\n\r\n  async getDynamicModels(\r\n    apiKeys?: Record<string, string>,\r\n    settings?: IProviderSetting,\r\n    serverEnv?: Record<string, string>,\r\n  ): Promise<ModelInfo[]> {\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: settings,\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'GOOGLE_GENERATIVE_AI_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw `Missing Api Key configuration for ${this.name} provider`;\r\n    }\r\n\r\n    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models?key=${apiKey}`, {\r\n      headers: {\r\n        ['Content-Type']: 'application/json',\r\n      },\r\n    });\r\n\r\n    const res = (await response.json()) as any;\r\n\r\n    const data = res.models.filter((model: any) => model.outputTokenLimit > 8000);\r\n\r\n    return data.map((m: any) => ({\r\n      name: m.name.replace('models/', ''),\r\n      label: `${m.displayName} - context ${Math.floor((m.inputTokenLimit + m.outputTokenLimit) / 1000) + 'k'}`,\r\n      provider: this.name,\r\n      maxTokenAllowed: m.inputTokenLimit + m.outputTokenLimit || 8000,\r\n    }));\r\n  }\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: any;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'GOOGLE_GENERATIVE_AI_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const google = createGoogleGenerativeAI({\r\n      apiKey,\r\n    });\r\n\r\n    return google(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,uBAAuB,yIAAA,CAAA,eAAY;IACtD,OAAO,SAAS;IAChB,gBAAgB,yCAAyC;IAEzD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YAAE,MAAM;YAA2B,OAAO;YAAoB,UAAU;YAAU,iBAAiB;QAAK;QACxG;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YAAE,MAAM;YAAwB,OAAO;YAAoB,UAAU;YAAU,iBAAiB;QAAK;QACrG;YAAE,MAAM;YAAwB,OAAO;YAAwB,UAAU;YAAU,iBAAiB;QAAK;QACzG;YAAE,MAAM;YAAuB,OAAO;YAAuB,UAAU;YAAU,iBAAiB;QAAK;QACvG;YAAE,MAAM;YAAyB,OAAO;YAAkB,UAAU;YAAU,iBAAiB;QAAK;QACpG;YAAE,MAAM;YAAsB,OAAO;YAAsB,UAAU;YAAU,iBAAiB;QAAK;QACrG;YAAE,MAAM;YAAmB,OAAO;YAAmB,UAAU;YAAU,iBAAiB;QAAK;KAChG,CAAC;IAEF,MAAM,iBACJ,OAAgC,EAChC,QAA2B,EAC3B,SAAkC,EACZ;QACtB,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB;YAClB,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,CAAC,kCAAkC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACjE;QAEA,MAAM,WAAW,MAAM,MAAM,CAAC,4DAA4D,EAAE,QAAQ,EAAE;YACpG,SAAS;gBACP,CAAC,eAAe,EAAE;YACpB;QACF;QAEA,MAAM,MAAO,MAAM,SAAS,IAAI;QAEhC,MAAM,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,QAAe,MAAM,gBAAgB,GAAG;QAExE,OAAO,KAAK,GAAG,CAAC,CAAC,IAAW,CAAC;gBAC3B,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;gBAChC,OAAO,GAAG,EAAE,WAAW,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,CAAC,EAAE,eAAe,GAAG,EAAE,gBAAgB,IAAI,QAAQ,KAAK;gBACxG,UAAU,IAAI,CAAC,IAAI;gBACnB,iBAAiB,EAAE,eAAe,GAAG,EAAE,gBAAgB,IAAI;YAC7D,CAAC;IACH;IAEA,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,SAAS,CAAA,GAAA,8OAAA,CAAA,2BAAwB,AAAD,EAAE;YACtC;QACF;QAEA,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 930, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/groq.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\n\r\nexport default class GroqProvider extends BaseProvider {\r\n  name = 'Groq';\r\n  getApiKeyLink = 'https://console.groq.com/keys';\r\n\r\n  config = {\r\n    apiTokenKey: 'GROQ_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    { name: 'llama-3.1-8b-instant', label: 'Llama 3.1 8b (Groq)', provider: 'Groq', maxTokenAllowed: 8000 },\r\n    { name: 'llama-3.2-11b-vision-preview', label: 'Llama 3.2 11b (Groq)', provider: 'Groq', maxTokenAllowed: 8000 },\r\n    { name: 'llama-3.2-90b-vision-preview', label: 'Llama 3.2 90b (Groq)', provider: 'Groq', maxTokenAllowed: 8000 },\r\n    { name: 'llama-3.2-3b-preview', label: 'Llama 3.2 3b (Groq)', provider: 'Groq', maxTokenAllowed: 8000 },\r\n    { name: 'llama-3.2-1b-preview', label: 'Llama 3.2 1b (Groq)', provider: 'Groq', maxTokenAllowed: 8000 },\r\n    { name: 'llama-3.3-70b-versatile', label: 'Llama 3.3 70b (Groq)', provider: 'Groq', maxTokenAllowed: 8000 },\r\n    {\r\n      name: 'deepseek-r1-distill-llama-70b',\r\n      label: 'Deepseek R1 Distill Llama 70b (Groq)',\r\n      provider: 'Groq',\r\n      maxTokenAllowed: 131072,\r\n    },\r\n  ];\r\n\r\n  async getDynamicModels(\r\n    apiKeys?: Record<string, string>,\r\n    settings?: IProviderSetting,\r\n    serverEnv?: Record<string, string>,\r\n  ): Promise<ModelInfo[]> {\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: settings,\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'GROQ_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw `Missing Api Key configuration for ${this.name} provider`;\r\n    }\r\n\r\n    const response = await fetch(`https://api.groq.com/openai/v1/models`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`,\r\n      },\r\n    });\r\n\r\n    const res = (await response.json()) as any;\r\n\r\n    const data = res.data.filter(\r\n      (model: any) => model.object === 'model' && model.active && model.context_window > 8000,\r\n    );\r\n\r\n    return data.map((m: any) => ({\r\n      name: m.id,\r\n      label: `${m.id} - context ${m.context_window ? Math.floor(m.context_window / 1000) + 'k' : 'N/A'} [ by ${m.owned_by}]`,\r\n      provider: this.name,\r\n      maxTokenAllowed: m.context_window || 8000,\r\n    }));\r\n  }\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'GROQ_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const openai = createOpenAI({\r\n      baseURL: 'https://api.groq.com/openai/v1',\r\n      apiKey,\r\n    });\r\n\r\n    return openai(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,qBAAqB,yIAAA,CAAA,eAAY;IACpD,OAAO,OAAO;IACd,gBAAgB,gCAAgC;IAEhD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YAAE,MAAM;YAAwB,OAAO;YAAuB,UAAU;YAAQ,iBAAiB;QAAK;QACtG;YAAE,MAAM;YAAgC,OAAO;YAAwB,UAAU;YAAQ,iBAAiB;QAAK;QAC/G;YAAE,MAAM;YAAgC,OAAO;YAAwB,UAAU;YAAQ,iBAAiB;QAAK;QAC/G;YAAE,MAAM;YAAwB,OAAO;YAAuB,UAAU;YAAQ,iBAAiB;QAAK;QACtG;YAAE,MAAM;YAAwB,OAAO;YAAuB,UAAU;YAAQ,iBAAiB;QAAK;QACtG;YAAE,MAAM;YAA2B,OAAO;YAAwB,UAAU;YAAQ,iBAAiB;QAAK;QAC1G;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;KACD,CAAC;IAEF,MAAM,iBACJ,OAAgC,EAChC,QAA2B,EAC3B,SAAkC,EACZ;QACtB,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB;YAClB,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,CAAC,kCAAkC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACjE;QAEA,MAAM,WAAW,MAAM,MAAM,CAAC,qCAAqC,CAAC,EAAE;YACpE,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,QAAQ;YACnC;QACF;QAEA,MAAM,MAAO,MAAM,SAAS,IAAI;QAEhC,MAAM,OAAO,IAAI,IAAI,CAAC,MAAM,CAC1B,CAAC,QAAe,MAAM,MAAM,KAAK,WAAW,MAAM,MAAM,IAAI,MAAM,cAAc,GAAG;QAGrF,OAAO,KAAK,GAAG,CAAC,CAAC,IAAW,CAAC;gBAC3B,MAAM,EAAE,EAAE;gBACV,OAAO,GAAG,EAAE,EAAE,CAAC,WAAW,EAAE,EAAE,cAAc,GAAG,KAAK,KAAK,CAAC,EAAE,cAAc,GAAG,QAAQ,MAAM,MAAM,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;gBACtH,UAAU,IAAI,CAAC,IAAI;gBACnB,iBAAiB,EAAE,cAAc,IAAI;YACvC,CAAC;IACH;IAEA,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,SAAS,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;YAC1B,SAAS;YACT;QACF;QAEA,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 1037, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/huggingface.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\n\r\nexport default class HuggingFaceProvider extends BaseProvider {\r\n  name = 'HuggingFace';\r\n  getApiKeyLink = 'https://huggingface.co/settings/tokens';\r\n\r\n  config = {\r\n    apiTokenKey: 'HuggingFace_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    {\r\n      name: 'Qwen/Qwen2.5-Coder-32B-Instruct',\r\n      label: 'Qwen2.5-Coder-32B-Instruct (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: '01-ai/Yi-1.5-34B-Chat',\r\n      label: 'Yi-1.5-34B-Chat (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'codellama/CodeLlama-34b-Instruct-hf',\r\n      label: 'CodeLlama-34b-Instruct (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'NousResearch/Hermes-3-Llama-3.1-8B',\r\n      label: 'Hermes-3-Llama-3.1-8B (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'Qwen/Qwen2.5-Coder-32B-Instruct',\r\n      label: 'Qwen2.5-Coder-32B-Instruct (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'Qwen/Qwen2.5-72B-Instruct',\r\n      label: 'Qwen2.5-72B-Instruct (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'meta-llama/Llama-3.1-70B-Instruct',\r\n      label: 'Llama-3.1-70B-Instruct (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'meta-llama/Llama-3.1-405B',\r\n      label: 'Llama-3.1-405B (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: '01-ai/Yi-1.5-34B-Chat',\r\n      label: 'Yi-1.5-34B-Chat (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'codellama/CodeLlama-34b-Instruct-hf',\r\n      label: 'CodeLlama-34b-Instruct (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'NousResearch/Hermes-3-Llama-3.1-8B',\r\n      label: 'Hermes-3-Llama-3.1-8B (HuggingFace)',\r\n      provider: 'HuggingFace',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n  ];\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'HuggingFace_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const openai = createOpenAI({\r\n      baseURL: 'https://api-inference.huggingface.co/v1/',\r\n      apiKey,\r\n    });\r\n\r\n    return openai(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,4BAA4B,yIAAA,CAAA,eAAY;IAC3D,OAAO,cAAc;IACrB,gBAAgB,yCAAyC;IAEzD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;KACD,CAAC;IAEF,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,SAAS,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;YAC1B,SAAS;YACT;QACF;QAEA,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 1143, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/lmstudio.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { logger } from '~/utils/logger';\r\n\r\nexport default class LMStudioProvider extends BaseProvider {\r\n  name = 'LMStudio';\r\n  getApiKeyLink = 'https://lmstudio.ai/';\r\n  labelForGetApiKey = 'Get LMStudio';\r\n  icon = 'i-ph:cloud-arrow-down';\r\n\r\n  config = {\r\n    baseUrlKey: 'LMSTUDIO_API_BASE_URL',\r\n    baseUrl: 'http://localhost:1234/',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [];\r\n\r\n  async getDynamicModels(\r\n    apiKeys?: Record<string, string>,\r\n    settings?: IProviderSetting,\r\n    serverEnv: Record<string, string> = {},\r\n  ): Promise<ModelInfo[]> {\r\n    let { baseUrl } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: settings,\r\n      serverEnv,\r\n      defaultBaseUrlKey: 'LMSTUDIO_API_BASE_URL',\r\n      defaultApiTokenKey: '',\r\n    });\r\n\r\n    if (!baseUrl) {\r\n      throw new Error('No baseUrl found for LMStudio provider');\r\n    }\r\n\r\n    if (typeof window === 'undefined') {\r\n      /*\r\n       * Running in Server\r\n       * Backend: Check if we're running in Docker\r\n       */\r\n      const isDocker = process?.env?.RUNNING_IN_DOCKER === 'true' || serverEnv?.RUNNING_IN_DOCKER === 'true';\r\n\r\n      baseUrl = isDocker ? baseUrl.replace('localhost', 'host.docker.internal') : baseUrl;\r\n      baseUrl = isDocker ? baseUrl.replace('127.0.0.1', 'host.docker.internal') : baseUrl;\r\n    }\r\n\r\n    const response = await fetch(`${baseUrl}/v1/models`);\r\n    const data = (await response.json()) as { data: Array<{ id: string }> };\r\n\r\n    return data.data.map((model) => ({\r\n      name: model.id,\r\n      label: model.id,\r\n      provider: this.name,\r\n      maxTokenAllowed: 8000,\r\n    }));\r\n  }\r\n  getModelInstance: (options: {\r\n    model: string;\r\n    serverEnv?: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }) => LanguageModelV1 = (options) => {\r\n    const { apiKeys, providerSettings, serverEnv, model } = options;\r\n    let { baseUrl } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: 'LMSTUDIO_API_BASE_URL',\r\n      defaultApiTokenKey: '',\r\n    });\r\n\r\n    if (!baseUrl) {\r\n      throw new Error('No baseUrl found for LMStudio provider');\r\n    }\r\n\r\n    const isDocker = process.env.RUNNING_IN_DOCKER === 'true' || serverEnv?.RUNNING_IN_DOCKER === 'true';\r\n\r\n    if (typeof window === 'undefined') {\r\n      baseUrl = isDocker ? baseUrl.replace('localhost', 'host.docker.internal') : baseUrl;\r\n      baseUrl = isDocker ? baseUrl.replace('127.0.0.1', 'host.docker.internal') : baseUrl;\r\n    }\r\n\r\n    logger.debug('LMStudio Base Url used: ', baseUrl);\r\n\r\n    const lmstudio = createOpenAI({\r\n      baseURL: `${baseUrl}/v1`,\r\n      apiKey: '',\r\n    });\r\n\r\n    return lmstudio(model);\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAGA;AAEA;;;;AAEe,MAAM,yBAAyB,yIAAA,CAAA,eAAY;IACxD,OAAO,WAAW;IAClB,gBAAgB,uBAAuB;IACvC,oBAAoB,eAAe;IACnC,OAAO,wBAAwB;IAE/B,SAAS;QACP,YAAY;QACZ,SAAS;IACX,EAAE;IAEF,eAA4B,EAAE,CAAC;IAE/B,MAAM,iBACJ,OAAgC,EAChC,QAA2B,EAC3B,YAAoC,CAAC,CAAC,EAChB;QACtB,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC9C;YACA,kBAAkB;YAClB;YACA,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,SAAS;YACZ,MAAM,IAAI,MAAM;QAClB;QAEA,wCAAmC;YACjC;;;OAGC,GACD,MAAM,WAAW,SAAS,KAAK,sBAAsB,UAAU,WAAW,sBAAsB;YAEhG,UAAU,WAAW,QAAQ,OAAO,CAAC,aAAa,0BAA0B;YAC5E,UAAU,WAAW,QAAQ,OAAO,CAAC,aAAa,0BAA0B;QAC9E;QAEA,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,UAAU,CAAC;QACnD,MAAM,OAAQ,MAAM,SAAS,IAAI;QAEjC,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,QAAU,CAAC;gBAC/B,MAAM,MAAM,EAAE;gBACd,OAAO,MAAM,EAAE;gBACf,UAAU,IAAI,CAAC,IAAI;gBACnB,iBAAiB;YACnB,CAAC;IACH;IACA,mBAKwB,CAAC;QACvB,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG;QACxD,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC9C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,SAAS;YACZ,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,iBAAiB,KAAK,UAAU,WAAW,sBAAsB;QAE9F,wCAAmC;YACjC,UAAU,WAAW,QAAQ,OAAO,CAAC,aAAa,0BAA0B;YAC5E,UAAU,WAAW,QAAQ,OAAO,CAAC,aAAa,0BAA0B;QAC9E;QAEA,+GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,4BAA4B;QAEzC,MAAM,WAAW,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;YAC5B,SAAS,GAAG,QAAQ,GAAG,CAAC;YACxB,QAAQ;QACV;QAEA,OAAO,SAAS;IAClB,EAAE;AACJ","debugId":null}},
    {"offset": {"line": 1221, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/mistral.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createMistral } from '@ai-sdk/mistral';\r\n\r\nexport default class MistralProvider extends BaseProvider {\r\n  name = 'Mistral';\r\n  getApiKeyLink = 'https://console.mistral.ai/api-keys/';\r\n\r\n  config = {\r\n    apiTokenKey: 'MISTRAL_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    { name: 'open-mistral-7b', label: 'Mistral 7B', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n    { name: 'open-mixtral-8x7b', label: 'Mistral 8x7B', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n    { name: 'open-mixtral-8x22b', label: 'Mistral 8x22B', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n    { name: 'open-codestral-mamba', label: 'Codestral Mamba', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n    { name: 'open-mistral-nemo', label: 'Mistral Nemo', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n    { name: 'ministral-8b-latest', label: 'Mistral 8B', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n    { name: 'mistral-small-latest', label: 'Mistral Small', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n    { name: 'codestral-latest', label: 'Codestral', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n    { name: 'mistral-large-latest', label: 'Mistral Large Latest', provider: 'Mistral', maxTokenAllowed: 8000 },\r\n  ];\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'MISTRAL_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const mistral = createMistral({\r\n      apiKey,\r\n    });\r\n\r\n    return mistral(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,wBAAwB,yIAAA,CAAA,eAAY;IACvD,OAAO,UAAU;IACjB,gBAAgB,uCAAuC;IAEvD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YAAE,MAAM;YAAmB,OAAO;YAAc,UAAU;YAAW,iBAAiB;QAAK;QAC3F;YAAE,MAAM;YAAqB,OAAO;YAAgB,UAAU;YAAW,iBAAiB;QAAK;QAC/F;YAAE,MAAM;YAAsB,OAAO;YAAiB,UAAU;YAAW,iBAAiB;QAAK;QACjG;YAAE,MAAM;YAAwB,OAAO;YAAmB,UAAU;YAAW,iBAAiB;QAAK;QACrG;YAAE,MAAM;YAAqB,OAAO;YAAgB,UAAU;YAAW,iBAAiB;QAAK;QAC/F;YAAE,MAAM;YAAuB,OAAO;YAAc,UAAU;YAAW,iBAAiB;QAAK;QAC/F;YAAE,MAAM;YAAwB,OAAO;YAAiB,UAAU;YAAW,iBAAiB;QAAK;QACnG;YAAE,MAAM;YAAoB,OAAO;YAAa,UAAU;YAAW,iBAAiB;QAAK;QAC3F;YAAE,MAAM;YAAwB,OAAO;YAAwB,UAAU;YAAW,iBAAiB;QAAK;KAC3G,CAAC;IAEF,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,UAAU,CAAA,GAAA,gPAAA,CAAA,gBAAa,AAAD,EAAE;YAC5B;QACF;QAEA,OAAO,QAAQ;IACjB;AACF","debugId":null}},
    {"offset": {"line": 1314, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/ollama.ts"],"sourcesContent":["/**\r\n * Provider Ollama AI pour MyBoltVision\r\n * \r\n * Ce module permet l'intégration avec Ollama pour l'exécution de modèles LLM localement.\r\n */\r\n\r\nimport type { LLMProvider, ModelInfo, ProviderOptions, ChatMessage, LLMResponse } from '~/types/llm';\r\nimport { logger } from '~/utils/logger';\r\n\r\nexport class OllamaProvider implements LLMProvider {\r\n  id = 'ollama';\r\n  name = 'Ollama AI';\r\n  description = 'Exécution locale de modèles LLM via Ollama';\r\n  baseUrl: string;\r\n  apiKey?: string;\r\n  defaultModel: string;\r\n\r\n  constructor(options: ProviderOptions = {}) {\r\n    this.baseUrl = options.baseUrl || 'http://localhost:11434';\r\n    this.apiKey = options.apiKey; // Ollama ne nécessite généralement pas de clé API en local\r\n    this.defaultModel = options.defaultModel || 'llama2';\r\n  }\r\n\r\n  async listModels(): Promise<ModelInfo[]> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/api/tags`);\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur lors de la récupération des modèles: ${response.statusText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      return data.models.map((model: any) => ({\r\n        id: model.name,\r\n        name: model.name,\r\n        provider: this.id,\r\n        capabilities: ['chat', 'completion'],\r\n        contextLength: model.parameters?.context_length || 4096,\r\n        supportsFunctions: false,\r\n        supportsVision: false\r\n      }));\r\n    } catch (error) {\r\n      logger.error(`[OllamaProvider] Erreur lors de la récupération des modèles`, error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async chat(\r\n    messages: ChatMessage[],\r\n    model: string = this.defaultModel,\r\n    options: any = {}\r\n  ): Promise<LLMResponse> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/api/chat`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          model,\r\n          messages: messages.map(msg => ({\r\n            role: msg.role,\r\n            content: msg.content\r\n          })),\r\n          stream: false,\r\n          options: {\r\n            temperature: options.temperature || 0.7,\r\n            top_p: options.top_p || 0.9,\r\n            max_tokens: options.max_tokens || 1024\r\n          }\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur lors de l'appel à l'API Ollama: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      return {\r\n        id: `ollama-${Date.now()}`,\r\n        content: data.message.content,\r\n        model,\r\n        provider: this.id,\r\n        usage: {\r\n          promptTokens: -1, // Ollama ne fournit pas cette métrique\r\n          completionTokens: -1,\r\n          totalTokens: -1\r\n        }\r\n      };\r\n    } catch (error) {\r\n      logger.error(`[OllamaProvider] Erreur lors de l'appel au modèle`, error);\r\n      throw new Error(`Erreur lors de l'appel au modèle Ollama: ${error instanceof Error ? error.message : 'Erreur inconnue'}`);\r\n    }\r\n  }\r\n\r\n  async completion(\r\n    prompt: string,\r\n    model: string = this.defaultModel,\r\n    options: any = {}\r\n  ): Promise<LLMResponse> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/api/generate`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          model,\r\n          prompt,\r\n          stream: false,\r\n          options: {\r\n            temperature: options.temperature || 0.7,\r\n            top_p: options.top_p || 0.9,\r\n            max_tokens: options.max_tokens || 1024\r\n          }\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur lors de l'appel à l'API Ollama: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      return {\r\n        id: `ollama-${Date.now()}`,\r\n        content: data.response,\r\n        model,\r\n        provider: this.id,\r\n        usage: {\r\n          promptTokens: -1,\r\n          completionTokens: -1,\r\n          totalTokens: -1\r\n        }\r\n      };\r\n    } catch (error) {\r\n      logger.error(`[OllamaProvider] Erreur lors de l'appel au modèle`, error);\r\n      throw new Error(`Erreur lors de l'appel au modèle Ollama: ${error instanceof Error ? error.message : 'Erreur inconnue'}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport default OllamaProvider;\r\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AAGD;;AAEO,MAAM;IACX,KAAK,SAAS;IACd,OAAO,YAAY;IACnB,cAAc,6CAA6C;IAC3D,QAAgB;IAChB,OAAgB;IAChB,aAAqB;IAErB,YAAY,UAA2B,CAAC,CAAC,CAAE;QACzC,IAAI,CAAC,OAAO,GAAG,QAAQ,OAAO,IAAI;QAClC,IAAI,CAAC,MAAM,GAAG,QAAQ,MAAM,EAAE,2DAA2D;QACzF,IAAI,CAAC,YAAY,GAAG,QAAQ,YAAY,IAAI;IAC9C;IAEA,MAAM,aAAmC;QACvC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACvD,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,4CAA4C,EAAE,SAAS,UAAU,EAAE;YACtF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,OAAO,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,QAAe,CAAC;oBACtC,IAAI,MAAM,IAAI;oBACd,MAAM,MAAM,IAAI;oBAChB,UAAU,IAAI,CAAC,EAAE;oBACjB,cAAc;wBAAC;wBAAQ;qBAAa;oBACpC,eAAe,MAAM,UAAU,EAAE,kBAAkB;oBACnD,mBAAmB;oBACnB,gBAAgB;gBAClB,CAAC;QACH,EAAE,OAAO,OAAO;YACd,+GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,CAAC,2DAA2D,CAAC,EAAE;YAC5E,OAAO,EAAE;QACX;IACF;IAEA,MAAM,KACJ,QAAuB,EACvB,QAAgB,IAAI,CAAC,YAAY,EACjC,UAAe,CAAC,CAAC,EACK;QACtB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBACvD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA,UAAU,SAAS,GAAG,CAAC,CAAA,MAAO,CAAC;4BAC7B,MAAM,IAAI,IAAI;4BACd,SAAS,IAAI,OAAO;wBACtB,CAAC;oBACD,QAAQ;oBACR,SAAS;wBACP,aAAa,QAAQ,WAAW,IAAI;wBACpC,OAAO,QAAQ,KAAK,IAAI;wBACxB,YAAY,QAAQ,UAAU,IAAI;oBACpC;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,uCAAuC,EAAE,SAAS,UAAU,EAAE;YACjF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,OAAO;gBACL,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,IAAI;gBAC1B,SAAS,KAAK,OAAO,CAAC,OAAO;gBAC7B;gBACA,UAAU,IAAI,CAAC,EAAE;gBACjB,OAAO;oBACL,cAAc,CAAC;oBACf,kBAAkB,CAAC;oBACnB,aAAa,CAAC;gBAChB;YACF;QACF,EAAE,OAAO,OAAO;YACd,+GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,CAAC,iDAAiD,CAAC,EAAE;YAClE,MAAM,IAAI,MAAM,CAAC,yCAAyC,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,mBAAmB;QAC1H;IACF;IAEA,MAAM,WACJ,MAAc,EACd,QAAgB,IAAI,CAAC,YAAY,EACjC,UAAe,CAAC,CAAC,EACK;QACtB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;gBAC3D,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;oBACA,QAAQ;oBACR,SAAS;wBACP,aAAa,QAAQ,WAAW,IAAI;wBACpC,OAAO,QAAQ,KAAK,IAAI;wBACxB,YAAY,QAAQ,UAAU,IAAI;oBACpC;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,uCAAuC,EAAE,SAAS,UAAU,EAAE;YACjF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,OAAO;gBACL,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,IAAI;gBAC1B,SAAS,KAAK,QAAQ;gBACtB;gBACA,UAAU,IAAI,CAAC,EAAE;gBACjB,OAAO;oBACL,cAAc,CAAC;oBACf,kBAAkB,CAAC;oBACnB,aAAa,CAAC;gBAChB;YACF;QACF,EAAE,OAAO,OAAO;YACd,+GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,CAAC,iDAAiD,CAAC,EAAE;YAClE,MAAM,IAAI,MAAM,CAAC,yCAAyC,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,mBAAmB;QAC1H;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 1447, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/open-router.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createOpenRouter } from '@openrouter/ai-sdk-provider';\r\n\r\ninterface OpenRouterModel {\r\n  name: string;\r\n  id: string;\r\n  context_length: number;\r\n  pricing: {\r\n    prompt: number;\r\n    completion: number;\r\n  };\r\n}\r\n\r\ninterface OpenRouterModelsResponse {\r\n  data: OpenRouterModel[];\r\n}\r\n\r\nexport default class OpenRouterProvider extends BaseProvider {\r\n  name = 'OpenRouter';\r\n  getApiKeyLink = 'https://openrouter.ai/settings/keys';\r\n\r\n  config = {\r\n    apiTokenKey: 'OPEN_ROUTER_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    {\r\n      name: 'anthropic/claude-3.5-sonnet',\r\n      label: 'Anthropic: Claude 3.5 Sonnet (OpenRouter)',\r\n      provider: 'OpenRouter',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'anthropic/claude-3-haiku',\r\n      label: 'Anthropic: Claude 3 Haiku (OpenRouter)',\r\n      provider: 'OpenRouter',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'deepseek/deepseek-coder',\r\n      label: 'Deepseek-Coder V2 236B (OpenRouter)',\r\n      provider: 'OpenRouter',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'google/gemini-flash-1.5',\r\n      label: 'Google Gemini Flash 1.5 (OpenRouter)',\r\n      provider: 'OpenRouter',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'google/gemini-pro-1.5',\r\n      label: 'Google Gemini Pro 1.5 (OpenRouter)',\r\n      provider: 'OpenRouter',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    { name: 'x-ai/grok-beta', label: 'xAI Grok Beta (OpenRouter)', provider: 'OpenRouter', maxTokenAllowed: 8000 },\r\n    {\r\n      name: 'mistralai/mistral-nemo',\r\n      label: 'OpenRouter Mistral Nemo (OpenRouter)',\r\n      provider: 'OpenRouter',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'qwen/qwen-110b-chat',\r\n      label: 'OpenRouter Qwen 110b Chat (OpenRouter)',\r\n      provider: 'OpenRouter',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    { name: 'cohere/command', label: 'Cohere Command (OpenRouter)', provider: 'OpenRouter', maxTokenAllowed: 4096 },\r\n  ];\r\n\r\n  async getDynamicModels(\r\n    _apiKeys?: Record<string, string>,\r\n    _settings?: IProviderSetting,\r\n    _serverEnv: Record<string, string> = {},\r\n  ): Promise<ModelInfo[]> {\r\n    try {\r\n      const response = await fetch('https://openrouter.ai/api/v1/models', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const data = (await response.json()) as OpenRouterModelsResponse;\r\n\r\n      return data.data\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((m) => ({\r\n          name: m.id,\r\n          label: `${m.name} - in:$${(m.pricing.prompt * 1_000_000).toFixed(2)} out:$${(m.pricing.completion * 1_000_000).toFixed(2)} - context ${Math.floor(m.context_length / 1000)}k`,\r\n          provider: this.name,\r\n          maxTokenAllowed: 8000,\r\n        }));\r\n    } catch (error) {\r\n      console.error('Error getting OpenRouter models:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'OPEN_ROUTER_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const openRouter = createOpenRouter({\r\n      apiKey,\r\n    });\r\n    const instance = openRouter.chat(model) as LanguageModelV1;\r\n\r\n    return instance;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAgBe,MAAM,2BAA2B,yIAAA,CAAA,eAAY;IAC1D,OAAO,aAAa;IACpB,gBAAgB,sCAAsC;IAEtD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YAAE,MAAM;YAAkB,OAAO;YAA8B,UAAU;YAAc,iBAAiB;QAAK;QAC7G;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YAAE,MAAM;YAAkB,OAAO;YAA+B,UAAU;YAAc,iBAAiB;QAAK;KAC/G,CAAC;IAEF,MAAM,iBACJ,QAAiC,EACjC,SAA4B,EAC5B,aAAqC,CAAC,CAAC,EACjB;QACtB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,uCAAuC;gBAClE,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,MAAM,OAAQ,MAAM,SAAS,IAAI;YAEjC,OAAO,KAAK,IAAI,CACb,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,GAC1C,GAAG,CAAC,CAAC,IAAM,CAAC;oBACX,MAAM,EAAE,EAAE;oBACV,OAAO,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,SAAS,EAAE,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,UAAU,GAAG,SAAS,EAAE,OAAO,CAAC,GAAG,WAAW,EAAE,KAAK,KAAK,CAAC,EAAE,cAAc,GAAG,MAAM,CAAC,CAAC;oBAC7K,UAAU,IAAI,CAAC,IAAI;oBACnB,iBAAiB;gBACnB,CAAC;QACL,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oCAAoC;YAClD,OAAO,EAAE;QACX;IACF;IAEA,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,aAAa,CAAA,GAAA,6QAAA,CAAA,mBAAgB,AAAD,EAAE;YAClC;QACF;QACA,MAAM,WAAW,WAAW,IAAI,CAAC;QAEjC,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 1560, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/openai-like.ts"],"sourcesContent":["import { BaseProvider, getOpenAILikeModel } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\n\r\nexport default class OpenAILikeProvider extends BaseProvider {\r\n  name = 'OpenAILike';\r\n  getApiKeyLink = undefined;\r\n\r\n  config = {\r\n    baseUrlKey: 'OPENAI_LIKE_API_BASE_URL',\r\n    apiTokenKey: 'OPENAI_LIKE_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [];\r\n\r\n  async getDynamicModels(\r\n    apiKeys?: Record<string, string>,\r\n    settings?: IProviderSetting,\r\n    serverEnv: Record<string, string> = {},\r\n  ): Promise<ModelInfo[]> {\r\n    const { baseUrl, apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: settings,\r\n      serverEnv,\r\n      defaultBaseUrlKey: 'OPENAI_LIKE_API_BASE_URL',\r\n      defaultApiTokenKey: 'OPENAI_LIKE_API_KEY',\r\n    });\r\n\r\n    if (!baseUrl || !apiKey) {\r\n      return [];\r\n    }\r\n\r\n    const response = await fetch(`${baseUrl}/models`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`,\r\n      },\r\n    });\r\n\r\n    const res = (await response.json()) as any;\r\n\r\n    return res.data.map((model: any) => ({\r\n      name: model.id,\r\n      label: model.id,\r\n      provider: this.name,\r\n      maxTokenAllowed: 8000,\r\n    }));\r\n  }\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { baseUrl, apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: 'OPENAI_LIKE_API_BASE_URL',\r\n      defaultApiTokenKey: 'OPENAI_LIKE_API_KEY',\r\n    });\r\n\r\n    if (!baseUrl || !apiKey) {\r\n      throw new Error(`Missing configuration for ${this.name} provider`);\r\n    }\r\n\r\n    return getOpenAILikeModel(baseUrl, apiKey, model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAKe,MAAM,2BAA2B,yIAAA,CAAA,eAAY;IAC1D,OAAO,aAAa;IACpB,gBAAgB,UAAU;IAE1B,SAAS;QACP,YAAY;QACZ,aAAa;IACf,EAAE;IAEF,eAA4B,EAAE,CAAC;IAE/B,MAAM,iBACJ,OAAgC,EAChC,QAA2B,EAC3B,YAAoC,CAAC,CAAC,EAChB;QACtB,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YACxD;YACA,kBAAkB;YAClB;YACA,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,WAAW,CAAC,QAAQ;YACvB,OAAO,EAAE;QACX;QAEA,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE;YAChD,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,QAAQ;YACnC;QACF;QAEA,MAAM,MAAO,MAAM,SAAS,IAAI;QAEhC,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,QAAe,CAAC;gBACnC,MAAM,MAAM,EAAE;gBACd,OAAO,MAAM,EAAE;gBACf,UAAU,IAAI,CAAC,IAAI;gBACnB,iBAAiB;YACnB,CAAC;IACH;IAEA,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YACxD;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,WAAW,CAAC,QAAQ;YACvB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACnE;QAEA,OAAO,CAAA,GAAA,yIAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS,QAAQ;IAC7C;AACF","debugId":null}},
    {"offset": {"line": 1618, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/openai.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\n\r\nexport default class OpenAIProvider extends BaseProvider {\r\n  name = 'OpenAI';\r\n  getApiKeyLink = 'https://platform.openai.com/api-keys';\r\n\r\n  config = {\r\n    apiTokenKey: 'OPENAI_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    { name: 'gpt-4o', label: 'GPT-4o', provider: 'OpenAI', maxTokenAllowed: 8000 },\r\n    { name: 'gpt-4o-mini', label: 'GPT-4o Mini', provider: 'OpenAI', maxTokenAllowed: 8000 },\r\n    { name: 'gpt-4-turbo', label: 'GPT-4 Turbo', provider: 'OpenAI', maxTokenAllowed: 8000 },\r\n    { name: 'gpt-4', label: 'GPT-4', provider: 'OpenAI', maxTokenAllowed: 8000 },\r\n    { name: 'gpt-3.5-turbo', label: 'GPT-3.5 Turbo', provider: 'OpenAI', maxTokenAllowed: 8000 },\r\n  ];\r\n\r\n  async getDynamicModels(\r\n    apiKeys?: Record<string, string>,\r\n    settings?: IProviderSetting,\r\n    serverEnv?: Record<string, string>,\r\n  ): Promise<ModelInfo[]> {\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: settings,\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'OPENAI_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw `Missing Api Key configuration for ${this.name} provider`;\r\n    }\r\n\r\n    const response = await fetch(`https://api.openai.com/v1/models`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`,\r\n      },\r\n    });\r\n\r\n    const res = (await response.json()) as any;\r\n    const staticModelIds = this.staticModels.map((m) => m.name);\r\n\r\n    const data = res.data.filter(\r\n      (model: any) =>\r\n        model.object === 'model' &&\r\n        (model.id.startsWith('gpt-') || model.id.startsWith('o') || model.id.startsWith('chatgpt-')) &&\r\n        !staticModelIds.includes(model.id),\r\n    );\r\n\r\n    return data.map((m: any) => ({\r\n      name: m.id,\r\n      label: `${m.id}`,\r\n      provider: this.name,\r\n      maxTokenAllowed: m.context_window || 32000,\r\n    }));\r\n  }\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'OPENAI_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const openai = createOpenAI({\r\n      apiKey,\r\n    });\r\n\r\n    return openai(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,uBAAuB,yIAAA,CAAA,eAAY;IACtD,OAAO,SAAS;IAChB,gBAAgB,uCAAuC;IAEvD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YAAE,MAAM;YAAU,OAAO;YAAU,UAAU;YAAU,iBAAiB;QAAK;QAC7E;YAAE,MAAM;YAAe,OAAO;YAAe,UAAU;YAAU,iBAAiB;QAAK;QACvF;YAAE,MAAM;YAAe,OAAO;YAAe,UAAU;YAAU,iBAAiB;QAAK;QACvF;YAAE,MAAM;YAAS,OAAO;YAAS,UAAU;YAAU,iBAAiB;QAAK;QAC3E;YAAE,MAAM;YAAiB,OAAO;YAAiB,UAAU;YAAU,iBAAiB;QAAK;KAC5F,CAAC;IAEF,MAAM,iBACJ,OAAgC,EAChC,QAA2B,EAC3B,SAAkC,EACZ;QACtB,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB;YAClB,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,CAAC,kCAAkC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACjE;QAEA,MAAM,WAAW,MAAM,MAAM,CAAC,gCAAgC,CAAC,EAAE;YAC/D,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,QAAQ;YACnC;QACF;QAEA,MAAM,MAAO,MAAM,SAAS,IAAI;QAChC,MAAM,iBAAiB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;QAE1D,MAAM,OAAO,IAAI,IAAI,CAAC,MAAM,CAC1B,CAAC,QACC,MAAM,MAAM,KAAK,WACjB,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,WAAW,MAAM,EAAE,CAAC,UAAU,CAAC,QAAQ,MAAM,EAAE,CAAC,UAAU,CAAC,WAAW,KAC3F,CAAC,eAAe,QAAQ,CAAC,MAAM,EAAE;QAGrC,OAAO,KAAK,GAAG,CAAC,CAAC,IAAW,CAAC;gBAC3B,MAAM,EAAE,EAAE;gBACV,OAAO,GAAG,EAAE,EAAE,EAAE;gBAChB,UAAU,IAAI,CAAC,IAAI;gBACnB,iBAAiB,EAAE,cAAc,IAAI;YACvC,CAAC;IACH;IAEA,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,SAAS,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;YAC1B;QACF;QAEA,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 1713, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/perplexity.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\n\r\nexport default class PerplexityProvider extends BaseProvider {\r\n  name = 'Perplexity';\r\n  getApiKeyLink = 'https://www.perplexity.ai/settings/api';\r\n\r\n  config = {\r\n    apiTokenKey: 'PERPLEXITY_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    {\r\n      name: 'llama-3.1-sonar-small-128k-online',\r\n      label: 'Sonar Small Online',\r\n      provider: 'Perplexity',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n    {\r\n      name: 'llama-3.1-sonar-large-128k-online',\r\n      label: 'Sonar Large Online',\r\n      provider: 'Perplexity',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n    {\r\n      name: 'llama-3.1-sonar-huge-128k-online',\r\n      label: 'Sonar Huge Online',\r\n      provider: 'Perplexity',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n  ];\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'PERPLEXITY_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const perplexity = createOpenAI({\r\n      baseURL: 'https://api.perplexity.ai/',\r\n      apiKey,\r\n    });\r\n\r\n    return perplexity(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,2BAA2B,yIAAA,CAAA,eAAY;IAC1D,OAAO,aAAa;IACpB,gBAAgB,yCAAyC;IAEzD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;KACD,CAAC;IAEF,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,aAAa,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;YAC9B,SAAS;YACT;QACF;QAEA,OAAO,WAAW;IACpB;AACF","debugId":null}},
    {"offset": {"line": 1771, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/together.ts"],"sourcesContent":["import { BaseProvider, getOpenAILikeModel } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\n\r\nexport default class TogetherProvider extends BaseProvider {\r\n  name = 'Together';\r\n  getApiKeyLink = 'https://api.together.xyz/settings/api-keys';\r\n\r\n  config = {\r\n    baseUrlKey: 'TOGETHER_API_BASE_URL',\r\n    apiTokenKey: 'TOGETHER_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    {\r\n      name: 'Qwen/Qwen2.5-Coder-32B-Instruct',\r\n      label: 'Qwen/Qwen2.5-Coder-32B-Instruct',\r\n      provider: 'Together',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'meta-llama/Llama-3.2-90B-Vision-Instruct-Turbo',\r\n      label: 'meta-llama/Llama-3.2-90B-Vision-Instruct-Turbo',\r\n      provider: 'Together',\r\n      maxTokenAllowed: 8000,\r\n    },\r\n    {\r\n      name: 'mistralai/Mixtral-8x7B-Instruct-v0.1',\r\n      label: 'Mixtral 8x7B Instruct',\r\n      provider: 'Together',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n  ];\r\n\r\n  async getDynamicModels(\r\n    apiKeys?: Record<string, string>,\r\n    settings?: IProviderSetting,\r\n    serverEnv: Record<string, string> = {},\r\n  ): Promise<ModelInfo[]> {\r\n    const { baseUrl: fetchBaseUrl, apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: settings,\r\n      serverEnv,\r\n      defaultBaseUrlKey: 'TOGETHER_API_BASE_URL',\r\n      defaultApiTokenKey: 'TOGETHER_API_KEY',\r\n    });\r\n    const baseUrl = fetchBaseUrl || 'https://api.together.xyz/v1';\r\n\r\n    if (!baseUrl || !apiKey) {\r\n      return [];\r\n    }\r\n\r\n    // console.log({ baseUrl, apiKey });\r\n\r\n    const response = await fetch(`${baseUrl}/models`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`,\r\n      },\r\n    });\r\n\r\n    const res = (await response.json()) as any;\r\n    const data = (res || []).filter((model: any) => model.type === 'chat');\r\n\r\n    return data.map((m: any) => ({\r\n      name: m.id,\r\n      label: `${m.display_name} - in:$${m.pricing.input.toFixed(2)} out:$${m.pricing.output.toFixed(2)} - context ${Math.floor(m.context_length / 1000)}k`,\r\n      provider: this.name,\r\n      maxTokenAllowed: 8000,\r\n    }));\r\n  }\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { baseUrl, apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: 'TOGETHER_API_BASE_URL',\r\n      defaultApiTokenKey: 'TOGETHER_API_KEY',\r\n    });\r\n\r\n    if (!baseUrl || !apiKey) {\r\n      throw new Error(`Missing configuration for ${this.name} provider`);\r\n    }\r\n\r\n    return getOpenAILikeModel(baseUrl, apiKey, model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAKe,MAAM,yBAAyB,yIAAA,CAAA,eAAY;IACxD,OAAO,WAAW;IAClB,gBAAgB,6CAA6C;IAE7D,SAAS;QACP,YAAY;QACZ,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;KACD,CAAC;IAEF,MAAM,iBACJ,OAAgC,EAChC,QAA2B,EAC3B,YAAoC,CAAC,CAAC,EAChB;QACtB,MAAM,EAAE,SAAS,YAAY,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YACtE;YACA,kBAAkB;YAClB;YACA,mBAAmB;YACnB,oBAAoB;QACtB;QACA,MAAM,UAAU,gBAAgB;QAEhC,IAAI,CAAC,WAAW,CAAC,QAAQ;YACvB,OAAO,EAAE;QACX;QAEA,oCAAoC;QAEpC,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE;YAChD,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,QAAQ;YACnC;QACF;QAEA,MAAM,MAAO,MAAM,SAAS,IAAI;QAChC,MAAM,OAAO,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC,QAAe,MAAM,IAAI,KAAK;QAE/D,OAAO,KAAK,GAAG,CAAC,CAAC,IAAW,CAAC;gBAC3B,MAAM,EAAE,EAAE;gBACV,OAAO,GAAG,EAAE,YAAY,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,WAAW,EAAE,KAAK,KAAK,CAAC,EAAE,cAAc,GAAG,MAAM,CAAC,CAAC;gBACpJ,UAAU,IAAI,CAAC,IAAI;gBACnB,iBAAiB;YACnB,CAAC;IACH;IAEA,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YACxD;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,WAAW,CAAC,QAAQ;YACvB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACnE;QAEA,OAAO,CAAA,GAAA,yIAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS,QAAQ;IAC7C;AACF","debugId":null}},
    {"offset": {"line": 1851, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/xai.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\n\r\nexport default class XAIProvider extends BaseProvider {\r\n  name = 'xAI';\r\n  getApiKeyLink = 'https://docs.x.ai/docs/quickstart#creating-an-api-key';\r\n\r\n  config = {\r\n    apiTokenKey: 'XAI_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    { name: 'grok-beta', label: 'xAI Grok Beta', provider: 'xAI', maxTokenAllowed: 8000 },\r\n    { name: 'grok-2-1212', label: 'xAI Grok2 1212', provider: 'xAI', maxTokenAllowed: 8000 },\r\n  ];\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'XAI_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const openai = createOpenAI({\r\n      baseURL: 'https://api.x.ai/v1',\r\n      apiKey,\r\n    });\r\n\r\n    return openai(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,oBAAoB,yIAAA,CAAA,eAAY;IACnD,OAAO,MAAM;IACb,gBAAgB,wDAAwD;IAExE,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YAAE,MAAM;YAAa,OAAO;YAAiB,UAAU;YAAO,iBAAiB;QAAK;QACpF;YAAE,MAAM;YAAe,OAAO;YAAkB,UAAU;YAAO,iBAAiB;QAAK;KACxF,CAAC;IAEF,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,SAAS,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;YAC1B,SAAS;YACT;QACF;QAEA,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 1903, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/hyperbolic.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\n\r\nexport default class HyperbolicProvider extends BaseProvider {\r\n  name = 'Hyperbolic';\r\n  getApiKeyLink = 'https://app.hyperbolic.xyz/settings';\r\n\r\n  config = {\r\n    apiTokenKey: 'HYPERBOLIC_API_KEY',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    {\r\n      name: 'Qwen/Qwen2.5-Coder-32B-Instruct',\r\n      label: 'Qwen 2.5 Coder 32B Instruct',\r\n      provider: 'Hyperbolic',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n    {\r\n      name: 'Qwen/Qwen2.5-72B-Instruct',\r\n      label: 'Qwen2.5-72B-Instruct',\r\n      provider: 'Hyperbolic',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n    {\r\n      name: 'deepseek-ai/DeepSeek-V2.5',\r\n      label: 'DeepSeek-V2.5',\r\n      provider: 'Hyperbolic',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n    {\r\n      name: 'Qwen/QwQ-32B-Preview',\r\n      label: 'QwQ-32B-Preview',\r\n      provider: 'Hyperbolic',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n    {\r\n      name: 'Qwen/Qwen2-VL-72B-Instruct',\r\n      label: 'Qwen2-VL-72B-Instruct',\r\n      provider: 'Hyperbolic',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n  ];\r\n\r\n  async getDynamicModels(\r\n    apiKeys?: Record<string, string>,\r\n    settings?: IProviderSetting,\r\n    serverEnv: Record<string, string> = {},\r\n  ): Promise<ModelInfo[]> {\r\n    const { baseUrl: fetchBaseUrl, apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: settings,\r\n      serverEnv,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'HYPERBOLIC_API_KEY',\r\n    });\r\n    const baseUrl = fetchBaseUrl || 'https://api.hyperbolic.xyz/v1';\r\n\r\n    if (!apiKey) {\r\n      throw `Missing Api Key configuration for ${this.name} provider`;\r\n    }\r\n\r\n    const response = await fetch(`${baseUrl}/models`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`,\r\n      },\r\n    });\r\n\r\n    const res = (await response.json()) as any;\r\n\r\n    const data = res.data.filter((model: any) => model.object === 'model' && model.supports_chat);\r\n\r\n    return data.map((m: any) => ({\r\n      name: m.id,\r\n      label: `${m.id} - context ${m.context_length ? Math.floor(m.context_length / 1000) + 'k' : 'N/A'}`,\r\n      provider: this.name,\r\n      maxTokenAllowed: m.context_length || 8000,\r\n    }));\r\n  }\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'HYPERBOLIC_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw `Missing Api Key configuration for ${this.name} provider`;\r\n    }\r\n\r\n    const openai = createOpenAI({\r\n      baseURL: 'https://api.hyperbolic.xyz/v1/',\r\n      apiKey,\r\n    });\r\n\r\n    return openai(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,2BAA2B,yIAAA,CAAA,eAAY;IAC1D,OAAO,aAAa;IACpB,gBAAgB,sCAAsC;IAEtD,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;KACD,CAAC;IAEF,MAAM,iBACJ,OAAgC,EAChC,QAA2B,EAC3B,YAAoC,CAAC,CAAC,EAChB;QACtB,MAAM,EAAE,SAAS,YAAY,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YACtE;YACA,kBAAkB;YAClB;YACA,mBAAmB;YACnB,oBAAoB;QACtB;QACA,MAAM,UAAU,gBAAgB;QAEhC,IAAI,CAAC,QAAQ;YACX,MAAM,CAAC,kCAAkC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACjE;QAEA,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE;YAChD,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,QAAQ;YACnC;QACF;QAEA,MAAM,MAAO,MAAM,SAAS,IAAI;QAEhC,MAAM,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,QAAe,MAAM,MAAM,KAAK,WAAW,MAAM,aAAa;QAE5F,OAAO,KAAK,GAAG,CAAC,CAAC,IAAW,CAAC;gBAC3B,MAAM,EAAE,EAAE;gBACV,OAAO,GAAG,EAAE,EAAE,CAAC,WAAW,EAAE,EAAE,cAAc,GAAG,KAAK,KAAK,CAAC,EAAE,cAAc,GAAG,QAAQ,MAAM,OAAO;gBAClG,UAAU,IAAI,CAAC,IAAI;gBACnB,iBAAiB,EAAE,cAAc,IAAI;YACvC,CAAC;IACH;IAEA,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,CAAC,kCAAkC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACjE;QAEA,MAAM,SAAS,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;YAC1B,SAAS;YACT;QACF;QAEA,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 2007, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/amazon-bedrock.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport { createAmazonBedrock } from '@ai-sdk/amazon-bedrock';\r\n\r\ninterface AWSBedRockConfig {\r\n  region: string;\r\n  accessKeyId: string;\r\n  secretAccessKey: string;\r\n  sessionToken?: string;\r\n}\r\n\r\nexport default class AmazonBedrockProvider extends BaseProvider {\r\n  name = 'AmazonBedrock';\r\n  getApiKeyLink = 'https://console.aws.amazon.com/iam/home';\r\n\r\n  config = {\r\n    apiTokenKey: 'AWS_BEDROCK_CONFIG',\r\n  };\r\n\r\n  staticModels: ModelInfo[] = [\r\n    {\r\n      name: 'anthropic.claude-3-5-sonnet-20241022-v2:0',\r\n      label: 'Claude 3.5 Sonnet v2 (Bedrock)',\r\n      provider: 'AmazonBedrock',\r\n      maxTokenAllowed: 200000,\r\n    },\r\n    {\r\n      name: 'anthropic.claude-3-5-sonnet-20240620-v1:0',\r\n      label: 'Claude 3.5 Sonnet (Bedrock)',\r\n      provider: 'AmazonBedrock',\r\n      maxTokenAllowed: 4096,\r\n    },\r\n    {\r\n      name: 'anthropic.claude-3-sonnet-20240229-v1:0',\r\n      label: 'Claude 3 Sonnet (Bedrock)',\r\n      provider: 'AmazonBedrock',\r\n      maxTokenAllowed: 4096,\r\n    },\r\n    {\r\n      name: 'anthropic.claude-3-haiku-20240307-v1:0',\r\n      label: 'Claude 3 Haiku (Bedrock)',\r\n      provider: 'AmazonBedrock',\r\n      maxTokenAllowed: 4096,\r\n    },\r\n    {\r\n      name: 'amazon.nova-pro-v1:0',\r\n      label: 'Amazon Nova Pro (Bedrock)',\r\n      provider: 'AmazonBedrock',\r\n      maxTokenAllowed: 5120,\r\n    },\r\n    {\r\n      name: 'amazon.nova-lite-v1:0',\r\n      label: 'Amazon Nova Lite (Bedrock)',\r\n      provider: 'AmazonBedrock',\r\n      maxTokenAllowed: 5120,\r\n    },\r\n    {\r\n      name: 'mistral.mistral-large-2402-v1:0',\r\n      label: 'Mistral Large 24.02 (Bedrock)',\r\n      provider: 'AmazonBedrock',\r\n      maxTokenAllowed: 8192,\r\n    },\r\n  ];\r\n\r\n  private _parseAndValidateConfig(apiKey: string): AWSBedRockConfig {\r\n    let parsedConfig: AWSBedRockConfig;\r\n\r\n    try {\r\n      parsedConfig = JSON.parse(apiKey);\r\n    } catch {\r\n      throw new Error(\r\n        'Invalid AWS Bedrock configuration format. Please provide a valid JSON string containing region, accessKeyId, and secretAccessKey.',\r\n      );\r\n    }\r\n\r\n    const { region, accessKeyId, secretAccessKey, sessionToken } = parsedConfig;\r\n\r\n    if (!region || !accessKeyId || !secretAccessKey) {\r\n      throw new Error(\r\n        'Missing required AWS credentials. Configuration must include region, accessKeyId, and secretAccessKey.',\r\n      );\r\n    }\r\n\r\n    return {\r\n      region,\r\n      accessKeyId,\r\n      secretAccessKey,\r\n      ...(sessionToken && { sessionToken }),\r\n    };\r\n  }\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: any;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'AWS_BEDROCK_CONFIG',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const config = this._parseAndValidateConfig(apiKey);\r\n    const bedrock = createAmazonBedrock(config);\r\n\r\n    return bedrock(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AASe,MAAM,8BAA8B,yIAAA,CAAA,eAAY;IAC7D,OAAO,gBAAgB;IACvB,gBAAgB,0CAA0C;IAE1D,SAAS;QACP,aAAa;IACf,EAAE;IAEF,eAA4B;QAC1B;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU;YACV,iBAAiB;QACnB;KACD,CAAC;IAEM,wBAAwB,MAAc,EAAoB;QAChE,IAAI;QAEJ,IAAI;YACF,eAAe,KAAK,KAAK,CAAC;QAC5B,EAAE,OAAM;YACN,MAAM,IAAI,MACR;QAEJ;QAEA,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG;QAE/D,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,iBAAiB;YAC/C,MAAM,IAAI,MACR;QAEJ;QAEA,OAAO;YACL;YACA;YACA;YACA,GAAI,gBAAgB;gBAAE;YAAa,CAAC;QACtC;IACF;IAEA,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,SAAS,IAAI,CAAC,uBAAuB,CAAC;QAC5C,MAAM,UAAU,CAAA,GAAA,mQAAA,CAAA,sBAAmB,AAAD,EAAE;QAEpC,OAAO,QAAQ;IACjB;AACF","debugId":null}},
    {"offset": {"line": 2107, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/providers/github.ts"],"sourcesContent":["import { BaseProvider } from '~/lib/modules/llm/base-provider';\r\nimport type { ModelInfo } from '~/lib/modules/llm/types';\r\nimport type { IProviderSetting } from '~/types/model';\r\nimport type { LanguageModelV1 } from 'ai';\r\nimport { createOpenAI } from '@ai-sdk/openai';\r\n\r\nexport default class GithubProvider extends BaseProvider {\r\n  name = 'Github';\r\n  getApiKeyLink = 'https://github.com/settings/personal-access-tokens';\r\n\r\n  config = {\r\n    apiTokenKey: 'GITHUB_API_KEY',\r\n  };\r\n\r\n  // find more in https://github.com/marketplace?type=models\r\n  staticModels: ModelInfo[] = [\r\n    { name: 'gpt-4o', label: 'GPT-4o', provider: 'Github', maxTokenAllowed: 8000 },\r\n    { name: 'o1', label: 'o1-preview', provider: 'Github', maxTokenAllowed: 100000 },\r\n    { name: 'o1-mini', label: 'o1-mini', provider: 'Github', maxTokenAllowed: 8000 },\r\n    { name: 'gpt-4o-mini', label: 'GPT-4o Mini', provider: 'Github', maxTokenAllowed: 8000 },\r\n    { name: 'gpt-4-turbo', label: 'GPT-4 Turbo', provider: 'Github', maxTokenAllowed: 8000 },\r\n    { name: 'gpt-4', label: 'GPT-4', provider: 'Github', maxTokenAllowed: 8000 },\r\n    { name: 'gpt-3.5-turbo', label: 'GPT-3.5 Turbo', provider: 'Github', maxTokenAllowed: 8000 },\r\n  ];\r\n\r\n  getModelInstance(options: {\r\n    model: string;\r\n    serverEnv: Env;\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n  }): LanguageModelV1 {\r\n    const { model, serverEnv, apiKeys, providerSettings } = options;\r\n\r\n    const { apiKey } = this.getProviderBaseUrlAndKey({\r\n      apiKeys,\r\n      providerSettings: providerSettings?.[this.name],\r\n      serverEnv: serverEnv as any,\r\n      defaultBaseUrlKey: '',\r\n      defaultApiTokenKey: 'GITHUB_API_KEY',\r\n    });\r\n\r\n    if (!apiKey) {\r\n      throw new Error(`Missing API key for ${this.name} provider`);\r\n    }\r\n\r\n    const openai = createOpenAI({\r\n      baseURL: 'https://models.inference.ai.azure.com',\r\n      apiKey,\r\n    });\r\n\r\n    return openai(model);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEe,MAAM,uBAAuB,yIAAA,CAAA,eAAY;IACtD,OAAO,SAAS;IAChB,gBAAgB,qDAAqD;IAErE,SAAS;QACP,aAAa;IACf,EAAE;IAEF,0DAA0D;IAC1D,eAA4B;QAC1B;YAAE,MAAM;YAAU,OAAO;YAAU,UAAU;YAAU,iBAAiB;QAAK;QAC7E;YAAE,MAAM;YAAM,OAAO;YAAc,UAAU;YAAU,iBAAiB;QAAO;QAC/E;YAAE,MAAM;YAAW,OAAO;YAAW,UAAU;YAAU,iBAAiB;QAAK;QAC/E;YAAE,MAAM;YAAe,OAAO;YAAe,UAAU;YAAU,iBAAiB;QAAK;QACvF;YAAE,MAAM;YAAe,OAAO;YAAe,UAAU;YAAU,iBAAiB;QAAK;QACvF;YAAE,MAAM;YAAS,OAAO;YAAS,UAAU;YAAU,iBAAiB;QAAK;QAC3E;YAAE,MAAM;YAAiB,OAAO;YAAiB,UAAU;YAAU,iBAAiB;QAAK;KAC5F,CAAC;IAEF,iBAAiB,OAKhB,EAAmB;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG;QAExD,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC/C;YACA,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,WAAW;YACX,mBAAmB;YACnB,oBAAoB;QACtB;QAEA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7D;QAEA,MAAM,SAAS,CAAA,GAAA,6OAAA,CAAA,eAAY,AAAD,EAAE;YAC1B,SAAS;YACT;QACF;QAEA,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 2190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2315, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/modules/llm/manager.ts"],"sourcesContent":["import type { IProviderSetting } from '../../../types/types/model';\r\nimport { BaseProvider } from './base-provider';\r\nimport type { ModelInfo, ProviderInfo } from './types';\r\nimport * as providers from './registry';\r\nimport { createScopedLogger } from '../../../utils/logger';\r\n\r\nconst logger = createScopedLogger('LLMManager');\r\nexport class LLMManager {\r\n  private static _instance: LLMManager;\r\n  private _providers: Map<string, BaseProvider> = new Map();\r\n  private _modelList: ModelInfo[] = [];\r\n  private readonly _env: any = {};\r\n\r\n  private constructor(_env: Record<string, string>) {\r\n    this._registerProvidersFromDirectory();\r\n    this._env = _env;\r\n  }\r\n\r\n  static getInstance(env: Record<string, string> = {}): LLMManager {\r\n    if (!LLMManager._instance) {\r\n      LLMManager._instance = new LLMManager(env);\r\n    }\r\n\r\n    return LLMManager._instance;\r\n  }\r\n  get env() {\r\n    return this._env;\r\n  }\r\n\r\n  private async _registerProvidersFromDirectory() {\r\n    try {\r\n      /*\r\n       * Dynamically import all files from the providers directory\r\n       * const providerModules = import.meta.glob('./providers/*.ts', { eager: true });\r\n       */\r\n\r\n      // Look for exported classes that extend BaseProvider\r\n      for (const exportedItem of Object.values(providers)) {\r\n        if (typeof exportedItem === 'function' && exportedItem.prototype instanceof BaseProvider) {\r\nconst provider = new exportedItem() as BaseProvider;\r\n\r\n          try {\r\n            this.registerProvider(provider);\r\n          } catch (error: any) {\r\n            logger.warn('Failed To Register Provider: ', provider.name, 'error:', error.message);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      logger.error('Error registering providers:', error);\r\n    }\r\n  }\r\n\r\n  registerProvider(provider: BaseProvider) {\r\n    if (this._providers.has(provider.name)) {\r\n      logger.warn(`Provider ${provider.name} is already registered. Skipping.`);\r\n      return;\r\n    }\r\n\r\n    logger.info('Registering Provider: ', provider.name);\r\n    this._providers.set(provider.name, provider);\r\n    this._modelList = [...this._modelList, ...provider.staticModels];\r\n  }\r\n\r\n  getProvider(name: string): BaseProvider | undefined {\r\n    return this._providers.get(name);\r\n  }\r\n\r\n  getAllProviders(): BaseProvider[] {\r\n    return Array.from(this._providers.values());\r\n  }\r\n\r\n  getModelList(): ModelInfo[] {\r\n    return this._modelList;\r\n  }\r\n\r\n  async updateModelList(options: {\r\n    apiKeys?: Record<string, string>;\r\n    providerSettings?: Record<string, IProviderSetting>;\r\n    serverEnv?: Record<string, string>;\r\n  }): Promise<ModelInfo[]> {\r\n    const { apiKeys, providerSettings, serverEnv } = options;\r\n\r\n    let enabledProviders = Array.from(this._providers.values()).map((p) => p.name);\r\n\r\n    if (providerSettings && Object.keys(providerSettings).length > 0) {\r\n      enabledProviders = enabledProviders.filter((p) => providerSettings[p].enabled);\r\n    }\r\n\r\n    // Get dynamic models from all providers that support them\r\n    const dynamicModels = await Promise.all(\r\n      Array.from(this._providers.values())\r\n        .filter((provider) => enabledProviders.includes(provider.name))\r\n        .filter(\r\n          (provider): provider is BaseProvider & Required<Pick<ProviderInfo, 'getDynamicModels'>> =>\r\n            !!provider.getDynamicModels,\r\n        )\r\n        .map(async (provider) => {\r\n          const cachedModels = provider.getModelsFromCache(options);\r\n\r\n          if (cachedModels) {\r\n            return cachedModels;\r\n          }\r\n\r\n          const dynamicModels = await provider\r\n            .getDynamicModels(apiKeys, providerSettings?.[provider.name], serverEnv)\r\n            .then((models) => {\r\n              logger.info(`Caching ${models.length} dynamic models for ${provider.name}`);\r\n              provider.storeDynamicModels(options, models);\r\n\r\n              return models;\r\n            })\r\n            .catch((err) => {\r\n              logger.error(`Error getting dynamic models ${provider.name} :`, err);\r\n              return [];\r\n            });\r\n\r\n          return dynamicModels;\r\n        }),\r\n    );\r\n    const staticModels = Array.from(this._providers.values()).flatMap((p) => p.staticModels || []);\r\n    const dynamicModelsFlat = dynamicModels.flat();\r\n    const dynamicModelKeys = dynamicModelsFlat.map((d) => `${d.name}-${d.provider}`);\r\n    const filteredStaticModesl = staticModels.filter((m) => !dynamicModelKeys.includes(`${m.name}-${m.provider}`));\r\n\r\n    // Combine static and dynamic models\r\n    const modelList = [...dynamicModelsFlat, ...filteredStaticModesl];\r\n    modelList.sort((a, b) => a.name.localeCompare(b.name));\r\n    this._modelList = modelList;\r\n\r\n    return modelList;\r\n  }\r\n  getStaticModelList() {\r\n    return [...this._providers.values()].flatMap((p) => p.staticModels || []);\r\n  }\r\n  async getModelListFromProvider(\r\n    providerArg: BaseProvider,\r\n    options: {\r\n      apiKeys?: Record<string, string>;\r\n      providerSettings?: Record<string, IProviderSetting>;\r\n      serverEnv?: Record<string, string>;\r\n    },\r\n  ): Promise<ModelInfo[]> {\r\n    const provider = this._providers.get(providerArg.name);\r\n\r\n    if (!provider) {\r\n      throw new Error(`Provider ${providerArg.name} not found`);\r\n    }\r\n\r\n    const staticModels = provider.staticModels || [];\r\n\r\n    if (!provider.getDynamicModels) {\r\n      return staticModels;\r\n    }\r\n\r\n    const { apiKeys, providerSettings, serverEnv } = options;\r\n\r\n    const cachedModels = provider.getModelsFromCache({\r\n      apiKeys,\r\n      providerSettings,\r\n      serverEnv,\r\n    });\r\n\r\n    if (cachedModels) {\r\n      logger.info(`Found ${cachedModels.length} cached models for ${provider.name}`);\r\n      return [...cachedModels, ...staticModels];\r\n    }\r\n\r\n    logger.info(`Getting dynamic models for ${provider.name}`);\r\n\r\n    const dynamicModels = await provider\r\n      .getDynamicModels?.(apiKeys, providerSettings?.[provider.name], serverEnv)\r\n      .then((models) => {\r\n        logger.info(`Got ${models.length} dynamic models for ${provider.name}`);\r\n        provider.storeDynamicModels(options, models);\r\n\r\n        return models;\r\n      })\r\n      .catch((err) => {\r\n        logger.error(`Error getting dynamic models ${provider.name} :`, err);\r\n        return [];\r\n      });\r\n    const dynamicModelsName = dynamicModels.map((d) => d.name);\r\n    const filteredStaticList = staticModels.filter((m) => !dynamicModelsName.includes(m.name));\r\n    const modelList = [...dynamicModels, ...filteredStaticList];\r\n    modelList.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    return modelList;\r\n  }\r\n  getStaticModelListFromProvider(providerArg: BaseProvider) {\r\n    const provider = this._providers.get(providerArg.name);\r\n\r\n    if (!provider) {\r\n      throw new Error(`Provider ${providerArg.name} not found`);\r\n    }\r\n\r\n    return [...(provider.staticModels || [])];\r\n  }\r\n\r\n  getDefaultProvider(): BaseProvider {\r\n    const firstProvider = this._providers.values().next().value;\r\n\r\n    if (!firstProvider) {\r\n      throw new Error('No providers registered');\r\n    }\r\n\r\n    return firstProvider;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2488, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/constants.ts"],"sourcesContent":["import { LLMManager } from '~/lib/modules/llm/manager';\r\nimport type { Template } from '~/types/template';\r\n\r\nexport const WORK_DIR_NAME = 'project';\r\nexport const WORK_DIR = `/home/${WORK_DIR_NAME}`;\r\nexport const MODIFICATIONS_TAG_NAME = 'bolt_file_modifications';\r\nexport const MODEL_REGEX = /^\\[Model: (.*?)\\]\\n\\n/;\r\nexport const PROVIDER_REGEX = /\\[Provider: (.*?)\\]\\n\\n/;\r\nexport const DEFAULT_MODEL = 'claude-3-5-sonnet-latest';\r\nexport const PROMPT_COOKIE_KEY = 'cachedPrompt';\r\n\r\nconst llmManager = LLMManager.getInstance(import.meta.env);\r\n\r\nexport const PROVIDER_LIST = llmManager.getAllProviders();\r\nexport const DEFAULT_PROVIDER = llmManager.getDefaultProvider();\r\n\r\nexport const providerBaseUrlEnvKeys: Record<string, { baseUrlKey?: string; apiTokenKey?: string }> = {};\r\nPROVIDER_LIST.forEach((provider) => {\r\n  providerBaseUrlEnvKeys[provider.name] = {\r\n    baseUrlKey: provider.config.baseUrlKey,\r\n    apiTokenKey: provider.config.apiTokenKey,\r\n  };\r\n});\r\n\r\n// starter Templates\r\n\r\nexport const STARTER_TEMPLATES: Template[] = [\r\n  {\r\n    name: 'bolt-astro-basic',\r\n    label: 'Astro Basic',\r\n    description: 'Lightweight Astro starter template for building fast static websites',\r\n    githubRepo: 'thecodacus/bolt-astro-basic-template',\r\n    tags: ['astro', 'blog', 'performance'],\r\n    icon: 'i-bolt:astro',\r\n  },\r\n  {\r\n    name: 'bolt-nextjs-shadcn',\r\n    label: 'Next.js with shadcn/ui',\r\n    description: 'Next.js starter fullstack template integrated with shadcn/ui components and styling system',\r\n    githubRepo: 'thecodacus/bolt-nextjs-shadcn-template',\r\n    tags: ['nextjs', 'react', 'typescript', 'shadcn', 'tailwind'],\r\n    icon: 'i-bolt:nextjs',\r\n  },\r\n  {\r\n    name: 'bolt-qwik-ts',\r\n    label: 'Qwik TypeScript',\r\n    description: 'Qwik framework starter with TypeScript for building resumable applications',\r\n    githubRepo: 'thecodacus/bolt-qwik-ts-template',\r\n    tags: ['qwik', 'typescript', 'performance', 'resumable'],\r\n    icon: 'i-bolt:qwik',\r\n  },\r\n  {\r\n    name: 'bolt-remix-ts',\r\n    label: 'Remix TypeScript',\r\n    description: 'Remix framework starter with TypeScript for full-stack web applications',\r\n    githubRepo: 'thecodacus/bolt-remix-ts-template',\r\n    tags: ['remix', 'typescript', 'fullstack', 'react'],\r\n    icon: 'i-bolt:remix',\r\n  },\r\n  {\r\n    name: 'bolt-slidev',\r\n    label: 'Slidev Presentation',\r\n    description: 'Slidev starter template for creating developer-friendly presentations using Markdown',\r\n    githubRepo: 'thecodacus/bolt-slidev-template',\r\n    tags: ['slidev', 'presentation', 'markdown'],\r\n    icon: 'i-bolt:slidev',\r\n  },\r\n  {\r\n    name: 'bolt-sveltekit',\r\n    label: 'SvelteKit',\r\n    description: 'SvelteKit starter template for building fast, efficient web applications',\r\n    githubRepo: 'bolt-sveltekit-template',\r\n    tags: ['svelte', 'sveltekit', 'typescript'],\r\n    icon: 'i-bolt:svelte',\r\n  },\r\n  {\r\n    name: 'vanilla-vite',\r\n    label: 'Vanilla + Vite',\r\n    description: 'Minimal Vite starter template for vanilla JavaScript projects',\r\n    githubRepo: 'thecodacus/vanilla-vite-template',\r\n    tags: ['vite', 'vanilla-js', 'minimal'],\r\n    icon: 'i-bolt:vite',\r\n  },\r\n  {\r\n    name: 'bolt-vite-react',\r\n    label: 'React + Vite + typescript',\r\n    description: 'React starter template powered by Vite for fast development experience',\r\n    githubRepo: 'thecodacus/bolt-vite-react-ts-template',\r\n    tags: ['react', 'vite', 'frontend'],\r\n    icon: 'i-bolt:react',\r\n  },\r\n  {\r\n    name: 'bolt-vite-ts',\r\n    label: 'Vite + TypeScript',\r\n    description: 'Vite starter template with TypeScript configuration for type-safe development',\r\n    githubRepo: 'thecodacus/bolt-vite-ts-template',\r\n    tags: ['vite', 'typescript', 'minimal'],\r\n    icon: 'i-bolt:typescript',\r\n  },\r\n  {\r\n    name: 'bolt-vue',\r\n    label: 'Vue.js',\r\n    description: 'Vue.js starter template with modern tooling and best practices',\r\n    githubRepo: 'thecodacus/bolt-vue-template',\r\n    tags: ['vue', 'typescript', 'frontend'],\r\n    icon: 'i-bolt:vue',\r\n  },\r\n  {\r\n    name: 'bolt-angular',\r\n    label: 'Angular Starter',\r\n    description: 'A modern Angular starter template with TypeScript support and best practices configuration',\r\n    githubRepo: 'thecodacus/bolt-angular-template',\r\n    tags: ['angular', 'typescript', 'frontend', 'spa'],\r\n    icon: 'i-bolt:angular',\r\n  },\r\n];\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;AAGO,MAAM,gBAAgB;AACtB,MAAM,WAAW,CAAC,MAAM,EAAE,eAAe;AACzC,MAAM,yBAAyB;AAC/B,MAAM,cAAc;AACpB,MAAM,iBAAiB;AACvB,MAAM,gBAAgB;AACtB,MAAM,oBAAoB;AAEjC,MAAM,aAAa,gIAAA,CAAA,aAAU,CAAC,WAAW,CAAC,8BAAY,GAAG;AAElD,MAAM,gBAAgB,WAAW,eAAe;AAChD,MAAM,mBAAmB,WAAW,kBAAkB;AAEtD,MAAM,yBAAwF,CAAC;AACtG,cAAc,OAAO,CAAC,CAAC;IACrB,sBAAsB,CAAC,SAAS,IAAI,CAAC,GAAG;QACtC,YAAY,SAAS,MAAM,CAAC,UAAU;QACtC,aAAa,SAAS,MAAM,CAAC,WAAW;IAC1C;AACF;AAIO,MAAM,oBAAgC;IAC3C;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAS;YAAQ;SAAc;QACtC,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAU;YAAS;YAAc;YAAU;SAAW;QAC7D,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAQ;YAAc;YAAe;SAAY;QACxD,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAS;YAAc;YAAa;SAAQ;QACnD,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAU;YAAgB;SAAW;QAC5C,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAU;YAAa;SAAa;QAC3C,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAQ;YAAc;SAAU;QACvC,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAS;YAAQ;SAAW;QACnC,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAQ;YAAc;SAAU;QACvC,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAO;YAAc;SAAW;QACvC,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,YAAY;QACZ,MAAM;YAAC;YAAW;YAAc;YAAY;SAAM;QAClD,MAAM;IACR;CACD","debugId":null}},
    {"offset": {"line": 2670, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/stacktrace.ts"],"sourcesContent":["/**\r\n * Cleans webcontainer URLs from stack traces to show relative paths instead\r\n */\r\nexport function cleanStackTrace(stackTrace: string): string {\r\n  // Function to clean a single URL\r\n  const cleanUrl = (url: string): string => {\r\n    const regex = /^https?:\\/\\/[^\\/]+\\.webcontainer-api\\.io(\\/.*)?$/;\r\n\r\n    if (!regex.test(url)) {\r\n      return url;\r\n    }\r\n\r\n    const pathRegex = /^https?:\\/\\/[^\\/]+\\.webcontainer-api\\.io\\/(.*?)$/;\r\n    const match = url.match(pathRegex);\r\n\r\n    return match?.[1] || '';\r\n  };\r\n\r\n  // Split the stack trace into lines and process each line\r\n  return stackTrace\r\n    .split('\\n')\r\n    .map((line) => {\r\n      // Match any URL in the line that contains webcontainer-api.io\r\n      return line.replace(/(https?:\\/\\/[^\\/]+\\.webcontainer-api\\.io\\/[^\\s\\)]+)/g, (match) => cleanUrl(match));\r\n    })\r\n    .join('\\n');\r\n}\r\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACM,SAAS,gBAAgB,UAAkB;IAChD,iCAAiC;IACjC,MAAM,WAAW,CAAC;QAChB,MAAM,QAAQ;QAEd,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM;YACpB,OAAO;QACT;QAEA,MAAM,YAAY;QAClB,MAAM,QAAQ,IAAI,KAAK,CAAC;QAExB,OAAO,OAAO,CAAC,EAAE,IAAI;IACvB;IAEA,yDAAyD;IACzD,OAAO,WACJ,KAAK,CAAC,MACN,GAAG,CAAC,CAAC;QACJ,8DAA8D;QAC9D,OAAO,KAAK,OAAO,CAAC,wDAAwD,CAAC,QAAU,SAAS;IAClG,GACC,IAAI,CAAC;AACV","debugId":null}},
    {"offset": {"line": 2698, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/webcontainer/index.ts"],"sourcesContent":["import { WebContainer } from '@webcontainer/api';\r\nimport { WORK_DIR_NAME } from '~/utils/constants';\r\nimport { cleanStackTrace } from '~/utils/stacktrace';\r\n\r\ninterface WebContainerContext {\r\n  loaded: boolean;\r\n}\r\n\r\nexport const webcontainerContext: WebContainerContext = import.meta.hot?.data?.webcontainerContext ?? {\r\n  loaded: false,\r\n};\r\n\r\nif (import.meta.hot?.data) {\r\n  import.meta.hot.data.webcontainerContext = webcontainerContext;\r\n}\r\n\r\nexport let webcontainer: Promise<WebContainer> = new Promise(() => {\r\n  // noop for ssr\r\n});\r\n\r\nif (!import.meta.env.SSR) {\r\n  webcontainer =\r\n    import.meta.hot?.data.webcontainer ??\r\n    Promise.resolve()\r\n      .then(() => {\r\n        return WebContainer.boot({\r\n          coep: 'credentialless',\r\n          workdirName: WORK_DIR_NAME,\r\n          forwardPreviewErrors: true, // Enable error forwarding from iframes\r\n        });\r\n      })\r\n      .then(async (webcontainer) => {\r\n        webcontainerContext.loaded = true;\r\n\r\n        const { workbenchStore } = await import('~/lib/stores/workbench');\r\n\r\n        // Listen for preview errors\r\n        webcontainer.on('preview-message', (message) => {\r\n          console.log('WebContainer preview message:', message);\r\n\r\n          // Handle both uncaught exceptions and unhandled promise rejections\r\n          if (message.type === 'PREVIEW_UNCAUGHT_EXCEPTION' || message.type === 'PREVIEW_UNHANDLED_REJECTION') {\r\n            const isPromise = message.type === 'PREVIEW_UNHANDLED_REJECTION';\r\n            workbenchStore.actionAlert.set({\r\n              type: 'preview',\r\n              title: isPromise ? 'Unhandled Promise Rejection' : 'Uncaught Exception',\r\n              description: message.message,\r\n              content: `Error occurred at ${message.pathname}${message.search}${message.hash}\\nPort: ${message.port}\\n\\nStack trace:\\n${cleanStackTrace(message.stack || '')}`,\r\n              source: 'preview',\r\n            });\r\n          }\r\n        });\r\n\r\n        return webcontainer;\r\n      });\r\n\r\n  if (import.meta.hot) {\r\n    import.meta.hot.data.webcontainer = webcontainer;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;;;;;;;;;AAMO,MAAM,sBAA2C,8BAAY,GAAG,EAAE,MAAM,uBAAuB;IACpG,QAAQ;AACV;AAEA,IAAI,8BAAY,GAAG,EAAE,MAAM;IACzB,8BAAY,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG;AAC7C;AAEO,IAAI,eAAsC,IAAI,QAAQ;AAC3D,eAAe;AACjB;AAEA,IAAI,CAAC,8BAAY,GAAG,CAAC,GAAG,EAAE;IACxB,eACE,8BAAY,GAAG,EAAE,KAAK,gBACtB,QAAQ,OAAO,GACZ,IAAI,CAAC;QACJ,OAAO,yPAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,MAAM;YACN,aAAa,kHAAA,CAAA,gBAAa;YAC1B,sBAAsB;QACxB;IACF,GACC,IAAI,CAAC,OAAO;QACX,oBAAoB,MAAM,GAAG;QAE7B,MAAM,EAAE,cAAc,EAAE,GAAG;QAE3B,4BAA4B;QAC5B,aAAa,EAAE,CAAC,mBAAmB,CAAC;YAClC,QAAQ,GAAG,CAAC,iCAAiC;YAE7C,mEAAmE;YACnE,IAAI,QAAQ,IAAI,KAAK,gCAAgC,QAAQ,IAAI,KAAK,+BAA+B;gBACnG,MAAM,YAAY,QAAQ,IAAI,KAAK;gBACnC,eAAe,WAAW,CAAC,GAAG,CAAC;oBAC7B,MAAM;oBACN,OAAO,YAAY,gCAAgC;oBACnD,aAAa,QAAQ,OAAO;oBAC5B,SAAS,CAAC,kBAAkB,EAAE,QAAQ,QAAQ,GAAG,QAAQ,MAAM,GAAG,QAAQ,IAAI,CAAC,QAAQ,EAAE,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAA,GAAA,mHAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,KAAK,IAAI,KAAK;oBAChK,QAAQ;gBACV;YACF;QACF;QAEA,OAAO;IACT;IAEJ,IAAI,8BAAY,GAAG,EAAE;QACnB,8BAAY,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG;IACtC;AACF","debugId":null}},
    {"offset": {"line": 2760, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/stores/editor.ts"],"sourcesContent":["import { atom, computed, map, type MapStore, type WritableAtom } from 'nanostores';\r\nimport type { EditorDocument, ScrollPosition } from '~/components/editor/codemirror/CodeMirrorEditor';\r\nimport type { FileMap, FilesStore } from './files';\r\n\r\nexport type EditorDocuments = Record<string, EditorDocument>;\r\n\r\ntype SelectedFile = WritableAtom<string | undefined>;\r\n\r\nexport class EditorStore {\r\n  #filesStore: FilesStore;\r\n\r\n  selectedFile: SelectedFile = import.meta.hot?.data.selectedFile ?? atom<string | undefined>();\r\n  documents: MapStore<EditorDocuments> = import.meta.hot?.data.documents ?? map({});\r\n\r\n  currentDocument = computed([this.documents, this.selectedFile], (documents, selectedFile) => {\r\n    if (!selectedFile) {\r\n      return undefined;\r\n    }\r\n\r\n    return documents[selectedFile];\r\n  });\r\n\r\n  constructor(filesStore: FilesStore) {\r\n    this.#filesStore = filesStore;\r\n\r\n    if (import.meta.hot) {\r\n      import.meta.hot.data.documents = this.documents;\r\n      import.meta.hot.data.selectedFile = this.selectedFile;\r\n    }\r\n  }\r\n\r\n  setDocuments(files: FileMap) {\r\n    const previousDocuments = this.documents.value;\r\n\r\n    this.documents.set(\r\n      Object.fromEntries<EditorDocument>(\r\n        Object.entries(files)\r\n          .map(([filePath, dirent]) => {\r\n            if (dirent === undefined || dirent.type === 'folder') {\r\n              return undefined;\r\n            }\r\n\r\n            const previousDocument = previousDocuments?.[filePath];\r\n\r\n            return [\r\n              filePath,\r\n              {\r\n                value: dirent.content,\r\n                filePath,\r\n                scroll: previousDocument?.scroll,\r\n              },\r\n            ] as [string, EditorDocument];\r\n          })\r\n          .filter(Boolean) as Array<[string, EditorDocument]>,\r\n      ),\r\n    );\r\n  }\r\n\r\n  setSelectedFile(filePath: string | undefined) {\r\n    this.selectedFile.set(filePath);\r\n  }\r\n\r\n  updateScrollPosition(filePath: string, position: ScrollPosition) {\r\n    const documents = this.documents.get();\r\n    const documentState = documents[filePath];\r\n\r\n    if (!documentState) {\r\n      return;\r\n    }\r\n\r\n    this.documents.setKey(filePath, {\r\n      ...documentState,\r\n      scroll: position,\r\n    });\r\n  }\r\n\r\n  updateFile(filePath: string, newContent: string) {\r\n    const documents = this.documents.get();\r\n    const documentState = documents[filePath];\r\n\r\n    if (!documentState) {\r\n      return;\r\n    }\r\n\r\n    const currentContent = documentState.value;\r\n    const contentChanged = currentContent !== newContent;\r\n\r\n    if (contentChanged) {\r\n      this.documents.setKey(filePath, {\r\n        ...documentState,\r\n        value: newContent,\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;;;;;;;AAQO,MAAM;IACX,CAAA,UAAW,CAAa;IAExB,eAA6B,8BAAY,GAAG,EAAE,KAAK,gBAAgB,CAAA,GAAA,mMAAA,CAAA,OAAI,AAAD,IAAwB;IAC9F,YAAuC,8BAAY,GAAG,EAAE,KAAK,aAAa,CAAA,GAAA,kMAAA,CAAA,MAAG,AAAD,EAAE,CAAC,GAAG;IAElF,kBAAkB,CAAA,GAAA,uMAAA,CAAA,WAAQ,AAAD,EAAE;QAAC,IAAI,CAAC,SAAS;QAAE,IAAI,CAAC,YAAY;KAAC,EAAE,CAAC,WAAW;QAC1E,IAAI,CAAC,cAAc;YACjB,OAAO;QACT;QAEA,OAAO,SAAS,CAAC,aAAa;IAChC,GAAG;IAEH,YAAY,UAAsB,CAAE;QAClC,IAAI,CAAC,CAAA,UAAW,GAAG;QAEnB,IAAI,8BAAY,GAAG,EAAE;YACnB,8BAAY,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;YAC/C,8BAAY,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY;QACvD;IACF;IAEA,aAAa,KAAc,EAAE;QAC3B,MAAM,oBAAoB,IAAI,CAAC,SAAS,CAAC,KAAK;QAE9C,IAAI,CAAC,SAAS,CAAC,GAAG,CAChB,OAAO,WAAW,CAChB,OAAO,OAAO,CAAC,OACZ,GAAG,CAAC,CAAC,CAAC,UAAU,OAAO;YACtB,IAAI,WAAW,aAAa,OAAO,IAAI,KAAK,UAAU;gBACpD,OAAO;YACT;YAEA,MAAM,mBAAmB,mBAAmB,CAAC,SAAS;YAEtD,OAAO;gBACL;gBACA;oBACE,OAAO,OAAO,OAAO;oBACrB;oBACA,QAAQ,kBAAkB;gBAC5B;aACD;QACH,GACC,MAAM,CAAC;IAGhB;IAEA,gBAAgB,QAA4B,EAAE;QAC5C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;IACxB;IAEA,qBAAqB,QAAgB,EAAE,QAAwB,EAAE;QAC/D,MAAM,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG;QACpC,MAAM,gBAAgB,SAAS,CAAC,SAAS;QAEzC,IAAI,CAAC,eAAe;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;YAC9B,GAAG,aAAa;YAChB,QAAQ;QACV;IACF;IAEA,WAAW,QAAgB,EAAE,UAAkB,EAAE;QAC/C,MAAM,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG;QACpC,MAAM,gBAAgB,SAAS,CAAC,SAAS;QAEzC,IAAI,CAAC,eAAe;YAClB;QACF;QAEA,MAAM,iBAAiB,cAAc,KAAK;QAC1C,MAAM,iBAAiB,mBAAmB;QAE1C,IAAI,gBAAgB;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;gBAC9B,GAAG,aAAa;gBAChB,OAAO;YACT;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 2853, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/buffer.ts"],"sourcesContent":["export function bufferWatchEvents<T extends unknown[]>(timeInMs: number, cb: (events: T[]) => unknown) {\r\n  let timeoutId: number | undefined;\r\n  let events: T[] = [];\r\n\r\n  // keep track of the processing of the previous batch so we can wait for it\r\n  let processing: Promise<unknown> = Promise.resolve();\r\n\r\n  const scheduleBufferTick = () => {\r\n    timeoutId = self.setTimeout(async () => {\r\n      // we wait until the previous batch is entirely processed so events are processed in order\r\n      await processing;\r\n\r\n      if (events.length > 0) {\r\n        processing = Promise.resolve(cb(events));\r\n      }\r\n\r\n      timeoutId = undefined;\r\n      events = [];\r\n    }, timeInMs);\r\n  };\r\n\r\n  return (...args: T) => {\r\n    events.push(args);\r\n\r\n    if (!timeoutId) {\r\n      scheduleBufferTick();\r\n    }\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;AAAO,SAAS,kBAAuC,QAAgB,EAAE,EAA4B;IACnG,IAAI;IACJ,IAAI,SAAc,EAAE;IAEpB,2EAA2E;IAC3E,IAAI,aAA+B,QAAQ,OAAO;IAElD,MAAM,qBAAqB;QACzB,YAAY,KAAK,UAAU,CAAC;YAC1B,0FAA0F;YAC1F,MAAM;YAEN,IAAI,OAAO,MAAM,GAAG,GAAG;gBACrB,aAAa,QAAQ,OAAO,CAAC,GAAG;YAClC;YAEA,YAAY;YACZ,SAAS,EAAE;QACb,GAAG;IACL;IAEA,OAAO,CAAC,GAAG;QACT,OAAO,IAAI,CAAC;QAEZ,IAAI,CAAC,WAAW;YACd;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 2885, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/diff.ts"],"sourcesContent":["import { createTwoFilesPatch } from 'diff';\r\nimport type { FileMap } from '~/lib/stores/files';\r\nimport { MODIFICATIONS_TAG_NAME, WORK_DIR } from './constants';\r\n\r\nexport const modificationsRegex = new RegExp(\r\n  `^<${MODIFICATIONS_TAG_NAME}>[\\\\s\\\\S]*?<\\\\/${MODIFICATIONS_TAG_NAME}>\\\\s+`,\r\n  'g',\r\n);\r\n\r\ninterface ModifiedFile {\r\n  type: 'diff' | 'file';\r\n  content: string;\r\n}\r\n\r\ntype FileModifications = Record<string, ModifiedFile>;\r\n\r\nexport function computeFileModifications(files: FileMap, modifiedFiles: Map<string, string>) {\r\n  const modifications: FileModifications = {};\r\n\r\n  let hasModifiedFiles = false;\r\n\r\n  for (const [filePath, originalContent] of modifiedFiles) {\r\n    const file = files[filePath];\r\n\r\n    if (file?.type !== 'file') {\r\n      continue;\r\n    }\r\n\r\n    const unifiedDiff = diffFiles(filePath, originalContent, file.content);\r\n\r\n    if (!unifiedDiff) {\r\n      // files are identical\r\n      continue;\r\n    }\r\n\r\n    hasModifiedFiles = true;\r\n\r\n    if (unifiedDiff.length > file.content.length) {\r\n      // if there are lots of changes we simply grab the current file content since it's smaller than the diff\r\n      modifications[filePath] = { type: 'file', content: file.content };\r\n    } else {\r\n      // otherwise we use the diff since it's smaller\r\n      modifications[filePath] = { type: 'diff', content: unifiedDiff };\r\n    }\r\n  }\r\n\r\n  if (!hasModifiedFiles) {\r\n    return undefined;\r\n  }\r\n\r\n  return modifications;\r\n}\r\n\r\n/**\r\n * Computes a diff in the unified format. The only difference is that the header is omitted\r\n * because it will always assume that you're comparing two versions of the same file and\r\n * it allows us to avoid the extra characters we send back to the llm.\r\n *\r\n * @see https://www.gnu.org/software/diffutils/manual/html_node/Unified-Format.html\r\n */\r\nexport function diffFiles(fileName: string, oldFileContent: string, newFileContent: string) {\r\n  let unifiedDiff = createTwoFilesPatch(fileName, fileName, oldFileContent, newFileContent);\r\n\r\n  const patchHeaderEnd = `--- ${fileName}\\n+++ ${fileName}\\n`;\r\n  const headerEndIndex = unifiedDiff.indexOf(patchHeaderEnd);\r\n\r\n  if (headerEndIndex >= 0) {\r\n    unifiedDiff = unifiedDiff.slice(headerEndIndex + patchHeaderEnd.length);\r\n  }\r\n\r\n  if (unifiedDiff === '') {\r\n    return undefined;\r\n  }\r\n\r\n  return unifiedDiff;\r\n}\r\n\r\nconst regex = new RegExp(`^${WORK_DIR}\\/`);\r\n\r\n/**\r\n * Strips out the work directory from the file path.\r\n */\r\nexport function extractRelativePath(filePath: string) {\r\n  return filePath.replace(regex, '');\r\n}\r\n\r\n/**\r\n * Converts the unified diff to HTML.\r\n *\r\n * Example:\r\n *\r\n * ```html\r\n * <bolt_file_modifications>\r\n * <diff path=\"/home/project/index.js\">\r\n * - console.log('Hello, World!');\r\n * + console.log('Hello, Bolt!');\r\n * </diff>\r\n * </bolt_file_modifications>\r\n * ```\r\n */\r\nexport function fileModificationsToHTML(modifications: FileModifications) {\r\n  const entries = Object.entries(modifications);\r\n\r\n  if (entries.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  const result: string[] = [`<${MODIFICATIONS_TAG_NAME}>`];\r\n\r\n  for (const [filePath, { type, content }] of entries) {\r\n    result.push(`<${type} path=${JSON.stringify(filePath)}>`, content, `</${type}>`);\r\n  }\r\n\r\n  result.push(`</${MODIFICATIONS_TAG_NAME}>`);\r\n\r\n  return result.join('\\n');\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAEA;;;AAEO,MAAM,qBAAqB,IAAI,OACpC,CAAC,EAAE,EAAE,kHAAA,CAAA,yBAAsB,CAAC,eAAe,EAAE,kHAAA,CAAA,yBAAsB,CAAC,KAAK,CAAC,EAC1E;AAUK,SAAS,yBAAyB,KAAc,EAAE,aAAkC;IACzF,MAAM,gBAAmC,CAAC;IAE1C,IAAI,mBAAmB;IAEvB,KAAK,MAAM,CAAC,UAAU,gBAAgB,IAAI,cAAe;QACvD,MAAM,OAAO,KAAK,CAAC,SAAS;QAE5B,IAAI,MAAM,SAAS,QAAQ;YACzB;QACF;QAEA,MAAM,cAAc,UAAU,UAAU,iBAAiB,KAAK,OAAO;QAErE,IAAI,CAAC,aAAa;YAEhB;QACF;QAEA,mBAAmB;QAEnB,IAAI,YAAY,MAAM,GAAG,KAAK,OAAO,CAAC,MAAM,EAAE;YAC5C,wGAAwG;YACxG,aAAa,CAAC,SAAS,GAAG;gBAAE,MAAM;gBAAQ,SAAS,KAAK,OAAO;YAAC;QAClE,OAAO;YACL,+CAA+C;YAC/C,aAAa,CAAC,SAAS,GAAG;gBAAE,MAAM;gBAAQ,SAAS;YAAY;QACjE;IACF;IAEA,IAAI,CAAC,kBAAkB;QACrB,OAAO;IACT;IAEA,OAAO;AACT;AASO,SAAS,UAAU,QAAgB,EAAE,cAAsB,EAAE,cAAsB;IACxF,IAAI,cAAc,oBAAoB,UAAU,UAAU,gBAAgB;IAE1E,MAAM,iBAAiB,CAAC,IAAI,EAAE,SAAS,MAAM,EAAE,SAAS,EAAE,CAAC;IAC3D,MAAM,iBAAiB,YAAY,OAAO,CAAC;IAE3C,IAAI,kBAAkB,GAAG;QACvB,cAAc,YAAY,KAAK,CAAC,iBAAiB,eAAe,MAAM;IACxE;IAEA,IAAI,gBAAgB,IAAI;QACtB,OAAO;IACT;IAEA,OAAO;AACT;AAEA,MAAM,QAAQ,IAAI,OAAO,CAAC,CAAC,EAAE,kHAAA,CAAA,WAAQ,CAAC,EAAE,CAAC;AAKlC,SAAS,oBAAoB,QAAgB;IAClD,OAAO,SAAS,OAAO,CAAC,OAAO;AACjC;AAgBO,SAAS,wBAAwB,aAAgC;IACtE,MAAM,UAAU,OAAO,OAAO,CAAC;IAE/B,IAAI,QAAQ,MAAM,KAAK,GAAG;QACxB,OAAO;IACT;IAEA,MAAM,SAAmB;QAAC,CAAC,CAAC,EAAE,kHAAA,CAAA,yBAAsB,CAAC,CAAC,CAAC;KAAC;IAExD,KAAK,MAAM,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,IAAI,QAAS;QACnD,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,EAAE,KAAK,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACjF;IAEA,OAAO,IAAI,CAAC,CAAC,EAAE,EAAE,kHAAA,CAAA,yBAAsB,CAAC,CAAC,CAAC;IAE1C,OAAO,OAAO,IAAI,CAAC;AACrB","debugId":null}},
    {"offset": {"line": 2969, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/stores/files.ts"],"sourcesContent":["import type { PathWatcherEvent, WebContainer } from '@webcontainer/api';\r\nimport { getEncoding } from 'istextorbinary';\r\nimport { map, type MapStore } from 'nanostores';\r\nimport { Buffer } from 'node:buffer';\r\nimport { path } from '~/utils/path';\r\nimport { bufferWatchEvents } from '~/utils/buffer';\r\nimport { WORK_DIR } from '~/utils/constants';\r\nimport { computeFileModifications } from '~/utils/diff';\r\nimport { createScopedLogger } from '~/utils/logger';\r\nimport { unreachable } from '~/utils/unreachable';\r\n\r\nconst logger = createScopedLogger('FilesStore');\r\n\r\nconst utf8TextDecoder = new TextDecoder('utf8', { fatal: true });\r\n\r\nexport interface File {\r\n  type: 'file';\r\n  content: string;\r\n  isBinary: boolean;\r\n}\r\n\r\nexport interface Folder {\r\n  type: 'folder';\r\n}\r\n\r\ntype Dirent = File | Folder;\r\n\r\nexport type FileMap = Record<string, Dirent | undefined>;\r\n\r\nexport class FilesStore {\r\n  #webcontainer: Promise<WebContainer>;\r\n\r\n  /**\r\n   * Tracks the number of files without folders.\r\n   */\r\n  #size = 0;\r\n\r\n  /**\r\n   * @note Keeps track all modified files with their original content since the last user message.\r\n   * Needs to be reset when the user sends another message and all changes have to be submitted\r\n   * for the model to be aware of the changes.\r\n   */\r\n  #modifiedFiles: Map<string, string> = import.meta.hot?.data.modifiedFiles ?? new Map();\r\n\r\n  /**\r\n   * Map of files that matches the state of WebContainer.\r\n   */\r\n  files: MapStore<FileMap> = import.meta.hot?.data.files ?? map({});\r\n\r\n  get filesCount() {\r\n    return this.#size;\r\n  }\r\n\r\n  constructor(webcontainerPromise: Promise<WebContainer>) {\r\n    this.#webcontainer = webcontainerPromise;\r\n\r\n    if (import.meta.hot) {\r\n      import.meta.hot.data.files = this.files;\r\n      import.meta.hot.data.modifiedFiles = this.#modifiedFiles;\r\n    }\r\n\r\n    this.#init();\r\n  }\r\n\r\n  getFile(filePath: string) {\r\n    const dirent = this.files.get()[filePath];\r\n\r\n    if (dirent?.type !== 'file') {\r\n      return undefined;\r\n    }\r\n\r\n    return dirent;\r\n  }\r\n\r\n  getFileModifications() {\r\n    return computeFileModifications(this.files.get(), this.#modifiedFiles);\r\n  }\r\n\r\n  resetFileModifications() {\r\n    this.#modifiedFiles.clear();\r\n  }\r\n\r\n  async saveFile(filePath: string, content: string) {\r\n    const webcontainer = await this.#webcontainer;\r\n\r\n    try {\r\n      const relativePath = path.relative(webcontainer.workdir, filePath);\r\n\r\n      if (!relativePath) {\r\n        throw new Error(`EINVAL: invalid file path, write '${relativePath}'`);\r\n      }\r\n\r\n      const oldContent = this.getFile(filePath)?.content;\r\n\r\n      if (!oldContent) {\r\n        unreachable('Expected content to be defined');\r\n      }\r\n\r\n      await webcontainer.fs.writeFile(relativePath, content);\r\n\r\n      if (!this.#modifiedFiles.has(filePath)) {\r\n        this.#modifiedFiles.set(filePath, oldContent);\r\n      }\r\n\r\n      // we immediately update the file and don't rely on the `change` event coming from the watcher\r\n      this.files.setKey(filePath, { type: 'file', content, isBinary: false });\r\n\r\n      logger.info('File updated');\r\n    } catch (error) {\r\n      logger.error('Failed to update file content\\n\\n', error);\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async #init() {\r\n    const webcontainer = await this.#webcontainer;\r\n\r\n    webcontainer.internal.watchPaths(\r\n      { include: [`${WORK_DIR}/**`], exclude: ['**/node_modules', '.git'], includeContent: true },\r\n      bufferWatchEvents(100, this.#processEventBuffer.bind(this)),\r\n    );\r\n  }\r\n\r\n  #processEventBuffer(events: Array<[events: PathWatcherEvent[]]>) {\r\n    const watchEvents = events.flat(2);\r\n\r\n    for (const { type, path, buffer } of watchEvents) {\r\n      // remove any trailing slashes\r\n      const sanitizedPath = path.replace(/\\/+$/g, '');\r\n\r\n      switch (type) {\r\n        case 'add_dir': {\r\n          // we intentionally add a trailing slash so we can distinguish files from folders in the file tree\r\n          this.files.setKey(sanitizedPath, { type: 'folder' });\r\n          break;\r\n        }\r\n        case 'remove_dir': {\r\n          this.files.setKey(sanitizedPath, undefined);\r\n\r\n          for (const [direntPath] of Object.entries(this.files)) {\r\n            if (direntPath.startsWith(sanitizedPath)) {\r\n              this.files.setKey(direntPath, undefined);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n        case 'add_file':\r\n        case 'change': {\r\n          if (type === 'add_file') {\r\n            this.#size++;\r\n          }\r\n\r\n          let content = '';\r\n\r\n          /**\r\n           * @note This check is purely for the editor. The way we detect this is not\r\n           * bullet-proof and it's a best guess so there might be false-positives.\r\n           * The reason we do this is because we don't want to display binary files\r\n           * in the editor nor allow to edit them.\r\n           */\r\n          const isBinary = isBinaryFile(buffer);\r\n\r\n          if (!isBinary) {\r\n            content = this.#decodeFileContent(buffer);\r\n          }\r\n\r\n          this.files.setKey(sanitizedPath, { type: 'file', content, isBinary });\r\n\r\n          break;\r\n        }\r\n        case 'remove_file': {\r\n          this.#size--;\r\n          this.files.setKey(sanitizedPath, undefined);\r\n          break;\r\n        }\r\n        case 'update_directory': {\r\n          // we don't care about these events\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  #decodeFileContent(buffer?: Uint8Array) {\r\n    if (!buffer || buffer.byteLength === 0) {\r\n      return '';\r\n    }\r\n\r\n    try {\r\n      return utf8TextDecoder.decode(buffer);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\nfunction isBinaryFile(buffer: Uint8Array | undefined) {\r\n  if (buffer === undefined) {\r\n    return false;\r\n  }\r\n\r\n  return getEncoding(convertToBuffer(buffer), { chunkLength: 100 }) === 'binary';\r\n}\r\n\r\n/**\r\n * Converts a `Uint8Array` into a Node.js `Buffer` by copying the prototype.\r\n * The goal is to  avoid expensive copies. It does create a new typed array\r\n * but that's generally cheap as long as it uses the same underlying\r\n * array buffer.\r\n */\r\nfunction convertToBuffer(view: Uint8Array): Buffer {\r\n  return Buffer.from(view.buffer, view.byteOffset, view.byteLength);\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3174, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/stores/previews.ts"],"sourcesContent":["import type { WebContainer } from '@webcontainer/api';\r\nimport { atom } from 'nanostores';\r\n\r\n// Extend Window interface to include our custom property\r\ndeclare global {\r\n  interface Window {\r\n    _tabId?: string;\r\n  }\r\n}\r\n\r\nexport interface PreviewInfo {\r\n  port: number;\r\n  ready: boolean;\r\n  baseUrl: string;\r\n}\r\n\r\n// Create a broadcast channel for preview updates\r\nconst PREVIEW_CHANNEL = 'preview-updates';\r\n\r\nexport class PreviewsStore {\r\n  #availablePreviews = new Map<number, PreviewInfo>();\r\n  #webcontainer: Promise<WebContainer>;\r\n  #broadcastChannel: BroadcastChannel;\r\n  #lastUpdate = new Map<string, number>();\r\n  #watchedFiles = new Set<string>();\r\n  #refreshTimeouts = new Map<string, NodeJS.Timeout>();\r\n  #REFRESH_DELAY = 300;\r\n  #storageChannel: BroadcastChannel;\r\n\r\n  previews = atom<PreviewInfo[]>([]);\r\n\r\n  constructor(webcontainerPromise: Promise<WebContainer>) {\r\n    this.#webcontainer = webcontainerPromise;\r\n    this.#broadcastChannel = new BroadcastChannel(PREVIEW_CHANNEL);\r\n    this.#storageChannel = new BroadcastChannel('storage-sync-channel');\r\n\r\n    // Listen for preview updates from other tabs\r\n    this.#broadcastChannel.onmessage = (event) => {\r\n      const { type, previewId } = event.data;\r\n\r\n      if (type === 'file-change') {\r\n        const timestamp = event.data.timestamp;\r\n        const lastUpdate = this.#lastUpdate.get(previewId) || 0;\r\n\r\n        if (timestamp > lastUpdate) {\r\n          this.#lastUpdate.set(previewId, timestamp);\r\n          this.refreshPreview(previewId);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Listen for storage sync messages\r\n    this.#storageChannel.onmessage = (event) => {\r\n      const { storage, source } = event.data;\r\n\r\n      if (storage && source !== this._getTabId()) {\r\n        this._syncStorage(storage);\r\n      }\r\n    };\r\n\r\n    // Override localStorage setItem to catch all changes\r\n    if (typeof window !== 'undefined') {\r\n      const originalSetItem = localStorage.setItem;\r\n\r\n      localStorage.setItem = (...args) => {\r\n        originalSetItem.apply(localStorage, args);\r\n        this._broadcastStorageSync();\r\n      };\r\n    }\r\n\r\n    this.#init();\r\n  }\r\n\r\n  // Generate a unique ID for this tab\r\n  private _getTabId(): string {\r\n    if (typeof window !== 'undefined') {\r\n      if (!window._tabId) {\r\n        window._tabId = Math.random().toString(36).substring(2, 15);\r\n      }\r\n\r\n      return window._tabId;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  // Sync storage data between tabs\r\n  private _syncStorage(storage: Record<string, string>) {\r\n    if (typeof window !== 'undefined') {\r\n      Object.entries(storage).forEach(([key, value]) => {\r\n        try {\r\n          const originalSetItem = Object.getPrototypeOf(localStorage).setItem;\r\n          originalSetItem.call(localStorage, key, value);\r\n        } catch (error) {\r\n          console.error('[Preview] Error syncing storage:', error);\r\n        }\r\n      });\r\n\r\n      // Force a refresh after syncing storage\r\n      const previews = this.previews.get();\r\n      previews.forEach((preview) => {\r\n        const previewId = this.getPreviewId(preview.baseUrl);\r\n\r\n        if (previewId) {\r\n          this.refreshPreview(previewId);\r\n        }\r\n      });\r\n\r\n      // Reload the page content\r\n      if (typeof window !== 'undefined' && window.location) {\r\n        const iframe = document.querySelector('iframe');\r\n\r\n        if (iframe) {\r\n          iframe.src = iframe.src;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Broadcast storage state to other tabs\r\n  private _broadcastStorageSync() {\r\n    if (typeof window !== 'undefined') {\r\n      const storage: Record<string, string> = {};\r\n\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n\r\n        if (key) {\r\n          storage[key] = localStorage.getItem(key) || '';\r\n        }\r\n      }\r\n\r\n      this.#storageChannel.postMessage({\r\n        type: 'storage-sync',\r\n        storage,\r\n        source: this._getTabId(),\r\n        timestamp: Date.now(),\r\n      });\r\n    }\r\n  }\r\n\r\n  async #init() {\r\n    const webcontainer = await this.#webcontainer;\r\n\r\n    // Listen for server ready events\r\n    webcontainer.on('server-ready', (port, url) => {\r\n      console.log('[Preview] Server ready on port:', port, url);\r\n      this.broadcastUpdate(url);\r\n\r\n      // Initial storage sync when preview is ready\r\n      this._broadcastStorageSync();\r\n    });\r\n\r\n    try {\r\n      // Watch for file changes\r\n      const watcher = await webcontainer.fs.watch('**/*', { persistent: true });\r\n\r\n      // Use the native watch events\r\n      (watcher as any).addEventListener('change', async () => {\r\n        const previews = this.previews.get();\r\n\r\n        for (const preview of previews) {\r\n          const previewId = this.getPreviewId(preview.baseUrl);\r\n\r\n          if (previewId) {\r\n            this.broadcastFileChange(previewId);\r\n          }\r\n        }\r\n      });\r\n\r\n      // Watch for DOM changes that might affect storage\r\n      if (typeof window !== 'undefined') {\r\n        const observer = new MutationObserver((_mutations) => {\r\n          // Broadcast storage changes when DOM changes\r\n          this._broadcastStorageSync();\r\n        });\r\n\r\n        observer.observe(document.body, {\r\n          childList: true,\r\n          subtree: true,\r\n          characterData: true,\r\n          attributes: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('[Preview] Error setting up watchers:', error);\r\n    }\r\n\r\n    // Listen for port events\r\n    webcontainer.on('port', (port, type, url) => {\r\n      let previewInfo = this.#availablePreviews.get(port);\r\n\r\n      if (type === 'close' && previewInfo) {\r\n        this.#availablePreviews.delete(port);\r\n        this.previews.set(this.previews.get().filter((preview) => preview.port !== port));\r\n\r\n        return;\r\n      }\r\n\r\n      const previews = this.previews.get();\r\n\r\n      if (!previewInfo) {\r\n        previewInfo = { port, ready: type === 'open', baseUrl: url };\r\n        this.#availablePreviews.set(port, previewInfo);\r\n        previews.push(previewInfo);\r\n      }\r\n\r\n      previewInfo.ready = type === 'open';\r\n      previewInfo.baseUrl = url;\r\n\r\n      this.previews.set([...previews]);\r\n\r\n      if (type === 'open') {\r\n        this.broadcastUpdate(url);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Helper to extract preview ID from URL\r\n  getPreviewId(url: string): string | null {\r\n    const match = url.match(/^https?:\\/\\/([^.]+)\\.local-credentialless\\.webcontainer-api\\.io/);\r\n    return match ? match[1] : null;\r\n  }\r\n\r\n  // Broadcast state change to all tabs\r\n  broadcastStateChange(previewId: string) {\r\n    const timestamp = Date.now();\r\n    this.#lastUpdate.set(previewId, timestamp);\r\n\r\n    this.#broadcastChannel.postMessage({\r\n      type: 'state-change',\r\n      previewId,\r\n      timestamp,\r\n    });\r\n  }\r\n\r\n  // Broadcast file change to all tabs\r\n  broadcastFileChange(previewId: string) {\r\n    const timestamp = Date.now();\r\n    this.#lastUpdate.set(previewId, timestamp);\r\n\r\n    this.#broadcastChannel.postMessage({\r\n      type: 'file-change',\r\n      previewId,\r\n      timestamp,\r\n    });\r\n  }\r\n\r\n  // Broadcast update to all tabs\r\n  broadcastUpdate(url: string) {\r\n    const previewId = this.getPreviewId(url);\r\n\r\n    if (previewId) {\r\n      const timestamp = Date.now();\r\n      this.#lastUpdate.set(previewId, timestamp);\r\n\r\n      this.#broadcastChannel.postMessage({\r\n        type: 'file-change',\r\n        previewId,\r\n        timestamp,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Method to refresh a specific preview\r\n  refreshPreview(previewId: string) {\r\n    // Clear any pending refresh for this preview\r\n    const existingTimeout = this.#refreshTimeouts.get(previewId);\r\n\r\n    if (existingTimeout) {\r\n      clearTimeout(existingTimeout);\r\n    }\r\n\r\n    // Set a new timeout for this refresh\r\n    const timeout = setTimeout(() => {\r\n      const previews = this.previews.get();\r\n      const preview = previews.find((p) => this.getPreviewId(p.baseUrl) === previewId);\r\n\r\n      if (preview) {\r\n        preview.ready = false;\r\n        this.previews.set([...previews]);\r\n\r\n        requestAnimationFrame(() => {\r\n          preview.ready = true;\r\n          this.previews.set([...previews]);\r\n        });\r\n      }\r\n\r\n      this.#refreshTimeouts.delete(previewId);\r\n    }, this.#REFRESH_DELAY);\r\n\r\n    this.#refreshTimeouts.set(previewId, timeout);\r\n  }\r\n}\r\n\r\n// Create a singleton instance\r\nlet previewsStore: PreviewsStore | null = null;\r\n\r\nexport function usePreviewStore() {\r\n  if (!previewsStore) {\r\n    /*\r\n     * Initialize with a Promise that resolves to WebContainer\r\n     * This should match how you're initializing WebContainer elsewhere\r\n     */\r\n    previewsStore = new PreviewsStore(Promise.resolve({} as WebContainer));\r\n  }\r\n\r\n  return previewsStore;\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3382, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/promises.ts"],"sourcesContent":["export function withResolvers<T>(): PromiseWithResolvers<T> {\r\n  if (typeof Promise.withResolvers === 'function') {\r\n    return Promise.withResolvers();\r\n  }\r\n\r\n  let resolve!: (value: T | PromiseLike<T>) => void;\r\n  let reject!: (reason?: any) => void;\r\n\r\n  const promise = new Promise<T>((_resolve, _reject) => {\r\n    resolve = _resolve;\r\n    reject = _reject;\r\n  });\r\n\r\n  return {\r\n    resolve,\r\n    reject,\r\n    promise,\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;AAAO,SAAS;IACd,IAAI,OAAO,QAAQ,aAAa,KAAK,YAAY;QAC/C,OAAO,QAAQ,aAAa;IAC9B;IAEA,IAAI;IACJ,IAAI;IAEJ,MAAM,UAAU,IAAI,QAAW,CAAC,UAAU;QACxC,UAAU;QACV,SAAS;IACX;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 3407, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/shell.ts"],"sourcesContent":["import type { WebContainer, WebContainerProcess } from '@webcontainer/api';\r\nimport type { ITerminal } from '~/types/terminal';\r\nimport { withResolvers } from './promises';\r\nimport { atom } from 'nanostores';\r\n\r\nexport async function newShellProcess(webcontainer: WebContainer, terminal: ITerminal) {\r\n  const args: string[] = [];\r\n\r\n  // we spawn a JSH process with a fallback cols and rows in case the process is not attached yet to a visible terminal\r\n  const process = await webcontainer.spawn('/bin/jsh', ['--osc', ...args], {\r\n    terminal: {\r\n      cols: terminal.cols ?? 80,\r\n      rows: terminal.rows ?? 15,\r\n    },\r\n  });\r\n\r\n  const input = process.input.getWriter();\r\n  const output = process.output;\r\n\r\n  const jshReady = withResolvers<void>();\r\n\r\n  let isInteractive = false;\r\n  output.pipeTo(\r\n    new WritableStream({\r\n      write(data) {\r\n        if (!isInteractive) {\r\n          const [, osc] = data.match(/\\x1b\\]654;([^\\x07]+)\\x07/) || [];\r\n\r\n          if (osc === 'interactive') {\r\n            // wait until we see the interactive OSC\r\n            isInteractive = true;\r\n\r\n            jshReady.resolve();\r\n          }\r\n        }\r\n\r\n        terminal.write(data);\r\n      },\r\n    }),\r\n  );\r\n\r\n  terminal.onData((data) => {\r\n    // console.log('terminal onData', { data, isInteractive });\r\n\r\n    if (isInteractive) {\r\n      input.write(data);\r\n    }\r\n  });\r\n\r\n  await jshReady.promise;\r\n\r\n  return process;\r\n}\r\n\r\nexport type ExecutionResult = { output: string; exitCode: number } | undefined;\r\n\r\nexport class BoltShell {\r\n  #initialized: (() => void) | undefined;\r\n  #readyPromise: Promise<void>;\r\n  #webcontainer: WebContainer | undefined;\r\n  #terminal: ITerminal | undefined;\r\n  #process: WebContainerProcess | undefined;\r\n  executionState = atom<\r\n    { sessionId: string; active: boolean; executionPrms?: Promise<any>; abort?: () => void } | undefined\r\n  >();\r\n  #outputStream: ReadableStreamDefaultReader<string> | undefined;\r\n  #shellInputStream: WritableStreamDefaultWriter<string> | undefined;\r\n\r\n  constructor() {\r\n    this.#readyPromise = new Promise((resolve) => {\r\n      this.#initialized = resolve;\r\n    });\r\n  }\r\n\r\n  ready() {\r\n    return this.#readyPromise;\r\n  }\r\n\r\n  async init(webcontainer: WebContainer, terminal: ITerminal) {\r\n    this.#webcontainer = webcontainer;\r\n    this.#terminal = terminal;\r\n\r\n    const { process, output } = await this.newBoltShellProcess(webcontainer, terminal);\r\n    this.#process = process;\r\n    this.#outputStream = output.getReader();\r\n    await this.waitTillOscCode('interactive');\r\n    this.#initialized?.();\r\n  }\r\n\r\n  get terminal() {\r\n    return this.#terminal;\r\n  }\r\n\r\n  get process() {\r\n    return this.#process;\r\n  }\r\n\r\n  async executeCommand(sessionId: string, command: string, abort?: () => void): Promise<ExecutionResult> {\r\n    if (!this.process || !this.terminal) {\r\n      return undefined;\r\n    }\r\n\r\n    const state = this.executionState.get();\r\n\r\n    if (state?.active && state.abort) {\r\n      state.abort();\r\n    }\r\n\r\n    /*\r\n     * interrupt the current execution\r\n     *  this.#shellInputStream?.write('\\x03');\r\n     */\r\n    this.terminal.input('\\x03');\r\n    await this.waitTillOscCode('prompt');\r\n\r\n    if (state && state.executionPrms) {\r\n      await state.executionPrms;\r\n    }\r\n\r\n    //start a new execution\r\n    this.terminal.input(command.trim() + '\\n');\r\n\r\n    //wait for the execution to finish\r\n    const executionPromise = this.getCurrentExecutionResult();\r\n    this.executionState.set({ sessionId, active: true, executionPrms: executionPromise, abort });\r\n\r\n    const resp = await executionPromise;\r\n    this.executionState.set({ sessionId, active: false });\r\n\r\n    if (resp) {\r\n      try {\r\n        resp.output = cleanTerminalOutput(resp.output);\r\n      } catch (error) {\r\n        console.log('failed to format terminal output', error);\r\n      }\r\n    }\r\n\r\n    return resp;\r\n  }\r\n\r\n  async newBoltShellProcess(webcontainer: WebContainer, terminal: ITerminal) {\r\n    const args: string[] = [];\r\n\r\n    // we spawn a JSH process with a fallback cols and rows in case the process is not attached yet to a visible terminal\r\n    const process = await webcontainer.spawn('/bin/jsh', ['--osc', ...args], {\r\n      terminal: {\r\n        cols: terminal.cols ?? 80,\r\n        rows: terminal.rows ?? 15,\r\n      },\r\n    });\r\n\r\n    const input = process.input.getWriter();\r\n    this.#shellInputStream = input;\r\n\r\n    const [internalOutput, terminalOutput] = process.output.tee();\r\n\r\n    const jshReady = withResolvers<void>();\r\n\r\n    let isInteractive = false;\r\n    terminalOutput.pipeTo(\r\n      new WritableStream({\r\n        write(data) {\r\n          if (!isInteractive) {\r\n            const [, osc] = data.match(/\\x1b\\]654;([^\\x07]+)\\x07/) || [];\r\n\r\n            if (osc === 'interactive') {\r\n              // wait until we see the interactive OSC\r\n              isInteractive = true;\r\n\r\n              jshReady.resolve();\r\n            }\r\n          }\r\n\r\n          terminal.write(data);\r\n        },\r\n      }),\r\n    );\r\n\r\n    terminal.onData((data) => {\r\n      // console.log('terminal onData', { data, isInteractive });\r\n\r\n      if (isInteractive) {\r\n        input.write(data);\r\n      }\r\n    });\r\n\r\n    await jshReady.promise;\r\n\r\n    return { process, output: internalOutput };\r\n  }\r\n\r\n  async getCurrentExecutionResult(): Promise<ExecutionResult> {\r\n    const { output, exitCode } = await this.waitTillOscCode('exit');\r\n    return { output, exitCode };\r\n  }\r\n\r\n  async waitTillOscCode(waitCode: string) {\r\n    let fullOutput = '';\r\n    let exitCode: number = 0;\r\n\r\n    if (!this.#outputStream) {\r\n      return { output: fullOutput, exitCode };\r\n    }\r\n\r\n    const tappedStream = this.#outputStream;\r\n\r\n    while (true) {\r\n      const { value, done } = await tappedStream.read();\r\n\r\n      if (done) {\r\n        break;\r\n      }\r\n\r\n      const text = value || '';\r\n      fullOutput += text;\r\n\r\n      // Check if command completion signal with exit code\r\n      const [, osc, , , code] = text.match(/\\x1b\\]654;([^\\x07=]+)=?((-?\\d+):(\\d+))?\\x07/) || [];\r\n\r\n      if (osc === 'exit') {\r\n        exitCode = parseInt(code, 10);\r\n      }\r\n\r\n      if (osc === waitCode) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return { output: fullOutput, exitCode };\r\n  }\r\n}\r\n\r\n/**\r\n * Cleans and formats terminal output while preserving structure and paths\r\n * Handles ANSI, OSC, and various terminal control sequences\r\n */\r\nexport function cleanTerminalOutput(input: string): string {\r\n  // Step 1: Remove OSC sequences (including those with parameters)\r\n  const removeOsc = input\r\n    .replace(/\\x1b\\](\\d+;[^\\x07\\x1b]*|\\d+[^\\x07\\x1b]*)\\x07/g, '')\r\n    .replace(/\\](\\d+;[^\\n]*|\\d+[^\\n]*)/g, '');\r\n\r\n  // Step 2: Remove ANSI escape sequences and color codes more thoroughly\r\n  const removeAnsi = removeOsc\r\n    // Remove all escape sequences with parameters\r\n    .replace(/\\u001b\\[[\\?]?[0-9;]*[a-zA-Z]/g, '')\r\n    .replace(/\\x1b\\[[\\?]?[0-9;]*[a-zA-Z]/g, '')\r\n    // Remove color codes\r\n    .replace(/\\u001b\\[[0-9;]*m/g, '')\r\n    .replace(/\\x1b\\[[0-9;]*m/g, '')\r\n    // Clean up any remaining escape characters\r\n    .replace(/\\u001b/g, '')\r\n    .replace(/\\x1b/g, '');\r\n\r\n  // Step 3: Clean up carriage returns and newlines\r\n  const cleanNewlines = removeAnsi\r\n    .replace(/\\r\\n/g, '\\n')\r\n    .replace(/\\r/g, '\\n')\r\n    .replace(/\\n{3,}/g, '\\n\\n');\r\n\r\n  // Step 4: Add newlines at key breakpoints while preserving paths\r\n  const formatOutput = cleanNewlines\r\n    // Preserve prompt line\r\n    .replace(/^([~\\/][^\\n❯]+)❯/m, '$1\\n❯')\r\n    // Add newline before command output indicators\r\n    .replace(/(?<!^|\\n)>/g, '\\n>')\r\n    // Add newline before error keywords without breaking paths\r\n    .replace(/(?<!^|\\n|\\w)(error|failed|warning|Error|Failed|Warning):/g, '\\n$1:')\r\n    // Add newline before 'at' in stack traces without breaking paths\r\n    .replace(/(?<!^|\\n|\\/)(at\\s+(?!async|sync))/g, '\\nat ')\r\n    // Ensure 'at async' stays on same line\r\n    .replace(/\\bat\\s+async/g, 'at async')\r\n    // Add newline before npm error indicators\r\n    .replace(/(?<!^|\\n)(npm ERR!)/g, '\\n$1');\r\n\r\n  // Step 5: Clean up whitespace while preserving intentional spacing\r\n  const cleanSpaces = formatOutput\r\n    .split('\\n')\r\n    .map((line) => line.trim())\r\n    .filter((line) => line.length > 0)\r\n    .join('\\n');\r\n\r\n  // Step 6: Final cleanup\r\n  return cleanSpaces\r\n    .replace(/\\n{3,}/g, '\\n\\n') // Replace multiple newlines with double newlines\r\n    .replace(/:\\s+/g, ': ') // Normalize spacing after colons\r\n    .replace(/\\s{2,}/g, ' ') // Remove multiple spaces\r\n    .replace(/^\\s+|\\s+$/g, '') // Trim start and end\r\n    .replace(/\\u0000/g, ''); // Remove null characters\r\n}\r\n\r\nexport function newBoltShellProcess() {\r\n  return new BoltShell();\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3644, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/terminal.ts"],"sourcesContent":["const reset = '\\x1b[0m';\r\n\r\nexport const escapeCodes = {\r\n  reset,\r\n  clear: '\\x1b[g',\r\n  red: '\\x1b[1;31m',\r\n};\r\n\r\nexport const coloredText = {\r\n  red: (text: string) => `${escapeCodes.red}${text}${reset}`,\r\n};\r\n"],"names":[],"mappings":";;;;AAAA,MAAM,QAAQ;AAEP,MAAM,cAAc;IACzB;IACA,OAAO;IACP,KAAK;AACP;AAEO,MAAM,cAAc;IACzB,KAAK,CAAC,OAAiB,GAAG,YAAY,GAAG,GAAG,OAAO,OAAO;AAC5D","debugId":null}},
    {"offset": {"line": 3663, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/stores/terminal.ts"],"sourcesContent":["import type { WebContainer, WebContainerProcess } from '@webcontainer/api';\r\nimport { atom, type WritableAtom } from 'nanostores';\r\nimport type { ITerminal } from '~/types/terminal';\r\nimport { newBoltShellProcess, newShellProcess } from '~/utils/shell';\r\nimport { coloredText } from '~/utils/terminal';\r\n\r\nexport class TerminalStore {\r\n  #webcontainer: Promise<WebContainer>;\r\n  #terminals: Array<{ terminal: ITerminal; process: WebContainerProcess }> = [];\r\n  #boltTerminal = newBoltShellProcess();\r\n\r\n  showTerminal: WritableAtom<boolean> = import.meta.hot?.data.showTerminal ?? atom(true);\r\n\r\n  constructor(webcontainerPromise: Promise<WebContainer>) {\r\n    this.#webcontainer = webcontainerPromise;\r\n\r\n    if (import.meta.hot) {\r\n      import.meta.hot.data.showTerminal = this.showTerminal;\r\n    }\r\n  }\r\n  get boltTerminal() {\r\n    return this.#boltTerminal;\r\n  }\r\n\r\n  toggleTerminal(value?: boolean) {\r\n    this.showTerminal.set(value !== undefined ? value : !this.showTerminal.get());\r\n  }\r\n  async attachBoltTerminal(terminal: ITerminal) {\r\n    try {\r\n      const wc = await this.#webcontainer;\r\n      await this.#boltTerminal.init(wc, terminal);\r\n    } catch (error: any) {\r\n      terminal.write(coloredText.red('Failed to spawn bolt shell\\n\\n') + error.message);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async attachTerminal(terminal: ITerminal) {\r\n    try {\r\n      const shellProcess = await newShellProcess(await this.#webcontainer, terminal);\r\n      this.#terminals.push({ terminal, process: shellProcess });\r\n    } catch (error: any) {\r\n      terminal.write(coloredText.red('Failed to spawn shell\\n\\n') + error.message);\r\n      return;\r\n    }\r\n  }\r\n\r\n  onTerminalResize(cols: number, rows: number) {\r\n    for (const { process } of this.#terminals) {\r\n      process.resize({ cols, rows });\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AAEA;AACA;;;;;;;;;AAEO,MAAM;IACX,CAAA,YAAa,CAAwB;IACrC,CAAA,SAAU,GAAiE,EAAE,CAAC;IAC9E,CAAA,YAAa,GAAG,CAAA,GAAA,8GAAA,CAAA,sBAAmB,AAAD,IAAI;IAEtC,eAAsC,8BAAY,GAAG,EAAE,KAAK,gBAAgB,CAAA,GAAA,mMAAA,CAAA,OAAI,AAAD,EAAE,MAAM;IAEvF,YAAY,mBAA0C,CAAE;QACtD,IAAI,CAAC,CAAA,YAAa,GAAG;QAErB,IAAI,8BAAY,GAAG,EAAE;YACnB,8BAAY,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY;QACvD;IACF;IACA,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,CAAA,YAAa;IAC3B;IAEA,eAAe,KAAe,EAAE;QAC9B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,YAAY,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG;IAC5E;IACA,MAAM,mBAAmB,QAAmB,EAAE;QAC5C,IAAI;YACF,MAAM,KAAK,MAAM,IAAI,CAAC,CAAA,YAAa;YACnC,MAAM,IAAI,CAAC,CAAA,YAAa,CAAC,IAAI,CAAC,IAAI;QACpC,EAAE,OAAO,OAAY;YACnB,SAAS,KAAK,CAAC,iHAAA,CAAA,cAAW,CAAC,GAAG,CAAC,oCAAoC,MAAM,OAAO;YAChF;QACF;IACF;IAEA,MAAM,eAAe,QAAmB,EAAE;QACxC,IAAI;YACF,MAAM,eAAe,MAAM,CAAA,GAAA,8GAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,IAAI,CAAC,CAAA,YAAa,EAAE;YACrE,IAAI,CAAC,CAAA,SAAU,CAAC,IAAI,CAAC;gBAAE;gBAAU,SAAS;YAAa;QACzD,EAAE,OAAO,OAAY;YACnB,SAAS,KAAK,CAAC,iHAAA,CAAA,cAAW,CAAC,GAAG,CAAC,+BAA+B,MAAM,OAAO;YAC3E;QACF;IACF;IAEA,iBAAiB,IAAY,EAAE,IAAY,EAAE;QAC3C,KAAK,MAAM,EAAE,OAAO,EAAE,IAAI,IAAI,CAAC,CAAA,SAAU,CAAE;YACzC,QAAQ,MAAM,CAAC;gBAAE;gBAAM;YAAK;QAC9B;IACF;AACF","debugId":null}},
    {"offset": {"line": 3730, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/persistence/localStorage.ts"],"sourcesContent":["// Client-side storage utilities\r\nconst isClient = typeof window !== 'undefined' && typeof localStorage !== 'undefined';\r\n\r\nexport function getLocalStorage(key: string): any | null {\r\n  if (!isClient) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const item = localStorage.getItem(key);\r\n    return item ? JSON.parse(item) : null;\r\n  } catch (error) {\r\n    console.error(`Error reading from localStorage key \"${key}\":`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function setLocalStorage(key: string, value: any): void {\r\n  if (!isClient) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    console.error(`Error writing to localStorage key \"${key}\":`, error);\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;;AAChC,MAAM,WAAW,gBAAkB,eAAe,OAAO,iBAAiB;AAEnE,SAAS,gBAAgB,GAAW;IACzC,wCAAe;QACb,OAAO;IACT;;AASF;AAEO,SAAS,gBAAgB,GAAW,EAAE,KAAU;IACrD,wCAAe;QACb;IACF;;AAOF","debugId":null}},
    {"offset": {"line": 3754, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/persistence/db.ts"],"sourcesContent":["import type { Message } from 'ai';\r\nimport { createScopedLogger } from '~/utils/logger';\r\nimport type { ChatHistoryItem } from './useChatHistory';\r\n\r\nexport interface IChatMetadata {\r\n  gitUrl: string;\r\n  gitBranch?: string;\r\n}\r\n\r\nconst logger = createScopedLogger('ChatHistory');\r\n\r\n// this is used at the top level and never rejects\r\nexport async function openDatabase(): Promise<IDBDatabase | undefined> {\r\n  if (typeof indexedDB === 'undefined') {\r\n    console.error('indexedDB is not available in this environment.');\r\n    return undefined;\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    const request = indexedDB.open('boltHistory', 1);\r\n\r\n    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\r\n      const db = (event.target as IDBOpenDBRequest).result;\r\n\r\n      if (!db.objectStoreNames.contains('chats')) {\r\n        const store = db.createObjectStore('chats', { keyPath: 'id' });\r\n        store.createIndex('id', 'id', { unique: true });\r\n        store.createIndex('urlId', 'urlId', { unique: true });\r\n      }\r\n    };\r\n\r\n    request.onsuccess = (event: Event) => {\r\n      resolve((event.target as IDBOpenDBRequest).result);\r\n    };\r\n\r\n    request.onerror = (event: Event) => {\r\n      resolve(undefined);\r\n      logger.error((event.target as IDBOpenDBRequest).error);\r\n    };\r\n  });\r\n}\r\n\r\nexport async function getAll(db: IDBDatabase): Promise<ChatHistoryItem[]> {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction('chats', 'readonly');\r\n    const store = transaction.objectStore('chats');\r\n    const request = store.getAll();\r\n\r\n    request.onsuccess = () => resolve(request.result as ChatHistoryItem[]);\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nexport async function setMessages(\r\n  db: IDBDatabase,\r\n  id: string,\r\n  messages: Message[],\r\n  urlId?: string,\r\n  description?: string,\r\n  timestamp?: string,\r\n  metadata?: IChatMetadata,\r\n): Promise<void> {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction('chats', 'readwrite');\r\n    const store = transaction.objectStore('chats');\r\n\r\n    if (timestamp && isNaN(Date.parse(timestamp))) {\r\n      reject(new Error('Invalid timestamp'));\r\n      return;\r\n    }\r\n\r\n    const request = store.put({\r\n      id,\r\n      messages,\r\n      urlId,\r\n      description,\r\n      timestamp: timestamp ?? new Date().toISOString(),\r\n      metadata,\r\n    });\r\n\r\n    request.onsuccess = () => resolve();\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nexport async function getMessages(db: IDBDatabase, id: string): Promise<ChatHistoryItem> {\r\n  return (await getMessagesById(db, id)) || (await getMessagesByUrlId(db, id));\r\n}\r\n\r\nexport async function getMessagesByUrlId(db: IDBDatabase, id: string): Promise<ChatHistoryItem> {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction('chats', 'readonly');\r\n    const store = transaction.objectStore('chats');\r\n    const index = store.index('urlId');\r\n    const request = index.get(id);\r\n\r\n    request.onsuccess = () => resolve(request.result as ChatHistoryItem);\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nexport async function getMessagesById(db: IDBDatabase, id: string): Promise<ChatHistoryItem> {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction('chats', 'readonly');\r\n    const store = transaction.objectStore('chats');\r\n    const request = store.get(id);\r\n\r\n    request.onsuccess = () => resolve(request.result as ChatHistoryItem);\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nexport async function deleteById(db: IDBDatabase, id: string): Promise<void> {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction('chats', 'readwrite');\r\n    const store = transaction.objectStore('chats');\r\n    const request = store.delete(id);\r\n\r\n    request.onsuccess = () => resolve(undefined);\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nexport async function getNextId(db: IDBDatabase): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction('chats', 'readonly');\r\n    const store = transaction.objectStore('chats');\r\n    const request = store.getAllKeys();\r\n\r\n    request.onsuccess = () => {\r\n      const highestId = request.result.reduce((cur, acc) => Math.max(+cur, +acc), 0);\r\n      resolve(String(+highestId + 1));\r\n    };\r\n\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nexport async function getUrlId(db: IDBDatabase, id: string): Promise<string> {\r\n  const idList = await getUrlIds(db);\r\n\r\n  if (!idList.includes(id)) {\r\n    return id;\r\n  } else {\r\n    let i = 2;\r\n\r\n    while (idList.includes(`${id}-${i}`)) {\r\n      i++;\r\n    }\r\n\r\n    return `${id}-${i}`;\r\n  }\r\n}\r\n\r\nasync function getUrlIds(db: IDBDatabase): Promise<string[]> {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction('chats', 'readonly');\r\n    const store = transaction.objectStore('chats');\r\n    const idList: string[] = [];\r\n\r\n    const request = store.openCursor();\r\n\r\n    request.onsuccess = (event: Event) => {\r\n      const cursor = (event.target as IDBRequest<IDBCursorWithValue>).result;\r\n\r\n      if (cursor) {\r\n        idList.push(cursor.value.urlId);\r\n        cursor.continue();\r\n      } else {\r\n        resolve(idList);\r\n      }\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n\r\nexport async function forkChat(db: IDBDatabase, chatId: string, messageId: string): Promise<string> {\r\n  const chat = await getMessages(db, chatId);\r\n\r\n  if (!chat) {\r\n    throw new Error('Chat not found');\r\n  }\r\n\r\n  // Find the index of the message to fork at\r\n  const messageIndex = chat.messages.findIndex((msg) => msg.id === messageId);\r\n\r\n  if (messageIndex === -1) {\r\n    throw new Error('Message not found');\r\n  }\r\n\r\n  // Get messages up to and including the selected message\r\n  const messages = chat.messages.slice(0, messageIndex + 1);\r\n\r\n  return createChatFromMessages(db, chat.description ? `${chat.description} (fork)` : 'Forked chat', messages);\r\n}\r\n\r\nexport async function duplicateChat(db: IDBDatabase, id: string): Promise<string> {\r\n  const chat = await getMessages(db, id);\r\n\r\n  if (!chat) {\r\n    throw new Error('Chat not found');\r\n  }\r\n\r\n  return createChatFromMessages(db, `${chat.description || 'Chat'} (copy)`, chat.messages);\r\n}\r\n\r\nexport async function createChatFromMessages(\r\n  db: IDBDatabase,\r\n  description: string,\r\n  messages: Message[],\r\n  metadata?: IChatMetadata,\r\n): Promise<string> {\r\n  const newId = await getNextId(db);\r\n  const newUrlId = await getUrlId(db, newId); // Get a new urlId for the duplicated chat\r\n\r\n  await setMessages(\r\n    db,\r\n    newId,\r\n    messages,\r\n    newUrlId, // Use the new urlId\r\n    description,\r\n    undefined, // Use the current timestamp\r\n    metadata,\r\n  );\r\n\r\n  return newUrlId; // Return the urlId instead of id for navigation\r\n}\r\n\r\nexport async function updateChatDescription(db: IDBDatabase, id: string, description: string): Promise<void> {\r\n  const chat = await getMessages(db, id);\r\n\r\n  if (!chat) {\r\n    throw new Error('Chat not found');\r\n  }\r\n\r\n  if (!description.trim()) {\r\n    throw new Error('Description cannot be empty');\r\n  }\r\n\r\n  await setMessages(db, id, chat.messages, chat.urlId, description, chat.timestamp, chat.metadata);\r\n}\r\n\r\nexport async function updateChatMetadata(\r\n  db: IDBDatabase,\r\n  id: string,\r\n  metadata: IChatMetadata | undefined,\r\n): Promise<void> {\r\n  const chat = await getMessages(db, id);\r\n\r\n  if (!chat) {\r\n    throw new Error('Chat not found');\r\n  }\r\n\r\n  await setMessages(db, id, chat.messages, chat.urlId, chat.description, chat.timestamp, metadata);\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3957, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/stores/logs.ts"],"sourcesContent":["import { atom, map } from 'nanostores';\r\nimport Cookies from 'js-cookie';\r\nimport { createScopedLogger } from '../../utils/logger';\r\n\r\nconst logger = createScopedLogger('LogStore');\r\n\r\nexport interface LogEntry {\r\n  id: string;\r\n  timestamp: string;\r\n  level: 'info' | 'warning' | 'error' | 'debug';\r\n  message: string;\r\n  details?: Record<string, any>;\r\n  category:\r\n    | 'system'\r\n    | 'provider'\r\n    | 'user'\r\n    | 'error'\r\n    | 'api'\r\n    | 'auth'\r\n    | 'database'\r\n    | 'network'\r\n    | 'performance'\r\n    | 'settings'\r\n    | 'task'\r\n    | 'update'\r\n    | 'feature';\r\n  subCategory?: string;\r\n  duration?: number;\r\n  statusCode?: number;\r\n  source?: string;\r\n  stack?: string;\r\n  metadata?: {\r\n    component?: string;\r\n    action?: string;\r\n    userId?: string;\r\n    sessionId?: string;\r\n    previousValue?: any;\r\n    newValue?: any;\r\n  };\r\n}\r\n\r\ninterface LogDetails extends Record<string, any> {\r\n  type: string;\r\n  message: string;\r\n}\r\n\r\nconst MAX_LOGS = 1000; // Maximum number of logs to keep in memory\r\n\r\nclass LogStore {\r\n  private _logs = map<Record<string, LogEntry>>({});\r\n  showLogs = atom(true);\r\n  private _readLogs = new Set<string>();\r\n\r\n  constructor() {\r\n    // Load saved logs from cookies on initialization\r\n    this._loadLogs();\r\n\r\n    // Only load read logs in browser environment\r\n    if (typeof window !== 'undefined') {\r\n      this._loadReadLogs();\r\n    }\r\n  }\r\n\r\n  // Expose the logs store for subscription\r\n  get logs() {\r\n    return this._logs;\r\n  }\r\n\r\n  private _loadLogs() {\r\n    const savedLogs = Cookies.get('eventLogs');\r\n\r\n    if (savedLogs) {\r\n      try {\r\n        const parsedLogs = JSON.parse(savedLogs);\r\n        this._logs.set(parsedLogs);\r\n      } catch (error) {\r\n        logger.error('Failed to parse logs from cookies:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _loadReadLogs() {\r\n    if (typeof window === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    const savedReadLogs = localStorage.getItem('bolt_read_logs');\r\n\r\n    if (savedReadLogs) {\r\n      try {\r\n        const parsedReadLogs = JSON.parse(savedReadLogs);\r\n        this._readLogs = new Set(parsedReadLogs);\r\n      } catch (error) {\r\n        logger.error('Failed to parse read logs:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _saveLogs() {\r\n    const currentLogs = this._logs.get();\r\n    Cookies.set('eventLogs', JSON.stringify(currentLogs));\r\n  }\r\n\r\n  private _saveReadLogs() {\r\n    if (typeof window === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem('bolt_read_logs', JSON.stringify(Array.from(this._readLogs)));\r\n  }\r\n\r\n  private _generateId(): string {\r\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private _trimLogs() {\r\n    const currentLogs = Object.entries(this._logs.get());\r\n\r\n    if (currentLogs.length > MAX_LOGS) {\r\n      const sortedLogs = currentLogs.sort(\r\n        ([, a], [, b]) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime(),\r\n      );\r\n      const newLogs = Object.fromEntries(sortedLogs.slice(0, MAX_LOGS));\r\n      this._logs.set(newLogs);\r\n    }\r\n  }\r\n\r\n  // Base log method for general logging\r\n  private _addLog(\r\n    message: string,\r\n    level: LogEntry['level'],\r\n    category: LogEntry['category'],\r\n    details?: Record<string, any>,\r\n    metadata?: LogEntry['metadata'],\r\n  ) {\r\n    const id = this._generateId();\r\n    const entry: LogEntry = {\r\n      id,\r\n      timestamp: new Date().toISOString(),\r\n      level,\r\n      message,\r\n      details,\r\n      category,\r\n      metadata,\r\n    };\r\n\r\n    this._logs.setKey(id, entry);\r\n    this._trimLogs();\r\n    this._saveLogs();\r\n\r\n    return id;\r\n  }\r\n\r\n  // Specialized method for API logging\r\n  private _addApiLog(\r\n    message: string,\r\n    method: string,\r\n    url: string,\r\n    details: {\r\n      method: string;\r\n      url: string;\r\n      statusCode: number;\r\n      duration: number;\r\n      request: any;\r\n      response: any;\r\n    },\r\n  ) {\r\n    const statusCode = details.statusCode;\r\n    return this._addLog(message, statusCode >= 400 ? 'error' : 'info', 'api', details, {\r\n      component: 'api',\r\n      action: method,\r\n    });\r\n  }\r\n\r\n  // System events\r\n  logSystem(message: string, details?: Record<string, any>) {\r\n    return this._addLog(message, 'info', 'system', details);\r\n  }\r\n\r\n  // Provider events\r\n  logProvider(message: string, details?: Record<string, any>) {\r\n    return this._addLog(message, 'info', 'provider', details);\r\n  }\r\n\r\n  // User actions\r\n  logUserAction(message: string, details?: Record<string, any>) {\r\n    return this._addLog(message, 'info', 'user', details);\r\n  }\r\n\r\n  // API Connection Logging\r\n  logAPIRequest(endpoint: string, method: string, duration: number, statusCode: number, details?: Record<string, any>) {\r\n    const message = `${method} ${endpoint} - ${statusCode} (${duration}ms)`;\r\n    const level = statusCode >= 400 ? 'error' : statusCode >= 300 ? 'warning' : 'info';\r\n\r\n    return this._addLog(message, level, 'api', {\r\n      ...details,\r\n      endpoint,\r\n      method,\r\n      duration,\r\n      statusCode,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n  }\r\n\r\n  // Authentication Logging\r\n  logAuth(\r\n    action: 'login' | 'logout' | 'token_refresh' | 'key_validation',\r\n    success: boolean,\r\n    details?: Record<string, any>,\r\n  ) {\r\n    const message = `Auth ${action} - ${success ? 'Success' : 'Failed'}`;\r\n    const level = success ? 'info' : 'error';\r\n\r\n    return this._addLog(message, level, 'auth', {\r\n      ...details,\r\n      action,\r\n      success,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n  }\r\n\r\n  // Network Status Logging\r\n  logNetworkStatus(status: 'online' | 'offline' | 'reconnecting' | 'connected', details?: Record<string, any>) {\r\n    const message = `Network ${status}`;\r\n    const level = status === 'offline' ? 'error' : status === 'reconnecting' ? 'warning' : 'info';\r\n\r\n    return this._addLog(message, level, 'network', {\r\n      ...details,\r\n      status,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n  }\r\n\r\n  // Database Operations Logging\r\n  logDatabase(operation: string, success: boolean, duration: number, details?: Record<string, any>) {\r\n    const message = `DB ${operation} - ${success ? 'Success' : 'Failed'} (${duration}ms)`;\r\n    const level = success ? 'info' : 'error';\r\n\r\n    return this._addLog(message, level, 'database', {\r\n      ...details,\r\n      operation,\r\n      success,\r\n      duration,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n  }\r\n\r\n  // Error events\r\n  logError(message: string, error?: Error | unknown, details?: Record<string, any>) {\r\n    const errorDetails =\r\n      error instanceof Error\r\n        ? {\r\n            name: error.name,\r\n            message: error.message,\r\n            stack: error.stack,\r\n            ...details,\r\n          }\r\n        : { error, ...details };\r\n\r\n    return this._addLog(message, 'error', 'error', errorDetails);\r\n  }\r\n\r\n  // Warning events\r\n  logWarning(message: string, details?: Record<string, any>) {\r\n    return this._addLog(message, 'warning', 'system', details);\r\n  }\r\n\r\n  // Debug events\r\n  logDebug(message: string, details?: Record<string, any>) {\r\n    return this._addLog(message, 'debug', 'system', details);\r\n  }\r\n\r\n  clearLogs() {\r\n    this._logs.set({});\r\n    this._saveLogs();\r\n  }\r\n\r\n  getLogs() {\r\n    return Object.values(this._logs.get()).sort(\r\n      (a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime(),\r\n    );\r\n  }\r\n\r\n  getFilteredLogs(level?: LogEntry['level'], category?: LogEntry['category'], searchQuery?: string) {\r\n    return this.getLogs().filter((log) => {\r\n      const matchesLevel = !level || level === 'debug' || log.level === level;\r\n      const matchesCategory = !category || log.category === category;\r\n      const matchesSearch =\r\n        !searchQuery ||\r\n        log.message.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        JSON.stringify(log.details).toLowerCase().includes(searchQuery.toLowerCase());\r\n\r\n      return matchesLevel && matchesCategory && matchesSearch;\r\n    });\r\n  }\r\n\r\n  markAsRead(logId: string) {\r\n    this._readLogs.add(logId);\r\n    this._saveReadLogs();\r\n  }\r\n\r\n  isRead(logId: string): boolean {\r\n    return this._readLogs.has(logId);\r\n  }\r\n\r\n  clearReadLogs() {\r\n    this._readLogs.clear();\r\n    this._saveReadLogs();\r\n  }\r\n\r\n  // API interactions\r\n  logApiCall(\r\n    method: string,\r\n    endpoint: string,\r\n    statusCode: number,\r\n    duration: number,\r\n    requestData?: any,\r\n    responseData?: any,\r\n  ) {\r\n    return this._addLog(\r\n      `API ${method} ${endpoint}`,\r\n      statusCode >= 400 ? 'error' : 'info',\r\n      'api',\r\n      {\r\n        method,\r\n        endpoint,\r\n        statusCode,\r\n        duration,\r\n        request: requestData,\r\n        response: responseData,\r\n      },\r\n      {\r\n        component: 'api',\r\n        action: method,\r\n      },\r\n    );\r\n  }\r\n\r\n  // Network operations\r\n  logNetworkRequest(\r\n    method: string,\r\n    url: string,\r\n    statusCode: number,\r\n    duration: number,\r\n    requestData?: any,\r\n    responseData?: any,\r\n  ) {\r\n    return this._addLog(\r\n      `${method} ${url}`,\r\n      statusCode >= 400 ? 'error' : 'info',\r\n      'network',\r\n      {\r\n        method,\r\n        url,\r\n        statusCode,\r\n        duration,\r\n        request: requestData,\r\n        response: responseData,\r\n      },\r\n      {\r\n        component: 'network',\r\n        action: method,\r\n      },\r\n    );\r\n  }\r\n\r\n  // Authentication events\r\n  logAuthEvent(event: string, success: boolean, details?: Record<string, any>) {\r\n    return this._addLog(\r\n      `Auth ${event} ${success ? 'succeeded' : 'failed'}`,\r\n      success ? 'info' : 'error',\r\n      'auth',\r\n      details,\r\n      {\r\n        component: 'auth',\r\n        action: event,\r\n      },\r\n    );\r\n  }\r\n\r\n  // Performance tracking\r\n  logPerformance(operation: string, duration: number, details?: Record<string, any>) {\r\n    return this._addLog(\r\n      `Performance: ${operation}`,\r\n      duration > 1000 ? 'warning' : 'info',\r\n      'performance',\r\n      {\r\n        operation,\r\n        duration,\r\n        ...details,\r\n      },\r\n      {\r\n        component: 'performance',\r\n        action: 'metric',\r\n      },\r\n    );\r\n  }\r\n\r\n  // Error handling\r\n  logErrorWithStack(error: Error, category: LogEntry['category'] = 'error', details?: Record<string, any>) {\r\n    return this._addLog(\r\n      error.message,\r\n      'error',\r\n      category,\r\n      {\r\n        ...details,\r\n        name: error.name,\r\n        stack: error.stack,\r\n      },\r\n      {\r\n        component: category,\r\n        action: 'error',\r\n      },\r\n    );\r\n  }\r\n\r\n  // Refresh logs (useful for real-time updates)\r\n  refreshLogs() {\r\n    const currentLogs = this._logs.get();\r\n    this._logs.set({ ...currentLogs });\r\n  }\r\n\r\n  // Enhanced logging methods\r\n  logInfo(message: string, details: LogDetails) {\r\n    return this._addLog(message, 'info', 'system', details);\r\n  }\r\n\r\n  logSuccess(message: string, details: LogDetails) {\r\n    return this._addLog(message, 'info', 'system', { ...details, success: true });\r\n  }\r\n\r\n  logApiRequest(\r\n    method: string,\r\n    url: string,\r\n    details: {\r\n      method: string;\r\n      url: string;\r\n      statusCode: number;\r\n      duration: number;\r\n      request: any;\r\n      response: any;\r\n    },\r\n  ) {\r\n    return this._addApiLog(`API ${method} ${url}`, method, url, details);\r\n  }\r\n\r\n  logSettingsChange(component: string, setting: string, oldValue: any, newValue: any) {\r\n    return this._addLog(\r\n      `Settings changed in ${component}: ${setting}`,\r\n      'info',\r\n      'settings',\r\n      {\r\n        setting,\r\n        previousValue: oldValue,\r\n        newValue,\r\n      },\r\n      {\r\n        component,\r\n        action: 'settings_change',\r\n        previousValue: oldValue,\r\n        newValue,\r\n      },\r\n    );\r\n  }\r\n\r\n  logFeatureToggle(featureId: string, enabled: boolean) {\r\n    return this._addLog(\r\n      `Feature ${featureId} ${enabled ? 'enabled' : 'disabled'}`,\r\n      'info',\r\n      'feature',\r\n      { featureId, enabled },\r\n      {\r\n        component: 'features',\r\n        action: 'feature_toggle',\r\n      },\r\n    );\r\n  }\r\n\r\n  logTaskOperation(taskId: string, operation: string, status: string, details?: any) {\r\n    return this._addLog(\r\n      `Task ${taskId}: ${operation} - ${status}`,\r\n      'info',\r\n      'task',\r\n      { taskId, operation, status, ...details },\r\n      {\r\n        component: 'task-manager',\r\n        action: 'task_operation',\r\n      },\r\n    );\r\n  }\r\n\r\n  logProviderAction(provider: string, action: string, success: boolean, details?: any) {\r\n    return this._addLog(\r\n      `Provider ${provider}: ${action} - ${success ? 'Success' : 'Failed'}`,\r\n      success ? 'info' : 'error',\r\n      'provider',\r\n      { provider, action, success, ...details },\r\n      {\r\n        component: 'providers',\r\n        action: 'provider_action',\r\n      },\r\n    );\r\n  }\r\n\r\n  logPerformanceMetric(component: string, operation: string, duration: number, details?: any) {\r\n    return this._addLog(\r\n      `Performance: ${component} - ${operation} took ${duration}ms`,\r\n      duration > 1000 ? 'warning' : 'info',\r\n      'performance',\r\n      { component, operation, duration, ...details },\r\n      {\r\n        component,\r\n        action: 'performance_metric',\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nexport const logStore = new LogStore();\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4293, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/persistence/useChatHistory.ts"],"sourcesContent":["import { useLoaderData, useNavigate, useSearchParams } from '@remix-run/react';\r\nimport { useState, useEffect } from 'react';\r\nimport { atom } from 'nanostores';\r\nimport type { Message } from 'ai';\r\nimport { toast } from 'react-toastify';\r\nimport { workbenchStore } from '~/lib/stores/workbench';\r\nimport { logStore } from '~/lib/stores/logs'; // Import logStore\r\nimport {\r\n  getMessages,\r\n  getNextId,\r\n  getUrlId,\r\n  openDatabase,\r\n  setMessages,\r\n  duplicateChat,\r\n  createChatFromMessages,\r\n  type IChatMetadata,\r\n} from './db';\r\n\r\nexport interface ChatHistoryItem {\r\n  id: string;\r\n  urlId?: string;\r\n  description?: string;\r\n  messages: Message[];\r\n  timestamp: string;\r\n  metadata?: IChatMetadata;\r\n}\r\n\r\nconst persistenceEnabled = !import.meta.env.VITE_DISABLE_PERSISTENCE;\r\n\r\nexport const db = persistenceEnabled ? await openDatabase() : undefined;\r\n\r\nexport const chatId = atom<string | undefined>(undefined);\r\nexport const description = atom<string | undefined>(undefined);\r\nexport const chatMetadata = atom<IChatMetadata | undefined>(undefined);\r\nexport function useChatHistory() {\r\n  const navigate = useNavigate();\r\n  const { id: mixedId } = useLoaderData<{ id?: string }>();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const [initialMessages, setInitialMessages] = useState<Message[]>([]);\r\n  const [ready, setReady] = useState<boolean>(false);\r\n  const [urlId, setUrlId] = useState<string | undefined>();\r\n\r\n  useEffect(() => {\r\n    if (!db) {\r\n      setReady(true);\r\n\r\n      if (persistenceEnabled) {\r\n        const error = new Error('Chat persistence is unavailable');\r\n        logStore.logError('Chat persistence initialization failed', error);\r\n        toast.error('Chat persistence is unavailable');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (mixedId) {\r\n      getMessages(db, mixedId)\r\n        .then((storedMessages) => {\r\n          if (storedMessages && storedMessages.messages.length > 0) {\r\n            const rewindId = searchParams.get('rewindTo');\r\n            const filteredMessages = rewindId\r\n              ? storedMessages.messages.slice(0, storedMessages.messages.findIndex((m) => m.id === rewindId) + 1)\r\n              : storedMessages.messages;\r\n\r\n            setInitialMessages(filteredMessages);\r\n            setUrlId(storedMessages.urlId);\r\n            description.set(storedMessages.description);\r\n            chatId.set(storedMessages.id);\r\n            chatMetadata.set(storedMessages.metadata);\r\n          } else {\r\n            navigate('/', { replace: true });\r\n          }\r\n\r\n          setReady(true);\r\n        })\r\n        .catch((error) => {\r\n          logStore.logError('Failed to load chat messages', error);\r\n          toast.error(error.message);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    ready: !mixedId || ready,\r\n    initialMessages,\r\n    updateChatMestaData: async (metadata: IChatMetadata) => {\r\n      const id = chatId.get();\r\n\r\n      if (!db || !id) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await setMessages(db, id, initialMessages, urlId, description.get(), undefined, metadata);\r\n        chatMetadata.set(metadata);\r\n      } catch (error) {\r\n        toast.error('Failed to update chat metadata');\r\n        console.error(error);\r\n      }\r\n    },\r\n    storeMessageHistory: async (messages: Message[]) => {\r\n      if (!db || messages.length === 0) {\r\n        return;\r\n      }\r\n\r\n      const { firstArtifact } = workbenchStore;\r\n\r\n      if (!urlId && firstArtifact?.id) {\r\n        const urlId = await getUrlId(db, firstArtifact.id);\r\n\r\n        navigateChat(urlId);\r\n        setUrlId(urlId);\r\n      }\r\n\r\n      if (!description.get() && firstArtifact?.title) {\r\n        description.set(firstArtifact?.title);\r\n      }\r\n\r\n      if (initialMessages.length === 0 && !chatId.get()) {\r\n        const nextId = await getNextId(db);\r\n\r\n        chatId.set(nextId);\r\n\r\n        if (!urlId) {\r\n          navigateChat(nextId);\r\n        }\r\n      }\r\n\r\n      await setMessages(db, chatId.get() as string, messages, urlId, description.get(), undefined, chatMetadata.get());\r\n    },\r\n    duplicateCurrentChat: async (listItemId: string) => {\r\n      if (!db || (!mixedId && !listItemId)) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const newId = await duplicateChat(db, mixedId || listItemId);\r\n        navigate(`/chat/${newId}`);\r\n        toast.success('Chat duplicated successfully');\r\n      } catch (error) {\r\n        toast.error('Failed to duplicate chat');\r\n        console.log(error);\r\n      }\r\n    },\r\n    importChat: async (description: string, messages: Message[], metadata?: IChatMetadata) => {\r\n      if (!db) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const newId = await createChatFromMessages(db, description, messages, metadata);\r\n        window.location.href = `/chat/${newId}`;\r\n        toast.success('Chat imported successfully');\r\n      } catch (error) {\r\n        if (error instanceof Error) {\r\n          toast.error('Failed to import chat: ' + error.message);\r\n        } else {\r\n          toast.error('Failed to import chat');\r\n        }\r\n      }\r\n    },\r\n    exportChat: async (id = urlId) => {\r\n      if (!db || !id) {\r\n        return;\r\n      }\r\n\r\n      const chat = await getMessages(db, id);\r\n      const chatData = {\r\n        messages: chat.messages,\r\n        description: chat.description,\r\n        exportDate: new Date().toISOString(),\r\n      };\r\n\r\n      const blob = new Blob([JSON.stringify(chatData, null, 2)], { type: 'application/json' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `chat-${new Date().toISOString()}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n    },\r\n  };\r\n}\r\n\r\nfunction navigateChat(nextId: string) {\r\n  /**\r\n   * FIXME: Using the intended navigate function causes a rerender for <Chat /> that breaks the app.\r\n   *\r\n   * `navigate(`/chat/${nextId}`, { replace: true });`\r\n   */\r\n  const url = new URL(window.location.href);\r\n  url.pathname = `/chat/${nextId}`;\r\n\r\n  window.history.replaceState({}, '', url);\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA,4MAA8C,kBAAkB;AAChE;;;;;;;;;;;;;;;;;AAoBA,MAAM,qBAAqB,CAAC,8BAAY,GAAG,CAAC,wBAAwB;AAE7D,MAAM,KAAK,qBAAqB,MAAM,CAAA,GAAA,wHAAA,CAAA,eAAY,AAAD,MAAM;AAEvD,MAAM,SAAS,CAAA,GAAA,mMAAA,CAAA,OAAI,AAAD,EAAsB;AACxC,MAAM,cAAc,CAAA,GAAA,mMAAA,CAAA,OAAI,AAAD,EAAsB;AAC7C,MAAM,eAAe,CAAA,GAAA,mMAAA,CAAA,OAAI,AAAD,EAA6B;AACrD,SAAS;IACd,MAAM,WAAW;IACjB,MAAM,EAAE,IAAI,OAAO,EAAE,GAAG;IACxB,MAAM,CAAC,aAAa,GAAG;IAEvB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACpE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAW;IAC5C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD;IAEjC,CAAA,GAAA,oTAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,IAAI;YACP,SAAS;YAET,IAAI,oBAAoB;gBACtB,MAAM,QAAQ,IAAI,MAAM;gBACxB,qHAAA,CAAA,WAAQ,CAAC,QAAQ,CAAC,0CAA0C;gBAC5D,yPAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACd;YAEA;QACF;QAEA,IAAI,SAAS;YACX,CAAA,GAAA,wHAAA,CAAA,cAAW,AAAD,EAAE,IAAI,SACb,IAAI,CAAC,CAAC;gBACL,IAAI,kBAAkB,eAAe,QAAQ,CAAC,MAAM,GAAG,GAAG;oBACxD,MAAM,WAAW,aAAa,GAAG,CAAC;oBAClC,MAAM,mBAAmB,WACrB,eAAe,QAAQ,CAAC,KAAK,CAAC,GAAG,eAAe,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,YAAY,KAC/F,eAAe,QAAQ;oBAE3B,mBAAmB;oBACnB,SAAS,eAAe,KAAK;oBAC7B,YAAY,GAAG,CAAC,eAAe,WAAW;oBAC1C,OAAO,GAAG,CAAC,eAAe,EAAE;oBAC5B,aAAa,GAAG,CAAC,eAAe,QAAQ;gBAC1C,OAAO;oBACL,SAAS,KAAK;wBAAE,SAAS;oBAAK;gBAChC;gBAEA,SAAS;YACX,GACC,KAAK,CAAC,CAAC;gBACN,qHAAA,CAAA,WAAQ,CAAC,QAAQ,CAAC,gCAAgC;gBAClD,yPAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;YAC3B;QACJ;IACF,GAAG,EAAE;IAEL,OAAO;QACL,OAAO,CAAC,WAAW;QACnB;QACA,qBAAqB,OAAO;YAC1B,MAAM,KAAK,OAAO,GAAG;YAErB,IAAI,CAAC,MAAM,CAAC,IAAI;gBACd;YACF;YAEA,IAAI;gBACF,MAAM,CAAA,GAAA,wHAAA,CAAA,cAAW,AAAD,EAAE,IAAI,IAAI,iBAAiB,OAAO,YAAY,GAAG,IAAI,WAAW;gBAChF,aAAa,GAAG,CAAC;YACnB,EAAE,OAAO,OAAO;gBACd,yPAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gBACZ,QAAQ,KAAK,CAAC;YAChB;QACF;QACA,qBAAqB,OAAO;YAC1B,IAAI,CAAC,MAAM,SAAS,MAAM,KAAK,GAAG;gBAChC;YACF;YAEA,MAAM,EAAE,aAAa,EAAE,GAAG,0HAAA,CAAA,iBAAc;YAExC,IAAI,CAAC,SAAS,eAAe,IAAI;gBAC/B,MAAM,QAAQ,MAAM,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,cAAc,EAAE;gBAEjD,aAAa;gBACb,SAAS;YACX;YAEA,IAAI,CAAC,YAAY,GAAG,MAAM,eAAe,OAAO;gBAC9C,YAAY,GAAG,CAAC,eAAe;YACjC;YAEA,IAAI,gBAAgB,MAAM,KAAK,KAAK,CAAC,OAAO,GAAG,IAAI;gBACjD,MAAM,SAAS,MAAM,CAAA,GAAA,wHAAA,CAAA,YAAS,AAAD,EAAE;gBAE/B,OAAO,GAAG,CAAC;gBAEX,IAAI,CAAC,OAAO;oBACV,aAAa;gBACf;YACF;YAEA,MAAM,CAAA,GAAA,wHAAA,CAAA,cAAW,AAAD,EAAE,IAAI,OAAO,GAAG,IAAc,UAAU,OAAO,YAAY,GAAG,IAAI,WAAW,aAAa,GAAG;QAC/G;QACA,sBAAsB,OAAO;YAC3B,IAAI,CAAC,MAAO,CAAC,WAAW,CAAC,YAAa;gBACpC;YACF;YAEA,IAAI;gBACF,MAAM,QAAQ,MAAM,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD,EAAE,IAAI,WAAW;gBACjD,SAAS,CAAC,MAAM,EAAE,OAAO;gBACzB,yPAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAChB,EAAE,OAAO,OAAO;gBACd,yPAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gBACZ,QAAQ,GAAG,CAAC;YACd;QACF;QACA,YAAY,OAAO,aAAqB,UAAqB;YAC3D,IAAI,CAAC,IAAI;gBACP;YACF;YAEA,IAAI;gBACF,MAAM,QAAQ,MAAM,CAAA,GAAA,wHAAA,CAAA,yBAAsB,AAAD,EAAE,IAAI,aAAa,UAAU;gBACtE,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,OAAO;gBACvC,yPAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAChB,EAAE,OAAO,OAAO;gBACd,IAAI,iBAAiB,OAAO;oBAC1B,yPAAA,CAAA,QAAK,CAAC,KAAK,CAAC,4BAA4B,MAAM,OAAO;gBACvD,OAAO;oBACL,yPAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gBACd;YACF;QACF;QACA,YAAY,OAAO,KAAK,KAAK;YAC3B,IAAI,CAAC,MAAM,CAAC,IAAI;gBACd;YACF;YAEA,MAAM,OAAO,MAAM,CAAA,GAAA,wHAAA,CAAA,cAAW,AAAD,EAAE,IAAI;YACnC,MAAM,WAAW;gBACf,UAAU,KAAK,QAAQ;gBACvB,aAAa,KAAK,WAAW;gBAC7B,YAAY,IAAI,OAAO,WAAW;YACpC;YAEA,MAAM,OAAO,IAAI,KAAK;gBAAC,KAAK,SAAS,CAAC,UAAU,MAAM;aAAG,EAAE;gBAAE,MAAM;YAAmB;YACtF,MAAM,MAAM,IAAI,eAAe,CAAC;YAChC,MAAM,IAAI,SAAS,aAAa,CAAC;YACjC,EAAE,IAAI,GAAG;YACT,EAAE,QAAQ,GAAG,CAAC,KAAK,EAAE,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC;YACpD,SAAS,IAAI,CAAC,WAAW,CAAC;YAC1B,EAAE,KAAK;YACP,SAAS,IAAI,CAAC,WAAW,CAAC;YAC1B,IAAI,eAAe,CAAC;QACtB;IACF;AACF;AAEA,SAAS,aAAa,MAAc;IAClC;;;;GAIC,GACD,MAAM,MAAM,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI;IACxC,IAAI,QAAQ,GAAG,CAAC,MAAM,EAAE,QAAQ;IAEhC,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI;AACtC","debugId":null}},
    {"offset": {"line": 4480, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 4506, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/utils/sampler.ts"],"sourcesContent":["/**\r\n * Creates a function that samples calls at regular intervals and captures trailing calls.\r\n * - Drops calls that occur between sampling intervals\r\n * - Takes one call per sampling interval if available\r\n * - Captures the last call if no call was made during the interval\r\n *\r\n * @param fn The function to sample\r\n * @param sampleInterval How often to sample calls (in ms)\r\n * @returns The sampled function\r\n */\r\nexport function createSampler<T extends (...args: any[]) => any>(fn: T, sampleInterval: number): T {\r\n  let lastArgs: Parameters<T> | null = null;\r\n  let lastTime = 0;\r\n  let timeout: NodeJS.Timeout | null = null;\r\n\r\n  // Create a function with the same type as the input function\r\n  const sampled = function (this: any, ...args: Parameters<T>) {\r\n    const now = Date.now();\r\n    lastArgs = args;\r\n\r\n    // If we're within the sample interval, just store the args\r\n    if (now - lastTime < sampleInterval) {\r\n      // Set up trailing call if not already set\r\n      if (!timeout) {\r\n        timeout = setTimeout(\r\n          () => {\r\n            timeout = null;\r\n            lastTime = Date.now();\r\n\r\n            if (lastArgs) {\r\n              fn.apply(this, lastArgs);\r\n              lastArgs = null;\r\n            }\r\n          },\r\n          sampleInterval - (now - lastTime),\r\n        );\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // If we're outside the interval, execute immediately\r\n    lastTime = now;\r\n    fn.apply(this, args);\r\n    lastArgs = null;\r\n  } as T;\r\n\r\n  return sampled;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC;;;AACM,SAAS,cAAiD,EAAK,EAAE,cAAsB;IAC5F,IAAI,WAAiC;IACrC,IAAI,WAAW;IACf,IAAI,UAAiC;IAErC,6DAA6D;IAC7D,MAAM,UAAU,SAAqB,GAAG,IAAmB;QACzD,MAAM,MAAM,KAAK,GAAG;QACpB,WAAW;QAEX,2DAA2D;QAC3D,IAAI,MAAM,WAAW,gBAAgB;YACnC,0CAA0C;YAC1C,IAAI,CAAC,SAAS;gBACZ,UAAU,WACR;oBACE,UAAU;oBACV,WAAW,KAAK,GAAG;oBAEnB,IAAI,UAAU;wBACZ,GAAG,KAAK,CAAC,IAAI,EAAE;wBACf,WAAW;oBACb;gBACF,GACA,iBAAiB,CAAC,MAAM,QAAQ;YAEpC;YAEA;QACF;QAEA,qDAAqD;QACrD,WAAW;QACX,GAAG,KAAK,CAAC,IAAI,EAAE;QACf,WAAW;IACb;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 4554, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/lib/stores/workbench.ts"],"sourcesContent":["import { atom, map, type MapStore, type ReadableAtom, type WritableAtom } from 'nanostores';\r\nimport type { EditorDocument, ScrollPosition } from '~/components/editor/codemirror/CodeMirrorEditor';\r\nimport { ActionRunner } from '~/lib/runtime/action-runner';\r\nimport type { ActionCallbackData, ArtifactCallbackData } from '~/lib/runtime/message-parser';\r\nimport { webcontainer } from '~/lib/webcontainer';\r\nimport type { ITerminal } from '~/types/terminal';\r\nimport { unreachable } from '~/utils/unreachable';\r\nimport { EditorStore } from './editor';\r\nimport { FilesStore, type FileMap } from './files';\r\nimport { PreviewsStore } from './previews';\r\nimport { TerminalStore } from './terminal';\r\nimport JSZip from 'jszip';\r\nimport fileSaver from 'file-saver';\r\nimport { Octokit, type RestEndpointMethodTypes } from '@octokit/rest';\r\nimport { path } from '~/utils/path';\r\nimport { extractRelativePath } from '~/utils/diff';\r\nimport { description } from '~/lib/persistence';\r\nimport Cookies from 'js-cookie';\r\nimport { createSampler } from '~/utils/sampler';\r\nimport type { ActionAlert } from '~/types/actions';\r\n\r\n// Destructure saveAs from the CommonJS module\r\nconst { saveAs } = fileSaver;\r\n\r\nexport interface ArtifactState {\r\n  id: string;\r\n  title: string;\r\n  type?: string;\r\n  closed: boolean;\r\n  runner: ActionRunner;\r\n}\r\n\r\nexport type ArtifactUpdateState = Pick<ArtifactState, 'title' | 'closed'>;\r\n\r\ntype Artifacts = MapStore<Record<string, ArtifactState>>;\r\n\r\nexport type WorkbenchViewType = 'code' | 'preview';\r\n\r\nexport class WorkbenchStore {\r\n  #previewsStore = new PreviewsStore(webcontainer);\r\n  #filesStore = new FilesStore(webcontainer);\r\n  #editorStore = new EditorStore(this.#filesStore);\r\n  #terminalStore = new TerminalStore(webcontainer);\r\n\r\n  #reloadedMessages = new Set<string>();\r\n\r\n  artifacts: Artifacts = import.meta.hot?.data.artifacts ?? map({});\r\n\r\n  showWorkbench: WritableAtom<boolean> = import.meta.hot?.data.showWorkbench ?? atom(false);\r\n  currentView: WritableAtom<WorkbenchViewType> = import.meta.hot?.data.currentView ?? atom('code');\r\n  unsavedFiles: WritableAtom<Set<string>> = import.meta.hot?.data.unsavedFiles ?? atom(new Set<string>());\r\n  actionAlert: WritableAtom<ActionAlert | undefined> =\r\n    import.meta.hot?.data.unsavedFiles ?? atom<ActionAlert | undefined>(undefined);\r\n  modifiedFiles = new Set<string>();\r\n  artifactIdList: string[] = [];\r\n  #globalExecutionQueue = Promise.resolve();\r\n  constructor() {\r\n    if (import.meta.hot) {\r\n      import.meta.hot.data.artifacts = this.artifacts;\r\n      import.meta.hot.data.unsavedFiles = this.unsavedFiles;\r\n      import.meta.hot.data.showWorkbench = this.showWorkbench;\r\n      import.meta.hot.data.currentView = this.currentView;\r\n      import.meta.hot.data.actionAlert = this.actionAlert;\r\n    }\r\n  }\r\n\r\n  addToExecutionQueue(callback: () => Promise<void>) {\r\n    this.#globalExecutionQueue = this.#globalExecutionQueue.then(() => callback());\r\n  }\r\n\r\n  get previews() {\r\n    return this.#previewsStore.previews;\r\n  }\r\n\r\n  get files() {\r\n    return this.#filesStore.files;\r\n  }\r\n\r\n  get currentDocument(): ReadableAtom<EditorDocument | undefined> {\r\n    return this.#editorStore.currentDocument;\r\n  }\r\n\r\n  get selectedFile(): ReadableAtom<string | undefined> {\r\n    return this.#editorStore.selectedFile;\r\n  }\r\n\r\n  get firstArtifact(): ArtifactState | undefined {\r\n    return this.#getArtifact(this.artifactIdList[0]);\r\n  }\r\n\r\n  get filesCount(): number {\r\n    return this.#filesStore.filesCount;\r\n  }\r\n\r\n  get showTerminal() {\r\n    return this.#terminalStore.showTerminal;\r\n  }\r\n  get boltTerminal() {\r\n    return this.#terminalStore.boltTerminal;\r\n  }\r\n  get alert() {\r\n    return this.actionAlert;\r\n  }\r\n  clearAlert() {\r\n    this.actionAlert.set(undefined);\r\n  }\r\n\r\n  toggleTerminal(value?: boolean) {\r\n    this.#terminalStore.toggleTerminal(value);\r\n  }\r\n\r\n  attachTerminal(terminal: ITerminal) {\r\n    this.#terminalStore.attachTerminal(terminal);\r\n  }\r\n  attachBoltTerminal(terminal: ITerminal) {\r\n    this.#terminalStore.attachBoltTerminal(terminal);\r\n  }\r\n\r\n  onTerminalResize(cols: number, rows: number) {\r\n    this.#terminalStore.onTerminalResize(cols, rows);\r\n  }\r\n\r\n  setDocuments(files: FileMap) {\r\n    this.#editorStore.setDocuments(files);\r\n\r\n    if (this.#filesStore.filesCount > 0 && this.currentDocument.get() === undefined) {\r\n      // we find the first file and select it\r\n      for (const [filePath, dirent] of Object.entries(files)) {\r\n        if (dirent?.type === 'file') {\r\n          this.setSelectedFile(filePath);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setShowWorkbench(show: boolean) {\r\n    this.showWorkbench.set(show);\r\n  }\r\n\r\n  setCurrentDocumentContent(newContent: string) {\r\n    const filePath = this.currentDocument.get()?.filePath;\r\n\r\n    if (!filePath) {\r\n      return;\r\n    }\r\n\r\n    const originalContent = this.#filesStore.getFile(filePath)?.content;\r\n    const unsavedChanges = originalContent !== undefined && originalContent !== newContent;\r\n\r\n    this.#editorStore.updateFile(filePath, newContent);\r\n\r\n    const currentDocument = this.currentDocument.get();\r\n\r\n    if (currentDocument) {\r\n      const previousUnsavedFiles = this.unsavedFiles.get();\r\n\r\n      if (unsavedChanges && previousUnsavedFiles.has(currentDocument.filePath)) {\r\n        return;\r\n      }\r\n\r\n      const newUnsavedFiles = new Set(previousUnsavedFiles);\r\n\r\n      if (unsavedChanges) {\r\n        newUnsavedFiles.add(currentDocument.filePath);\r\n      } else {\r\n        newUnsavedFiles.delete(currentDocument.filePath);\r\n      }\r\n\r\n      this.unsavedFiles.set(newUnsavedFiles);\r\n    }\r\n  }\r\n\r\n  setCurrentDocumentScrollPosition(position: ScrollPosition) {\r\n    const editorDocument = this.currentDocument.get();\r\n\r\n    if (!editorDocument) {\r\n      return;\r\n    }\r\n\r\n    const { filePath } = editorDocument;\r\n\r\n    this.#editorStore.updateScrollPosition(filePath, position);\r\n  }\r\n\r\n  setSelectedFile(filePath: string | undefined) {\r\n    this.#editorStore.setSelectedFile(filePath);\r\n  }\r\n\r\n  async saveFile(filePath: string) {\r\n    const documents = this.#editorStore.documents.get();\r\n    const document = documents[filePath];\r\n\r\n    if (document === undefined) {\r\n      return;\r\n    }\r\n\r\n    await this.#filesStore.saveFile(filePath, document.value);\r\n\r\n    const newUnsavedFiles = new Set(this.unsavedFiles.get());\r\n    newUnsavedFiles.delete(filePath);\r\n\r\n    this.unsavedFiles.set(newUnsavedFiles);\r\n  }\r\n\r\n  async saveCurrentDocument() {\r\n    const currentDocument = this.currentDocument.get();\r\n\r\n    if (currentDocument === undefined) {\r\n      return;\r\n    }\r\n\r\n    await this.saveFile(currentDocument.filePath);\r\n  }\r\n\r\n  resetCurrentDocument() {\r\n    const currentDocument = this.currentDocument.get();\r\n\r\n    if (currentDocument === undefined) {\r\n      return;\r\n    }\r\n\r\n    const { filePath } = currentDocument;\r\n    const file = this.#filesStore.getFile(filePath);\r\n\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    this.setCurrentDocumentContent(file.content);\r\n  }\r\n\r\n  async saveAllFiles() {\r\n    for (const filePath of this.unsavedFiles.get()) {\r\n      await this.saveFile(filePath);\r\n    }\r\n  }\r\n\r\n  getFileModifcations() {\r\n    return this.#filesStore.getFileModifications();\r\n  }\r\n\r\n  resetAllFileModifications() {\r\n    this.#filesStore.resetFileModifications();\r\n  }\r\n\r\n  abortAllActions() {\r\n    // TODO: what do we wanna do and how do we wanna recover from this?\r\n  }\r\n\r\n  setReloadedMessages(messages: string[]) {\r\n    this.#reloadedMessages = new Set(messages);\r\n  }\r\n\r\n  addArtifact({ messageId, title, id, type }: ArtifactCallbackData) {\r\n    const artifact = this.#getArtifact(messageId);\r\n\r\n    if (artifact) {\r\n      return;\r\n    }\r\n\r\n    if (!this.artifactIdList.includes(messageId)) {\r\n      this.artifactIdList.push(messageId);\r\n    }\r\n\r\n    this.artifacts.setKey(messageId, {\r\n      id,\r\n      title,\r\n      closed: false,\r\n      type,\r\n      runner: new ActionRunner(\r\n        webcontainer,\r\n        () => this.boltTerminal,\r\n        (alert) => {\r\n          if (this.#reloadedMessages.has(messageId)) {\r\n            return;\r\n          }\r\n\r\n          this.actionAlert.set(alert);\r\n        },\r\n      ),\r\n    });\r\n  }\r\n\r\n  updateArtifact({ messageId }: ArtifactCallbackData, state: Partial<ArtifactUpdateState>) {\r\n    const artifact = this.#getArtifact(messageId);\r\n\r\n    if (!artifact) {\r\n      return;\r\n    }\r\n\r\n    this.artifacts.setKey(messageId, { ...artifact, ...state });\r\n  }\r\n  addAction(data: ActionCallbackData) {\r\n    // this._addAction(data);\r\n\r\n    this.addToExecutionQueue(() => this._addAction(data));\r\n  }\r\n  async _addAction(data: ActionCallbackData) {\r\n    const { messageId } = data;\r\n\r\n    const artifact = this.#getArtifact(messageId);\r\n\r\n    if (!artifact) {\r\n      unreachable('Artifact not found');\r\n    }\r\n\r\n    return artifact.runner.addAction(data);\r\n  }\r\n\r\n  runAction(data: ActionCallbackData, isStreaming: boolean = false) {\r\n    if (isStreaming) {\r\n      this.actionStreamSampler(data, isStreaming);\r\n    } else {\r\n      this.addToExecutionQueue(() => this._runAction(data, isStreaming));\r\n    }\r\n  }\r\n  async _runAction(data: ActionCallbackData, isStreaming: boolean = false) {\r\n    const { messageId } = data;\r\n\r\n    const artifact = this.#getArtifact(messageId);\r\n\r\n    if (!artifact) {\r\n      unreachable('Artifact not found');\r\n    }\r\n\r\n    const action = artifact.runner.actions.get()[data.actionId];\r\n\r\n    if (!action || action.executed) {\r\n      return;\r\n    }\r\n\r\n    if (data.action.type === 'file') {\r\n      const wc = await webcontainer;\r\n      const fullPath = path.join(wc.workdir, data.action.filePath);\r\n\r\n      if (this.selectedFile.value !== fullPath) {\r\n        this.setSelectedFile(fullPath);\r\n      }\r\n\r\n      if (this.currentView.value !== 'code') {\r\n        this.currentView.set('code');\r\n      }\r\n\r\n      const doc = this.#editorStore.documents.get()[fullPath];\r\n\r\n      if (!doc) {\r\n        await artifact.runner.runAction(data, isStreaming);\r\n      }\r\n\r\n      this.#editorStore.updateFile(fullPath, data.action.content);\r\n\r\n      if (!isStreaming) {\r\n        await artifact.runner.runAction(data);\r\n        this.resetAllFileModifications();\r\n      }\r\n    } else {\r\n      await artifact.runner.runAction(data);\r\n    }\r\n  }\r\n\r\n  actionStreamSampler = createSampler(async (data: ActionCallbackData, isStreaming: boolean = false) => {\r\n    return await this._runAction(data, isStreaming);\r\n  }, 100); // TODO: remove this magic number to have it configurable\r\n\r\n  #getArtifact(id: string) {\r\n    const artifacts = this.artifacts.get();\r\n    return artifacts[id];\r\n  }\r\n\r\n  async downloadZip() {\r\n    const zip = new JSZip();\r\n    const files = this.files.get();\r\n\r\n    // Get the project name from the description input, or use a default name\r\n    const projectName = (description.value ?? 'project').toLocaleLowerCase().split(' ').join('_');\r\n\r\n    // Generate a simple 6-character hash based on the current timestamp\r\n    const timestampHash = Date.now().toString(36).slice(-6);\r\n    const uniqueProjectName = `${projectName}_${timestampHash}`;\r\n\r\n    for (const [filePath, dirent] of Object.entries(files)) {\r\n      if (dirent?.type === 'file' && !dirent.isBinary) {\r\n        const relativePath = extractRelativePath(filePath);\r\n\r\n        // split the path into segments\r\n        const pathSegments = relativePath.split('/');\r\n\r\n        // if there's more than one segment, we need to create folders\r\n        if (pathSegments.length > 1) {\r\n          let currentFolder = zip;\r\n\r\n          for (let i = 0; i < pathSegments.length - 1; i++) {\r\n            currentFolder = currentFolder.folder(pathSegments[i])!;\r\n          }\r\n          currentFolder.file(pathSegments[pathSegments.length - 1], dirent.content);\r\n        } else {\r\n          // if there's only one segment, it's a file in the root\r\n          zip.file(relativePath, dirent.content);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Generate the zip file and save it\r\n    const content = await zip.generateAsync({ type: 'blob' });\r\n    saveAs(content, `${uniqueProjectName}.zip`);\r\n  }\r\n\r\n  async syncFiles(targetHandle: FileSystemDirectoryHandle) {\r\n    const files = this.files.get();\r\n    const syncedFiles = [];\r\n\r\n    for (const [filePath, dirent] of Object.entries(files)) {\r\n      if (dirent?.type === 'file' && !dirent.isBinary) {\r\n        const relativePath = extractRelativePath(filePath);\r\n        const pathSegments = relativePath.split('/');\r\n        let currentHandle = targetHandle;\r\n\r\n        for (let i = 0; i < pathSegments.length - 1; i++) {\r\n          currentHandle = await currentHandle.getDirectoryHandle(pathSegments[i], { create: true });\r\n        }\r\n\r\n        // create or get the file\r\n        const fileHandle = await currentHandle.getFileHandle(pathSegments[pathSegments.length - 1], {\r\n          create: true,\r\n        });\r\n\r\n        // write the file content\r\n        const writable = await fileHandle.createWritable();\r\n        await writable.write(dirent.content);\r\n        await writable.close();\r\n\r\n        syncedFiles.push(relativePath);\r\n      }\r\n    }\r\n\r\n    return syncedFiles;\r\n  }\r\n\r\n  async pushToGitHub(\r\n    repoName: string,\r\n    commitMessage?: string,\r\n    githubUsername?: string,\r\n    ghToken?: string,\r\n    isPrivate: boolean = false,\r\n  ) {\r\n    try {\r\n      // Use cookies if username and token are not provided\r\n      const githubToken = ghToken || Cookies.get('githubToken');\r\n      const owner = githubUsername || Cookies.get('githubUsername');\r\n\r\n      if (!githubToken || !owner) {\r\n        throw new Error('GitHub token or username is not set in cookies or provided.');\r\n      }\r\n\r\n      // Initialize Octokit with the auth token\r\n      const octokit = new Octokit({ auth: githubToken });\r\n\r\n      // Check if the repository already exists before creating it\r\n      let repo: RestEndpointMethodTypes['repos']['get']['response']['data'];\r\n\r\n      try {\r\n        const resp = await octokit.repos.get({ owner, repo: repoName });\r\n        repo = resp.data;\r\n      } catch (error) {\r\n        if (error instanceof Error && 'status' in error && error.status === 404) {\r\n          // Repository doesn't exist, so create a new one\r\n          const { data: newRepo } = await octokit.repos.createForAuthenticatedUser({\r\n            name: repoName,\r\n            private: isPrivate,\r\n            auto_init: true,\r\n          });\r\n          repo = newRepo;\r\n        } else {\r\n          console.log('cannot create repo!');\r\n          throw error; // Some other error occurred\r\n        }\r\n      }\r\n\r\n      // Get all files\r\n      const files = this.files.get();\r\n\r\n      if (!files || Object.keys(files).length === 0) {\r\n        throw new Error('No files found to push');\r\n      }\r\n\r\n      // Create blobs for each file\r\n      const blobs = await Promise.all(\r\n        Object.entries(files).map(async ([filePath, dirent]) => {\r\n          if (dirent?.type === 'file' && dirent.content) {\r\n            const { data: blob } = await octokit.git.createBlob({\r\n              owner: repo.owner.login,\r\n              repo: repo.name,\r\n              content: Buffer.from(dirent.content).toString('base64'),\r\n              encoding: 'base64',\r\n            });\r\n            return { path: extractRelativePath(filePath), sha: blob.sha };\r\n          }\r\n\r\n          return null;\r\n        }),\r\n      );\r\n\r\n      const validBlobs = blobs.filter(Boolean); // Filter out any undefined blobs\r\n\r\n      if (validBlobs.length === 0) {\r\n        throw new Error('No valid files to push');\r\n      }\r\n\r\n      // Get the latest commit SHA (assuming main branch, update dynamically if needed)\r\n      const { data: ref } = await octokit.git.getRef({\r\n        owner: repo.owner.login,\r\n        repo: repo.name,\r\n        ref: `heads/${repo.default_branch || 'main'}`, // Handle dynamic branch\r\n      });\r\n      const latestCommitSha = ref.object.sha;\r\n\r\n      // Create a new tree\r\n      const { data: newTree } = await octokit.git.createTree({\r\n        owner: repo.owner.login,\r\n        repo: repo.name,\r\n        base_tree: latestCommitSha,\r\n        tree: validBlobs.map((blob) => ({\r\n          path: blob!.path,\r\n          mode: '100644',\r\n          type: 'blob',\r\n          sha: blob!.sha,\r\n        })),\r\n      });\r\n\r\n      // Create a new commit\r\n      const { data: newCommit } = await octokit.git.createCommit({\r\n        owner: repo.owner.login,\r\n        repo: repo.name,\r\n        message: commitMessage || 'Initial commit from your app',\r\n        tree: newTree.sha,\r\n        parents: [latestCommitSha],\r\n      });\r\n\r\n      // Update the reference\r\n      await octokit.git.updateRef({\r\n        owner: repo.owner.login,\r\n        repo: repo.name,\r\n        ref: `heads/${repo.default_branch || 'main'}`, // Handle dynamic branch\r\n        sha: newCommit.sha,\r\n      });\r\n\r\n      return repo.html_url; // Return the URL instead of showing alert\r\n    } catch (error) {\r\n      console.error('Error pushing to GitHub:', error);\r\n      throw error; // Rethrow the error for further handling\r\n    }\r\n  }\r\n}\r\n\r\nexport const workbenchStore = new WorkbenchStore();\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5033, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/components/workbench/Workbench.client.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { useStore } from '@nanostores/react';\r\nimport { workbenchStore } from '../../lib/stores/workbench';\r\nimport { createScopedLogger } from '../../utils/logger';\r\n\r\nconst logger = createScopedLogger('Workbench');\r\n\r\ninterface WorkbenchProps {\r\n  chatStarted?: boolean;\r\n  isStreaming?: boolean;\r\n}\r\n\r\n/**\r\n * Version simplifiée du Workbench pour la migration Next.js\r\n * Cette version est un \"stub\" qui sera progressivement complété\r\n */\r\nexport const Workbench: React.FC<WorkbenchProps> = ({ chatStarted, isStreaming }) => {\r\n  const [activePanel, setActivePanel] = useState<'editor' | 'git' | 'terminal'>('editor');\r\n  // @ts-ignore: Ignorer temporairement l'erreur de type pendant la migration\r\n  const workbench = useStore(workbenchStore);\r\n  const activePath = workbench.activePath;\r\n  const files = workbench.files;\r\n\r\n  const SimplePlaceholder = ({ children, className }: { children?: React.ReactNode, className?: string }) => (\r\n    <div className={className || \"p-4 border rounded my-2 bg-gray-50\"}>\r\n      {children || \"Composant en cours de migration...\"}\r\n    </div>\r\n  );\r\n\r\n  // Afficher un message différent selon l'état du chat\r\n  const renderWorkbenchContent = () => {\r\n    if (!chatStarted) {\r\n      return (\r\n        <div className=\"flex items-center justify-center h-full text-center p-4\">\r\n          <div>\r\n            <div className=\"text-5xl mb-4 opacity-40\">🖥️</div>\r\n            <h3 className=\"font-semibold mb-2\">Workbench</h3>\r\n            <p className=\"text-sm text-gray-500\">\r\n              Une fois la conversation démarrée, vos fichiers et projets apparaîtront ici\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (isStreaming) {\r\n      return (\r\n        <div className=\"p-4\">\r\n          <div className=\"animate-pulse mb-4\">\r\n            <div className=\"h-6 bg-gray-200 rounded w-3/4 mb-2\"></div>\r\n            <div className=\"h-6 bg-gray-200 rounded w-1/2\"></div>\r\n          </div>\r\n          <div className=\"rounded-lg border p-4 bg-gray-50\">\r\n            <div className=\"text-center py-8\">\r\n              <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-blue-400 border-r-transparent\"></div>\r\n              <p className=\"mt-4 text-gray-600\">Traitement en cours...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"p-4\">\r\n        <div className=\"panel-tabs mb-4 border-b\">\r\n          <div className=\"flex\">\r\n            <button \r\n              className={`px-4 py-2 ${activePanel === 'editor' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\r\n              onClick={() => setActivePanel('editor')}\r\n            >\r\n              Éditeur\r\n            </button>\r\n            <button \r\n              className={`px-4 py-2 ${activePanel === 'git' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\r\n              onClick={() => setActivePanel('git')}\r\n            >\r\n              Git\r\n            </button>\r\n            <button \r\n              className={`px-4 py-2 ${activePanel === 'terminal' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\r\n              onClick={() => setActivePanel('terminal')}\r\n            >\r\n              Terminal\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"panel-content\">\r\n          {activePanel === 'editor' && (\r\n            <div className=\"rounded-lg border p-4\">\r\n              {activePath ? (\r\n                <>\r\n                  <div className=\"mb-2 text-sm text-gray-600 border-b pb-2\">\r\n                    {activePath}\r\n                  </div>\r\n                  <div className=\"min-h-[200px] bg-gray-100 p-2 rounded font-mono text-sm whitespace-pre overflow-auto\">\r\n                    {files[activePath] || '// Contenu du fichier non disponible'}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"text-center py-8\">\r\n                  <p className=\"text-gray-600\">Aucun fichier sélectionné</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          {activePanel === 'git' && (\r\n            <SimplePlaceholder>\r\n              Visualiseur Git - En cours de migration\r\n            </SimplePlaceholder>\r\n          )}\r\n          \r\n          {activePanel === 'terminal' && (\r\n            <SimplePlaceholder>\r\n              Terminal - En cours de migration\r\n            </SimplePlaceholder>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"workbench border-l border-gray-200 flex flex-col h-full\">\r\n      <div className=\"flex-1 overflow-auto\">\r\n        {renderWorkbenchContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workbench;\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;;;AALA;;;;;;AAOA,MAAM,SAAS,CAAA,GAAA,+GAAA,CAAA,qBAAkB,AAAD,EAAE;AAW3B,MAAM,YAAsC,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE;IAC9E,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAiC;IAC9E,2EAA2E;IAC3E,MAAM,YAAY,CAAA,GAAA,iQAAA,CAAA,WAAQ,AAAD,EAAE,0HAAA,CAAA,iBAAc;IACzC,MAAM,aAAa,UAAU,UAAU;IACvC,MAAM,QAAQ,UAAU,KAAK;IAE7B,MAAM,oBAAoB,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAsD,iBACpG,6VAAC;YAAI,WAAW,aAAa;sBAC1B,YAAY;;;;;;IAIjB,qDAAqD;IACrD,MAAM,yBAAyB;QAC7B,IAAI,CAAC,aAAa;YAChB,qBACE,6VAAC;gBAAI,WAAU;0BACb,cAAA,6VAAC;;sCACC,6VAAC;4BAAI,WAAU;sCAA2B;;;;;;sCAC1C,6VAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,6VAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;QAM7C;QAEA,IAAI,aAAa;YACf,qBACE,6VAAC;gBAAI,WAAU;;kCACb,6VAAC;wBAAI,WAAU;;0CACb,6VAAC;gCAAI,WAAU;;;;;;0CACf,6VAAC;gCAAI,WAAU;;;;;;;;;;;;kCAEjB,6VAAC;wBAAI,WAAU;kCACb,cAAA,6VAAC;4BAAI,WAAU;;8CACb,6VAAC;oCAAI,WAAU;;;;;;8CACf,6VAAC;oCAAE,WAAU;8CAAqB;;;;;;;;;;;;;;;;;;;;;;;QAK5C;QAEA,qBACE,6VAAC;YAAI,WAAU;;8BACb,6VAAC;oBAAI,WAAU;8BACb,cAAA,6VAAC;wBAAI,WAAU;;0CACb,6VAAC;gCACC,WAAW,CAAC,UAAU,EAAE,gBAAgB,WAAW,6CAA6C,iBAAiB;gCACjH,SAAS,IAAM,eAAe;0CAC/B;;;;;;0CAGD,6VAAC;gCACC,WAAW,CAAC,UAAU,EAAE,gBAAgB,QAAQ,6CAA6C,iBAAiB;gCAC9G,SAAS,IAAM,eAAe;0CAC/B;;;;;;0CAGD,6VAAC;gCACC,WAAW,CAAC,UAAU,EAAE,gBAAgB,aAAa,6CAA6C,iBAAiB;gCACnH,SAAS,IAAM,eAAe;0CAC/B;;;;;;;;;;;;;;;;;8BAML,6VAAC;oBAAI,WAAU;;wBACZ,gBAAgB,0BACf,6VAAC;4BAAI,WAAU;sCACZ,2BACC;;kDACE,6VAAC;wCAAI,WAAU;kDACZ;;;;;;kDAEH,6VAAC;wCAAI,WAAU;kDACZ,KAAK,CAAC,WAAW,IAAI;;;;;;;6DAI1B,6VAAC;gCAAI,WAAU;0CACb,cAAA,6VAAC;oCAAE,WAAU;8CAAgB;;;;;;;;;;;;;;;;wBAMpC,gBAAgB,uBACf,6VAAC;sCAAkB;;;;;;wBAKpB,gBAAgB,4BACf,6VAAC;sCAAkB;;;;;;;;;;;;;;;;;;IAO7B;IAEA,qBACE,6VAAC;QAAI,WAAU;kBACb,cAAA,6VAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;uCAEe","debugId":null}},
    {"offset": {"line": 5316, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/components/sidebar/Menu.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\n\r\ninterface MenuProps {\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * Version simplifiée du Menu pour la migration Next.js\r\n */\r\nexport const Menu: React.FC<MenuProps> = ({ className = '' }) => {\r\n  const [activeItem, setActiveItem] = useState<string>('chat');\r\n\r\n  // Données de menu simplifiées pour la migration\r\n  const menuItems = [\r\n    { id: 'chat', label: 'Chat', icon: '💬' },\r\n    { id: 'projects', label: 'Projets', icon: '📁' },\r\n    { id: 'settings', label: 'Paramètres', icon: '⚙️' },\r\n    { id: 'help', label: 'Aide', icon: '❓' },\r\n  ];\r\n\r\n  return (\r\n    <nav className={`menu p-2 bg-gray-50 border-r border-gray-200 ${className}`}>\r\n      <div className=\"logo flex items-center pl-4 py-2 mb-4\">\r\n        <span className=\"text-xl font-bold text-blue-600\">BoltVision</span>\r\n      </div>\r\n      \r\n      <ul className=\"menu-items\">\r\n        {menuItems.map((item) => (\r\n          <li key={item.id} className=\"mb-1\">\r\n            <button\r\n              className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\r\n                activeItem === item.id\r\n                  ? 'bg-blue-100 text-blue-700'\r\n                  : 'hover:bg-gray-100 text-gray-700'\r\n              }`}\r\n              onClick={() => setActiveItem(item.id)}\r\n            >\r\n              <span className=\"mr-3\">{item.icon}</span>\r\n              {item.label}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      \r\n      <div className=\"mt-auto pt-4 pb-2 px-4 border-t border-gray-200 text-sm text-gray-500\">\r\n        <div className=\"flex items-center mb-2\">\r\n          <div className=\"w-2 h-2 rounded-full bg-green-500 mr-2\"></div>\r\n          <span>Version Next.js</span>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAWO,MAAM,OAA4B,CAAC,EAAE,YAAY,EAAE,EAAE;IAC1D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAU;IAErD,gDAAgD;IAChD,MAAM,YAAY;QAChB;YAAE,IAAI;YAAQ,OAAO;YAAQ,MAAM;QAAK;QACxC;YAAE,IAAI;YAAY,OAAO;YAAW,MAAM;QAAK;QAC/C;YAAE,IAAI;YAAY,OAAO;YAAc,MAAM;QAAK;QAClD;YAAE,IAAI;YAAQ,OAAO;YAAQ,MAAM;QAAI;KACxC;IAED,qBACE,6VAAC;QAAI,WAAW,CAAC,6CAA6C,EAAE,WAAW;;0BACzE,6VAAC;gBAAI,WAAU;0BACb,cAAA,6VAAC;oBAAK,WAAU;8BAAkC;;;;;;;;;;;0BAGpD,6VAAC;gBAAG,WAAU;0BACX,UAAU,GAAG,CAAC,CAAC,qBACd,6VAAC;wBAAiB,WAAU;kCAC1B,cAAA,6VAAC;4BACC,WAAW,CAAC,wDAAwD,EAClE,eAAe,KAAK,EAAE,GAClB,8BACA,mCACJ;4BACF,SAAS,IAAM,cAAc,KAAK,EAAE;;8CAEpC,6VAAC;oCAAK,WAAU;8CAAQ,KAAK,IAAI;;;;;;gCAChC,KAAK,KAAK;;;;;;;uBAVN,KAAK,EAAE;;;;;;;;;;0BAgBpB,6VAAC;gBAAI,WAAU;0BACb,cAAA,6VAAC;oBAAI,WAAU;;sCACb,6VAAC;4BAAI,WAAU;;;;;;sCACf,6VAAC;sCAAK;;;;;;;;;;;;;;;;;;;;;;;AAKhB;uCAEe","debugId":null}},
    {"offset": {"line": 5445, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/components/chat/Messages.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { forwardRef } from 'react';\r\nimport type { Message } from 'ai';\r\n\r\ninterface MessagesProps {\r\n  messages?: Message[];\r\n  isStreaming?: boolean;\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * Composant Messages pour afficher les messages du chat\r\n * Version simplifiée pour la migration vers Next.js\r\n */\r\nexport const Messages = forwardRef<HTMLDivElement, MessagesProps>(\r\n  ({ messages = [], isStreaming = false, className = '' }, ref) => {\r\n    if (messages.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div ref={ref} className={`messages-container ${className}`}>\r\n        {messages.map((message, index) => {\r\n          const isUser = message.role === 'user';\r\n          const isLast = index === messages.length - 1;\r\n          const isLastAssistant = isLast && !isUser;\r\n          // Extraction du contenu avec gestion de type explicite\r\n          let content = '';\r\n          \r\n          if (typeof message.content === 'string') {\r\n            content = message.content;\r\n          } else if (Array.isArray(message.content)) {\r\n            // @ts-ignore - Ignorer les erreurs de type pendant la migration\r\n            content = message.content.map(item => {\r\n              if (typeof item === 'string') return item;\r\n              // @ts-ignore - Type pour les contenus multimodaux\r\n              return item.type === 'text' ? item.text : '[Content not supported]';\r\n            }).join('');\r\n          } else {\r\n            content = JSON.stringify(message.content);\r\n          }\r\n\r\n          return (\r\n            <div \r\n              key={message.id || index} \r\n              className={`message ${isUser ? 'user-message' : 'assistant-message'} ${isLastAssistant && isStreaming ? 'streaming' : ''} mb-4`}\r\n            >\r\n              <div className=\"message-header flex items-center px-3 py-2 text-sm rounded-t bg-opacity-50\">\r\n                <div className={`w-6 h-6 flex-shrink-0 rounded-full mr-2 ${isUser ? 'bg-blue-500' : 'bg-green-500'} flex items-center justify-center text-white`}>\r\n                  {isUser ? '👤' : '🤖'}\r\n                </div>\r\n                <div className=\"font-medium\">\r\n                  {isUser ? 'Vous' : 'Assistant'}\r\n                </div>\r\n              </div>\r\n              <div className={`message-content p-3 rounded-b whitespace-pre-wrap ${isUser ? 'bg-blue-50' : 'bg-green-50'}`}>\r\n                {content}\r\n                {isLastAssistant && isStreaming && (\r\n                  <span className=\"inline-block w-2 h-4 ml-1 bg-gray-400 animate-pulse\"></span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <style jsx>{`\r\n          .messages-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 16px;\r\n          }\r\n          \r\n          .message {\r\n            max-width: 90%;\r\n            border-radius: 8px;\r\n            overflow: hidden;\r\n            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n          }\r\n          \r\n          .user-message {\r\n            align-self: flex-end;\r\n            margin-left: auto;\r\n          }\r\n          \r\n          .assistant-message {\r\n            align-self: flex-start;\r\n            margin-right: auto;\r\n          }\r\n          \r\n          .message-content {\r\n            font-size: 0.95rem;\r\n            line-height: 1.5;\r\n          }\r\n          \r\n          @keyframes pulse {\r\n            0% { opacity: 0.4; }\r\n            50% { opacity: 1; }\r\n            100% { opacity: 0.4; }\r\n          }\r\n          \r\n          .streaming .message-content::after {\r\n            content: \"\";\r\n            display: inline-block;\r\n            width: 4px;\r\n            height: 16px;\r\n            background-color: currentColor;\r\n            margin-left: 4px;\r\n            animation: pulse 1s infinite;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nMessages.displayName = 'Messages';\r\n\r\nexport default Messages;\r\n"],"names":[],"mappings":";;;;;;AAEA;AAFA;;;;AAeO,MAAM,yBAAW,CAAA,GAAA,oTAAA,CAAA,aAAU,AAAD,EAC/B,CAAC,EAAE,WAAW,EAAE,EAAE,cAAc,KAAK,EAAE,YAAY,EAAE,EAAE,EAAE;IACvD,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,qBACE,6VAAC;QAAI,KAAK;kDAAgB,CAAC,mBAAmB,EAAE,WAAW;;YACxD,SAAS,GAAG,CAAC,CAAC,SAAS;gBACtB,MAAM,SAAS,QAAQ,IAAI,KAAK;gBAChC,MAAM,SAAS,UAAU,SAAS,MAAM,GAAG;gBAC3C,MAAM,kBAAkB,UAAU,CAAC;gBACnC,uDAAuD;gBACvD,IAAI,UAAU;gBAEd,IAAI,OAAO,QAAQ,OAAO,KAAK,UAAU;oBACvC,UAAU,QAAQ,OAAO;gBAC3B,OAAO,IAAI,MAAM,OAAO,CAAC,QAAQ,OAAO,GAAG;oBACzC,gEAAgE;oBAChE,UAAU,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAA;wBAC5B,IAAI,OAAO,SAAS,UAAU,OAAO;wBACrC,kDAAkD;wBAClD,OAAO,KAAK,IAAI,KAAK,SAAS,KAAK,IAAI,GAAG;oBAC5C,GAAG,IAAI,CAAC;gBACV,OAAO;oBACL,UAAU,KAAK,SAAS,CAAC,QAAQ,OAAO;gBAC1C;gBAEA,qBACE,6VAAC;8DAEY,CAAC,QAAQ,EAAE,SAAS,iBAAiB,oBAAoB,CAAC,EAAE,mBAAmB,cAAc,cAAc,GAAG,KAAK,CAAC;;sCAE/H,6VAAC;sEAAc;;8CACb,6VAAC;8EAAe,CAAC,wCAAwC,EAAE,SAAS,gBAAgB,eAAe,4CAA4C,CAAC;8CAC7I,SAAS,OAAO;;;;;;8CAEnB,6VAAC;8EAAc;8CACZ,SAAS,SAAS;;;;;;;;;;;;sCAGvB,6VAAC;sEAAe,CAAC,kDAAkD,EAAE,SAAS,eAAe,eAAe;;gCACzG;gCACA,mBAAmB,6BAClB,6VAAC;8EAAe;;;;;;;;;;;;;mBAdf,QAAQ,EAAE,IAAI;;;;;YAmBzB;;;;;;;;;;;AAiDN;AAGF,SAAS,WAAW,GAAG;uCAER","debugId":null}},
    {"offset": {"line": 5553, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/components/chat/SendButton.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\n\r\ninterface SendButtonProps {\r\n  show: boolean;\r\n  isStreaming: boolean;\r\n  disabled?: boolean;\r\n  onClick: (event: React.MouseEvent) => void;\r\n}\r\n\r\n/**\r\n * Bouton d'envoi de message pour le chat\r\n * Affiche un bouton d'envoi ou d'arrêt selon l'état du streaming\r\n */\r\nexport const SendButton: React.FC<SendButtonProps> = ({\r\n  show,\r\n  isStreaming,\r\n  disabled = false,\r\n  onClick,\r\n}) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      disabled={disabled}\r\n      className={`\r\n        absolute right-3 top-4 p-2 rounded-full \r\n        ${isStreaming ? 'bg-red-100 hover:bg-red-200' : 'bg-blue-100 hover:bg-blue-200'}\r\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\r\n        transition-colors duration-150 ease-in-out\r\n      `}\r\n      onClick={onClick}\r\n      aria-label={isStreaming ? 'Stop generating' : 'Send message'}\r\n    >\r\n      {isStreaming ? (\r\n        <div className=\"i-ph:square-bold text-red-600 text-lg\" />\r\n      ) : (\r\n        <div className=\"i-ph:paper-plane-right-fill text-blue-600 text-lg\" />\r\n      )}\r\n      \r\n      <style jsx>{`\r\n        button {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          width: 36px;\r\n          height: 36px;\r\n          transform: translateY(-50%);\r\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        }\r\n        \r\n        button:hover {\r\n          transform: translateY(-50%) scale(1.05);\r\n        }\r\n        \r\n        button:active {\r\n          transform: translateY(-50%) scale(0.98);\r\n        }\r\n        \r\n        /* Fallback icons using emojis if the icons don't load */\r\n        .i-ph\\\\:square-bold:empty::before {\r\n          content: \"■\";\r\n        }\r\n        \r\n        .i-ph\\\\:paper-plane-right-fill:empty::before {\r\n          content: \"➤\";\r\n        }\r\n      `}</style>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SendButton;\r\n"],"names":[],"mappings":";;;;;;AAAA;;;AAeO,MAAM,aAAwC,CAAC,EACpD,IAAI,EACJ,WAAW,EACX,WAAW,KAAK,EAChB,OAAO,EACR;IACC,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6VAAC;QACC,MAAK;QACL,UAAU;QAOV,SAAS;QACT,cAAY,cAAc,oBAAoB;kDAPnC,CAAC;;QAEV,EAAE,cAAc,gCAAgC,gCAAgC;QAChF,EAAE,WAAW,kCAAkC,iBAAiB;;MAElE,CAAC;;YAIA,4BACC,6VAAC;0DAAc;;;;;qCAEf,6VAAC;0DAAc;;;;;;;;;;;;;;;;AAiCvB;uCAEe","debugId":null}},
    {"offset": {"line": 5609, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/components/chat/BaseChat.tsx"],"sourcesContent":["'use client';\r\n\r\nimport type { JSONValue, Message } from 'ai';\r\nimport React, { type RefCallback, useEffect, useState } from 'react';\r\nimport { classNames } from '../../utils/classNames';\r\nimport type { ProviderInfo } from '../../types/model';\r\nimport styles from './BaseChat.module.scss';\r\nimport { Workbench } from '../workbench/Workbench.client';\r\nimport { Menu } from '../sidebar/Menu';\r\nimport { Messages } from './Messages';\r\nimport { SendButton } from './SendButton';\r\n\r\n// Type actionAlert simplifié\r\ninterface ActionAlert {\r\n  type: string;\r\n  message: string;\r\n}\r\n\r\ninterface BaseChatProps {\r\n  textareaRef?: React.RefObject<HTMLTextAreaElement> | undefined;\r\n  messageRef?: RefCallback<HTMLDivElement> | undefined;\r\n  scrollRef?: RefCallback<HTMLDivElement> | undefined;\r\n  showChat?: boolean;\r\n  chatStarted?: boolean;\r\n  isStreaming?: boolean;\r\n  messages?: Message[];\r\n  description?: string;\r\n  enhancingPrompt?: boolean;\r\n  promptEnhanced?: boolean;\r\n  input?: string;\r\n  model?: string;\r\n  setModel?: (model: string) => void;\r\n  provider?: ProviderInfo;\r\n  setProvider?: (provider: ProviderInfo) => void;\r\n  providerList?: ProviderInfo[];\r\n  handleStop?: () => void;\r\n  sendMessage?: (event: React.UIEvent, messageInput?: string) => void;\r\n  handleInputChange?: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  enhancePrompt?: () => void;\r\n  importChat?: (description: string, messages: Message[]) => Promise<void>;\r\n  exportChat?: () => void;\r\n  uploadedFiles?: File[];\r\n  setUploadedFiles?: (files: File[]) => void;\r\n  imageDataList?: string[];\r\n  setImageDataList?: (dataList: string[]) => void;\r\n  actionAlert?: ActionAlert;\r\n  clearAlert?: () => void;\r\n  data?: JSONValue[] | undefined;\r\n}\r\n\r\n// Composant ClientOnly pour le rendu côté client uniquement\r\nconst ClientOnly = ({ children }: { children: () => React.ReactNode }) => {\r\n  const [hasMounted, setHasMounted] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    setHasMounted(true);\r\n  }, []);\r\n  \r\n  if (!hasMounted) {\r\n    return null;\r\n  }\r\n  \r\n  return <>{children()}</>;\r\n};\r\n\r\n// Implémentation simplifiée de BaseChat\r\nexport const BaseChat = React.forwardRef<HTMLDivElement, BaseChatProps>(\r\n  (\r\n    {\r\n      textareaRef,\r\n      messageRef,\r\n      scrollRef,\r\n      showChat = true,\r\n      chatStarted = false,\r\n      isStreaming = false,\r\n      model,\r\n      setModel,\r\n      provider,\r\n      input = '',\r\n      enhancingPrompt,\r\n      handleInputChange,\r\n      enhancePrompt,\r\n      sendMessage,\r\n      handleStop,\r\n      messages = [],\r\n      actionAlert,\r\n      clearAlert,\r\n    },\r\n    ref,\r\n  ) => {\r\n    // SimplePlaceholder pour remplacer temporairement les composants manquants\r\n    const SimplePlaceholder = ({ children, className }: { children?: React.ReactNode, className?: string }) => (\r\n      <div className={className || \"p-4 border rounded my-2 bg-gray-50\"}>\r\n        {children || \"Composant en cours de migration...\"}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={classNames(styles.BaseChat, 'relative flex h-full w-full overflow-hidden')}\r\n        data-chat-visible={showChat}\r\n      >\r\n        {/* Menu migré */}\r\n        <ClientOnly>{() => <Menu />}</ClientOnly>\r\n        \r\n        <div className=\"flex flex-col lg:flex-row overflow-y-auto w-full h-full\">\r\n          <div className={classNames(styles.Chat, 'flex flex-col flex-grow lg:min-w-[var(--chat-min-width)] h-full')}>\r\n            {!chatStarted && (\r\n              <div id=\"intro\" className=\"mt-[16vh] max-w-chat mx-auto text-center px-4 lg:px-0\">\r\n                <h1 className=\"text-3xl lg:text-6xl font-bold text-bolt-elements-textPrimary mb-4 animate-fade-in\">\r\n                  Where ideas begin\r\n                </h1>\r\n                <p className=\"text-md lg:text-xl mb-8 text-bolt-elements-textSecondary animate-fade-in animation-delay-200\">\r\n                  Bring ideas to life in seconds or get help on existing projects.\r\n                </p>\r\n              </div>\r\n            )}\r\n            \r\n            <div className={classNames('pt-6 px-2 sm:px-6', { 'h-full flex flex-col pb-4 overflow-y-auto': chatStarted })} ref={scrollRef}>\r\n              {chatStarted && (\r\n                <div className=\"flex-1 w-full max-w-chat pb-6 mx-auto z-1\">\r\n                  {/* Messages avec composant dédié */}\r\n                  <Messages\r\n                    ref={messageRef}\r\n                    messages={messages}\r\n                    isStreaming={isStreaming}\r\n                    className=\"flex flex-col\"\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"flex flex-col gap-4 w-full max-w-chat mx-auto z-prompt\">\r\n                {actionAlert && (\r\n                  <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded\">{actionAlert.message}</div>\r\n                )}\r\n                \r\n                <div className=\"bg-bolt-elements-background-depth-2 p-3 rounded-lg border border-bolt-elements-borderColor relative w-full max-w-chat mx-auto z-prompt\">\r\n                  {/* Zone de saisie */}\r\n                  <div className=\"relative shadow-xs border border-bolt-elements-borderColor backdrop-blur rounded-lg\">\r\n                    <textarea\r\n                      ref={textareaRef}\r\n                      className=\"w-full pl-4 pt-4 pr-16 outline-none resize-none bg-transparent text-sm\"\r\n                      value={input}\r\n                      onChange={(event) => handleInputChange?.(event)}\r\n                      onKeyDown={(event) => {\r\n                        if (event.key === 'Enter' && !event.shiftKey) {\r\n                          event.preventDefault();\r\n                          if (isStreaming) {\r\n                            handleStop?.();\r\n                            return;\r\n                          }\r\n                          sendMessage?.(event);\r\n                        }\r\n                      }}\r\n                      placeholder=\"How can Bolt help you today?\"\r\n                    />\r\n                    \r\n                    {/* Bouton d'envoi avec composant dédié */}\r\n                    <SendButton \r\n                      show={input.length > 0 || isStreaming}\r\n                      isStreaming={isStreaming} \r\n                      onClick={(e) => {\r\n                        if (isStreaming) {\r\n                          handleStop?.();\r\n                        } else if (input.length > 0) {\r\n                          sendMessage?.(e);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {!chatStarted && (\r\n              <div className=\"flex flex-col justify-center mt-6 gap-5\">\r\n                <SimplePlaceholder>Exemples et modèles</SimplePlaceholder>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Workbench migré */}\r\n          <ClientOnly>\r\n            {() => <Workbench chatStarted={chatStarted} isStreaming={isStreaming} />}\r\n          </ClientOnly>\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\n// Add display name for debugging\r\nBaseChat.displayName = 'BaseChat';\r\n\r\n// Export as default and named export\r\nexport default BaseChat;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5860, "column": 0}, "map": {"version":3,"sources":["file://D%3A/IA/Applications%20IA/myboltvision/components/git/GitUrlImport.client.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\n\r\ninterface GitUrlImportProps {\r\n  initialUrl?: string;\r\n}\r\n\r\n/**\r\n * Composant d'importation Git - Client Component\r\n * Ajout de la directive 'use client' pour Next.js\r\n */\r\nconst GitUrlImport: React.FC<GitUrlImportProps> = ({ initialUrl = '' }) => {\r\n  const [url, setUrl] = useState(initialUrl);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleImport = async () => {\r\n    if (!url.trim()) {\r\n      setError('Veuillez entrer une URL de repository Git valide');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Simuler l'importation (à remplacer par la vraie implémentation)\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      console.log('Repository importé:', url);\r\n      // Implémentation réelle ici\r\n    } catch (err) {\r\n      setError('Erreur lors de l\\'importation: ' + (err instanceof Error ? err.message : String(err)));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-1 flex flex-col items-center justify-center p-6\">\r\n      <div className=\"w-full max-w-2xl bg-white p-8 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-gray-800\">Importer un repository Git</h2>\r\n        \r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"gitUrl\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            URL du repository\r\n          </label>\r\n          <input\r\n            id=\"gitUrl\"\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={(e) => setUrl(e.target.value)}\r\n            placeholder=\"https://github.com/user/repo\"\r\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            disabled={isLoading}\r\n          />\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded-md\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        <button\r\n          onClick={handleImport}\r\n          disabled={isLoading}\r\n          className=\"w-full py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          {isLoading ? 'Importation en cours...' : 'Importer le repository'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GitUrlImport;\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQA;;;CAGC,GACD,MAAM,eAA4C,CAAC,EAAE,aAAa,EAAE,EAAE;IACpE,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAC/B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,eAAe;QACnB,IAAI,CAAC,IAAI,IAAI,IAAI;YACf,SAAS;YACT;QACF;QAEA,aAAa;QACb,SAAS;QAET,IAAI;YACF,kEAAkE;YAClE,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;YAEjD,QAAQ,GAAG,CAAC,uBAAuB;QACnC,4BAA4B;QAC9B,EAAE,OAAO,KAAK;YACZ,SAAS,oCAAoC,CAAC,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO,IAAI;QAChG,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6VAAC;QAAI,WAAU;kBACb,cAAA,6VAAC;YAAI,WAAU;;8BACb,6VAAC;oBAAG,WAAU;8BAAwC;;;;;;8BAEtD,6VAAC;oBAAI,WAAU;;sCACb,6VAAC;4BAAM,SAAQ;4BAAS,WAAU;sCAA+C;;;;;;sCAGjF,6VAAC;4BACC,IAAG;4BACH,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,OAAO,EAAE,MAAM,CAAC,KAAK;4BACtC,aAAY;4BACZ,WAAU;4BACV,UAAU;;;;;;;;;;;;gBAIb,uBACC,6VAAC;oBAAI,WAAU;8BACZ;;;;;;8BAIL,6VAAC;oBACC,SAAS;oBACT,UAAU;oBACV,WAAU;8BAET,YAAY,4BAA4B;;;;;;;;;;;;;;;;;AAKnD;uCAEe","debugId":null}}]
}