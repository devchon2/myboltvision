(()=>{var e={};e.id=137,e.ids=[137],e.modules={1380:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>h,routeModule:()=>g,serverHooks:()=>f,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>d});var o={};r.r(o),r.d(o,{GET:()=>p});var n=r(18684),s=r(26561),i=r(14488),a=r(31421),u=r(61749);let c=()=>{try{return{commitHash:(0,a.execSync)("git rev-parse HEAD").toString().trim(),branch:(0,a.execSync)("git rev-parse --abbrev-ref HEAD").toString().trim(),commitTime:(0,a.execSync)("git log -1 --format=%cd").toString().trim(),author:(0,a.execSync)("git log -1 --format=%an").toString().trim(),email:(0,a.execSync)("git log -1 --format=%ae").toString().trim(),remoteUrl:(0,a.execSync)("git config --get remote.origin.url").toString().trim(),repoName:(0,a.execSync)("git config --get remote.origin.url").toString().trim().replace(/^.*github.com[:/]/,"").replace(/\.git$/,"")}}catch(e){return console.error("Failed to get local git info:",e),null}},l=async e=>{try{let t={Accept:"application/vnd.github.v3+json"},r=process.env.GITHUB_TOKEN;r&&(t.Authorization=`token ${r}`),console.log("Fetching GitHub info for:",e);let o=await fetch(`https://api.github.com/repos/${e}`,{headers:t});if(!o.ok){if(console.error("GitHub API error:",{status:o.status,statusText:o.statusText,repoFullName:e}),404===o.status&&"stackblitz-labs/bolt.diy"!==e)return l("stackblitz-labs/bolt.diy");throw Error(`GitHub API error: ${o.statusText}`)}let n=await o.json();return console.log("GitHub API response:",n),n}catch(e){return console.error("Failed to get GitHub info:",e),null}};async function p(){let e=c();console.log("Local git info:",e);let t=null;e?.repoName&&(t=await l(e.repoName)),t||(t=await l("stackblitz-labs/bolt.diy"));let r={local:e||{commitHash:"unknown",branch:"unknown",commitTime:"unknown",author:"unknown",email:"unknown",remoteUrl:"unknown",repoName:"unknown"},github:t?{currentRepo:{fullName:t.full_name,defaultBranch:t.default_branch,stars:t.stargazers_count,forks:t.forks_count,openIssues:t.open_issues_count},upstream:t.parent?{fullName:t.parent.full_name,defaultBranch:t.parent.default_branch,stars:t.parent.stargazers_count,forks:t.parent.forks_count}:null}:null,isForked:!!t?.parent,timestamp:new Date().toISOString()};return console.log("Final response:",r),u.NextResponse.json(r)}let g=new n.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/system/git-info/route",pathname:"/api/system/git-info",filename:"route",bundlePath:"app/api/system/git-info/route"},resolvedPagePath:"D:\\IA\\Applications IA\\myboltvision\\app\\api\\system\\git-info\\route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:m,workUnitAsyncStorage:d,serverHooks:f}=g;function h(){return(0,i.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:d})}},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},30214:()=>{},31421:e=>{"use strict";e.exports=require("node:child_process")},38462:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[488,107],()=>r(1380));module.exports=o})();