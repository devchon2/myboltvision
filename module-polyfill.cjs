/**
 * Ce script est une solution complÃ¨te au problÃ¨me de "module is not defined" 
 * et aux problÃ¨mes de loader dans Remix.
 * 
 * Il dÃ©finit global.module dans le contexte Node.js avant de dÃ©marrer l'application
 * et configure Ã©galement d'autres polyfills pour assurer la compatibilitÃ©.
 */

// ==================== Polyfill module global ====================
// VÃ©rifier si global.module n'est pas dÃ©fini et l'initialiser
if (typeof global !== 'undefined' && !global.module) {
  console.log('ğŸ”§ [Polyfill] Initialisation de global.module...');
  global.module = { exports: {} };
  
  // Ajouter Ã©galement globalThis.module pour assurer une compatibilitÃ© maximale
  if (typeof globalThis !== 'undefined') {
    globalThis.module = globalThis.module || global.module;
  }
}

// ==================== Polyfill path-browserify ====================
// CrÃ©er un object path minimal si nÃ©cessaire
if (typeof global !== 'undefined' && !global.path) {
  global.path = {
    join: (...segments) => segments.join('/').replace(/\/+/g, '/'),
    resolve: (...segments) => segments.join('/').replace(/\/+/g, '/'),
    dirname: (path) => path.substring(0, path.lastIndexOf('/') + 1),
    basename: (path) => path.substring(path.lastIndexOf('/') + 1)
  };
}

// ==================== Polyfill Remix Loader ====================
// CrÃ©er une pile de modules Remix pour eviter les erreurs de loader
if (typeof global !== 'undefined') {
  global.__remix_loader_stack = global.__remix_loader_stack || [];
}

// ==================== Gestion des erreurs ====================
// Ajouter un hook pour Process pour intercepter les erreurs connues
if (typeof process !== 'undefined') {
  process.on('uncaughtException', (err) => {
    if (err.message.includes('module is not defined')) {
      console.error('ğŸš¨ Erreur avec module is not defined dÃ©tectÃ©e mais interceptÃ©e');
      console.error('ğŸ‘‰ Si les problÃ¨mes persistent, essayez de relancer l\'application');
    } else if (err.message.includes('loader for route')) {
      console.error('ğŸš¨ Erreur de loader Remix dÃ©tectÃ©e mais interceptÃ©e');
      console.error('ğŸ‘‰ Le problÃ¨me est probablement liÃ© Ã  une incompatibilitÃ© de modules');
    } else {
      console.error('ğŸš¨ Erreur non gÃ©rÃ©e :', err);
    }
  });
}

// ==================== Patch de require pour CommonJS ====================
// CrÃ©er une version simplifiÃ©e de require si elle n'existe pas
if (typeof global !== 'undefined' && typeof global.require === 'undefined') {
  global.require = function(moduleName) {
    if (moduleName === 'path') {
      return global.path;
    }
    if (moduleName === 'module') {
      return { exports: {} };
    }
    
    console.warn(`[Polyfill] Module '${moduleName}' n'est pas disponible dans le polyfill`);
    return {};
  };
}

console.log('âœ… [Polyfill] Module polyfill chargÃ© avec succÃ¨s');
